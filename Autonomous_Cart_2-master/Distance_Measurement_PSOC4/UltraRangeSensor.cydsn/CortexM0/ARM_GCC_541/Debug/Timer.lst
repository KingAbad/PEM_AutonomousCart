ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Timer.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Timer_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	Timer_Enable
  22              		.code	16
  23              		.thumb_func
  24              		.type	Timer_Enable, %function
  25              	Timer_Enable:
  26              	.LFB3:
  27              		.file 1 "Generated_Source\\PSoC4\\Timer.c"
   1:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Timer.c **** * File Name: Timer.c
   3:Generated_Source\PSoC4/Timer.c **** * Version 2.10
   4:Generated_Source\PSoC4/Timer.c **** *
   5:Generated_Source\PSoC4/Timer.c **** * Description:
   6:Generated_Source\PSoC4/Timer.c **** *  This file provides the source code to the API for the Timer
   7:Generated_Source\PSoC4/Timer.c **** *  component
   8:Generated_Source\PSoC4/Timer.c **** *
   9:Generated_Source\PSoC4/Timer.c **** * Note:
  10:Generated_Source\PSoC4/Timer.c **** *  None
  11:Generated_Source\PSoC4/Timer.c **** *
  12:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
  13:Generated_Source\PSoC4/Timer.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/Timer.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/Timer.c **** 
  19:Generated_Source\PSoC4/Timer.c **** #include "Timer.h"
  20:Generated_Source\PSoC4/Timer.c **** 
  21:Generated_Source\PSoC4/Timer.c **** uint8 Timer_initVar = 0u;
  22:Generated_Source\PSoC4/Timer.c **** 
  23:Generated_Source\PSoC4/Timer.c **** 
  24:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Init
  26:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
  27:Generated_Source\PSoC4/Timer.c **** *
  28:Generated_Source\PSoC4/Timer.c **** * Summary:
  29:Generated_Source\PSoC4/Timer.c **** *  Initialize/Restore default Timer configuration.
  30:Generated_Source\PSoC4/Timer.c **** *
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 2


  31:Generated_Source\PSoC4/Timer.c **** * Parameters:
  32:Generated_Source\PSoC4/Timer.c **** *  None
  33:Generated_Source\PSoC4/Timer.c **** *
  34:Generated_Source\PSoC4/Timer.c **** * Return:
  35:Generated_Source\PSoC4/Timer.c **** *  None
  36:Generated_Source\PSoC4/Timer.c **** *
  37:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/Timer.c **** void Timer_Init(void)
  39:Generated_Source\PSoC4/Timer.c **** {
  40:Generated_Source\PSoC4/Timer.c **** 
  41:Generated_Source\PSoC4/Timer.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/Timer.c ****     #if (Timer__QUAD == Timer_CONFIG)
  43:Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG = Timer_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/Timer.c ****         
  45:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  = Timer_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/Timer.c **** 
  48:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/Timer.c ****         
  51:Generated_Source\PSoC4/Timer.c ****          /* Set other values */
  52:Generated_Source\PSoC4/Timer.c ****         Timer_SetCounterMode(Timer_COUNT_DOWN);
  53:Generated_Source\PSoC4/Timer.c ****         Timer_WritePeriod(Timer_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/Timer.c ****         Timer_WriteCounter(Timer_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__QUAD == Timer_CONFIG) */
  56:Generated_Source\PSoC4/Timer.c **** 
  57:Generated_Source\PSoC4/Timer.c ****     #if (Timer__TIMER == Timer_CONFIG)
  58:Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG = Timer_CTRL_TIMER_BASE_CONFIG;
  59:Generated_Source\PSoC4/Timer.c ****         
  60:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  = Timer_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/Timer.c ****     
  63:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/Timer.c ****         
  66:Generated_Source\PSoC4/Timer.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/Timer.c ****         Timer_WritePeriod(Timer_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/Timer.c **** 
  69:Generated_Source\PSoC4/Timer.c ****         #if (Timer__COMPARE == Timer_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCompare(Timer_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/Timer.c **** 
  72:Generated_Source\PSoC4/Timer.c ****             #if (1u == Timer_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/Timer.c ****                 Timer_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCompareBuf(Timer_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/Timer.c ****             #endif  /* (1u == Timer_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__COMPARE == Timer_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/Timer.c **** 
  78:Generated_Source\PSoC4/Timer.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/Timer.c ****         #if (Timer_CY_TCPWM_V2 && Timer_TIMER_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(1u);
  81:Generated_Source\PSoC4/Timer.c ****         #elif(Timer__COUNT_DOWN == Timer_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(Timer_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/Timer.c ****         #else
  84:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(0u);
  85:Generated_Source\PSoC4/Timer.c ****         #endif /* (Timer_CY_TCPWM_V2 && Timer_TIMER_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000) */
  86:Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__TIMER == Timer_CONFIG) */
  87:Generated_Source\PSoC4/Timer.c **** 
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 3


  88:Generated_Source\PSoC4/Timer.c ****     #if (Timer__PWM_SEL == Timer_CONFIG)
  89:Generated_Source\PSoC4/Timer.c ****         Timer_CONTROL_REG = Timer_CTRL_PWM_BASE_CONFIG;
  90:Generated_Source\PSoC4/Timer.c **** 
  91:Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_PR == Timer_PWM_MODE)
  92:Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCounter(Timer_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/Timer.c ****         #else
  95:Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_ALIGN | Timer_CTRL_PWM_KILL_EVENT;
  96:Generated_Source\PSoC4/Timer.c ****             
  97:Generated_Source\PSoC4/Timer.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/Timer.c ****             #if (Timer_CY_TCPWM_V2 && Timer_PWM_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCounter(1u);
 100:Generated_Source\PSoC4/Timer.c ****             #elif (Timer__RIGHT == Timer_PWM_ALIGN)
 101:Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCounter(Timer_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/Timer.c ****             #else 
 103:Generated_Source\PSoC4/Timer.c ****                 Timer_WriteCounter(0u);
 104:Generated_Source\PSoC4/Timer.c ****             #endif  /* (Timer_CY_TCPWM_V2 && Timer_PWM_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000) */
 105:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_PR == Timer_PWM_MODE) */
 106:Generated_Source\PSoC4/Timer.c **** 
 107:Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_DT == Timer_PWM_MODE)
 108:Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_DT == Timer_PWM_MODE) */
 110:Generated_Source\PSoC4/Timer.c **** 
 111:Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM == Timer_PWM_MODE)
 112:Generated_Source\PSoC4/Timer.c ****             Timer_CONTROL_REG |= Timer_CTRL_PWM_PRESCALER;
 113:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM == Timer_PWM_MODE) */
 114:Generated_Source\PSoC4/Timer.c **** 
 115:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/Timer.c ****         Timer_TRIG_CONTROL1_REG  = Timer_PWM_SIGNALS_MODES;
 117:Generated_Source\PSoC4/Timer.c ****     
 118:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/Timer.c ****         Timer_SetInterruptMode(Timer_PWM_INTERRUPT_MASK);
 120:Generated_Source\PSoC4/Timer.c **** 
 121:Generated_Source\PSoC4/Timer.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/Timer.c ****         #if (Timer__PWM_PR == Timer_PWM_MODE)
 123:Generated_Source\PSoC4/Timer.c ****             Timer_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/Timer.c ****                     (Timer_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/Timer.c ****                     Timer_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/Timer.c ****                     Timer_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/Timer.c ****         #else
 128:Generated_Source\PSoC4/Timer.c ****             #if (Timer__LEFT == Timer_PWM_ALIGN)
 129:Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_LEFT;
 130:Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_LEFT == Timer_PWM_ALIGN) */
 131:Generated_Source\PSoC4/Timer.c **** 
 132:Generated_Source\PSoC4/Timer.c ****             #if (Timer__RIGHT == Timer_PWM_ALIGN)
 133:Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_RIGHT == Timer_PWM_ALIGN) */
 135:Generated_Source\PSoC4/Timer.c **** 
 136:Generated_Source\PSoC4/Timer.c ****             #if (Timer__CENTER == Timer_PWM_ALIGN)
 137:Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/Timer.c ****             #endif  /* ( Timer_PWM_CENTER == Timer_PWM_ALIGN) */
 139:Generated_Source\PSoC4/Timer.c **** 
 140:Generated_Source\PSoC4/Timer.c ****             #if (Timer__ASYMMETRIC == Timer_PWM_ALIGN)
 141:Generated_Source\PSoC4/Timer.c ****                 Timer_TRIG_CONTROL2_REG = Timer_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/Timer.c ****             #endif  /* (Timer__ASYMMETRIC == Timer_PWM_ALIGN) */
 143:Generated_Source\PSoC4/Timer.c ****         #endif  /* (Timer__PWM_PR == Timer_PWM_MODE) */
 144:Generated_Source\PSoC4/Timer.c **** 
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 4


 145:Generated_Source\PSoC4/Timer.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/Timer.c ****         Timer_WritePeriod(Timer_PWM_PERIOD_VALUE );
 147:Generated_Source\PSoC4/Timer.c ****         Timer_WriteCompare(Timer_PWM_COMPARE_VALUE);
 148:Generated_Source\PSoC4/Timer.c **** 
 149:Generated_Source\PSoC4/Timer.c ****         #if (1u == Timer_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/Timer.c ****             Timer_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/Timer.c ****             Timer_WriteCompareBuf(Timer_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/Timer.c ****         #endif  /* (1u == Timer_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/Timer.c **** 
 154:Generated_Source\PSoC4/Timer.c ****         #if (1u == Timer_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/Timer.c ****             Timer_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/Timer.c ****             Timer_WritePeriodBuf(Timer_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/Timer.c ****         #endif  /* (1u == Timer_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__PWM_SEL == Timer_CONFIG) */
 159:Generated_Source\PSoC4/Timer.c ****     
 160:Generated_Source\PSoC4/Timer.c **** }
 161:Generated_Source\PSoC4/Timer.c **** 
 162:Generated_Source\PSoC4/Timer.c **** 
 163:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Enable
 165:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 166:Generated_Source\PSoC4/Timer.c **** *
 167:Generated_Source\PSoC4/Timer.c **** * Summary:
 168:Generated_Source\PSoC4/Timer.c **** *  Enables the Timer.
 169:Generated_Source\PSoC4/Timer.c **** *
 170:Generated_Source\PSoC4/Timer.c **** * Parameters:
 171:Generated_Source\PSoC4/Timer.c **** *  None
 172:Generated_Source\PSoC4/Timer.c **** *
 173:Generated_Source\PSoC4/Timer.c **** * Return:
 174:Generated_Source\PSoC4/Timer.c **** *  None
 175:Generated_Source\PSoC4/Timer.c **** *
 176:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/Timer.c **** void Timer_Enable(void)
 178:Generated_Source\PSoC4/Timer.c **** {
  28              		.loc 1 178 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 179:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/Timer.c **** 
 181:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 181 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
 182:Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG |= Timer_MASK;
  39              		.loc 1 182 0
  40 0006 044A     		ldr	r2, .L2
  41 0008 1168     		ldr	r1, [r2]
  42 000a 0123     		movs	r3, #1
  43 000c 0B43     		orrs	r3, r1
  44 000e 1360     		str	r3, [r2]
 183:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
  45              		.loc 1 183 0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 5


  46 0010 FFF7FEFF 		bl	CyExitCriticalSection
  47              	.LVL1:
 184:Generated_Source\PSoC4/Timer.c **** 
 185:Generated_Source\PSoC4/Timer.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/Timer.c ****     #if (Timer__PWM_SEL == Timer_CONFIG)
 187:Generated_Source\PSoC4/Timer.c ****         #if (0u == Timer_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_START);
 189:Generated_Source\PSoC4/Timer.c ****         #endif /* (0u == Timer_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer__PWM_SEL == Timer_CONFIG) */
 191:Generated_Source\PSoC4/Timer.c **** 
 192:Generated_Source\PSoC4/Timer.c ****     #if (Timer__TIMER == Timer_CONFIG)
 193:Generated_Source\PSoC4/Timer.c ****         #if (0u == Timer_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_START);
 195:Generated_Source\PSoC4/Timer.c ****         #endif /* (0u == Timer_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer__TIMER == Timer_CONFIG) */
 197:Generated_Source\PSoC4/Timer.c ****     
 198:Generated_Source\PSoC4/Timer.c ****     #if (Timer__QUAD == Timer_CONFIG)
 199:Generated_Source\PSoC4/Timer.c ****         #if (0u != Timer_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/Timer.c ****             Timer_TriggerCommand(Timer_MASK, Timer_CMD_RELOAD);
 201:Generated_Source\PSoC4/Timer.c ****         #endif /* (0u != Timer_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/Timer.c ****     #endif  /* (Timer__QUAD == Timer_CONFIG) */
 203:Generated_Source\PSoC4/Timer.c **** }
  48              		.loc 1 203 0
  49              		@ sp needed
  50 0014 10BD     		pop	{r4, pc}
  51              	.L3:
  52 0016 C046     		.align	2
  53              	.L2:
  54 0018 00002040 		.word	1075838976
  55              		.cfi_endproc
  56              	.LFE3:
  57              		.size	Timer_Enable, .-Timer_Enable
  58              		.section	.text.Timer_Stop,"ax",%progbits
  59              		.align	2
  60              		.global	Timer_Stop
  61              		.code	16
  62              		.thumb_func
  63              		.type	Timer_Stop, %function
  64              	Timer_Stop:
  65              	.LFB5:
 204:Generated_Source\PSoC4/Timer.c **** 
 205:Generated_Source\PSoC4/Timer.c **** 
 206:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Start
 208:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 209:Generated_Source\PSoC4/Timer.c **** *
 210:Generated_Source\PSoC4/Timer.c **** * Summary:
 211:Generated_Source\PSoC4/Timer.c **** *  Initializes the Timer with default customizer
 212:Generated_Source\PSoC4/Timer.c **** *  values when called the first time and enables the Timer.
 213:Generated_Source\PSoC4/Timer.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/Timer.c **** *  just enabled.
 215:Generated_Source\PSoC4/Timer.c **** *
 216:Generated_Source\PSoC4/Timer.c **** * Parameters:
 217:Generated_Source\PSoC4/Timer.c **** *  None
 218:Generated_Source\PSoC4/Timer.c **** *
 219:Generated_Source\PSoC4/Timer.c **** * Return:
 220:Generated_Source\PSoC4/Timer.c **** *  None
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 6


 221:Generated_Source\PSoC4/Timer.c **** *
 222:Generated_Source\PSoC4/Timer.c **** * Global variables:
 223:Generated_Source\PSoC4/Timer.c **** *  Timer_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/Timer.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/Timer.c **** *  to 1 the first time Timer_Start() is called. This allows
 226:Generated_Source\PSoC4/Timer.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/Timer.c **** *  calls to the Timer_Start() routine.
 228:Generated_Source\PSoC4/Timer.c **** *
 229:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/Timer.c **** void Timer_Start(void)
 231:Generated_Source\PSoC4/Timer.c **** {
 232:Generated_Source\PSoC4/Timer.c ****     if (0u == Timer_initVar)
 233:Generated_Source\PSoC4/Timer.c ****     {
 234:Generated_Source\PSoC4/Timer.c ****         Timer_Init();
 235:Generated_Source\PSoC4/Timer.c ****         Timer_initVar = 1u;
 236:Generated_Source\PSoC4/Timer.c ****     }
 237:Generated_Source\PSoC4/Timer.c **** 
 238:Generated_Source\PSoC4/Timer.c ****     Timer_Enable();
 239:Generated_Source\PSoC4/Timer.c **** }
 240:Generated_Source\PSoC4/Timer.c **** 
 241:Generated_Source\PSoC4/Timer.c **** 
 242:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_Stop
 244:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 245:Generated_Source\PSoC4/Timer.c **** *
 246:Generated_Source\PSoC4/Timer.c **** * Summary:
 247:Generated_Source\PSoC4/Timer.c **** *  Disables the Timer.
 248:Generated_Source\PSoC4/Timer.c **** *
 249:Generated_Source\PSoC4/Timer.c **** * Parameters:
 250:Generated_Source\PSoC4/Timer.c **** *  None
 251:Generated_Source\PSoC4/Timer.c **** *
 252:Generated_Source\PSoC4/Timer.c **** * Return:
 253:Generated_Source\PSoC4/Timer.c **** *  None
 254:Generated_Source\PSoC4/Timer.c **** *
 255:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/Timer.c **** void Timer_Stop(void)
 257:Generated_Source\PSoC4/Timer.c **** {
  66              		.loc 1 257 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70 0000 10B5     		push	{r4, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 4, -8
  73              		.cfi_offset 14, -4
 258:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/Timer.c **** 
 260:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
  74              		.loc 1 260 0
  75 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  76              	.LVL2:
 261:Generated_Source\PSoC4/Timer.c **** 
 262:Generated_Source\PSoC4/Timer.c ****     Timer_BLOCK_CONTROL_REG &= (uint32)~Timer_MASK;
  77              		.loc 1 262 0
  78 0006 044A     		ldr	r2, .L5
  79 0008 1368     		ldr	r3, [r2]
  80 000a 0121     		movs	r1, #1
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 7


  81 000c 8B43     		bics	r3, r1
  82 000e 1360     		str	r3, [r2]
 263:Generated_Source\PSoC4/Timer.c **** 
 264:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
  83              		.loc 1 264 0
  84 0010 FFF7FEFF 		bl	CyExitCriticalSection
  85              	.LVL3:
 265:Generated_Source\PSoC4/Timer.c **** }
  86              		.loc 1 265 0
  87              		@ sp needed
  88 0014 10BD     		pop	{r4, pc}
  89              	.L6:
  90 0016 C046     		.align	2
  91              	.L5:
  92 0018 00002040 		.word	1075838976
  93              		.cfi_endproc
  94              	.LFE5:
  95              		.size	Timer_Stop, .-Timer_Stop
  96              		.section	.text.Timer_SetMode,"ax",%progbits
  97              		.align	2
  98              		.global	Timer_SetMode
  99              		.code	16
 100              		.thumb_func
 101              		.type	Timer_SetMode, %function
 102              	Timer_SetMode:
 103              	.LFB6:
 266:Generated_Source\PSoC4/Timer.c **** 
 267:Generated_Source\PSoC4/Timer.c **** 
 268:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetMode
 270:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 271:Generated_Source\PSoC4/Timer.c **** *
 272:Generated_Source\PSoC4/Timer.c **** * Summary:
 273:Generated_Source\PSoC4/Timer.c **** *  Sets the operation mode of the Timer. This function is used when
 274:Generated_Source\PSoC4/Timer.c **** *  configured as a generic Timer and the actual mode of operation is
 275:Generated_Source\PSoC4/Timer.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/Timer.c **** *
 277:Generated_Source\PSoC4/Timer.c **** * Parameters:
 278:Generated_Source\PSoC4/Timer.c **** *  mode: Mode for the Timer to operate in
 279:Generated_Source\PSoC4/Timer.c **** *   Values:
 280:Generated_Source\PSoC4/Timer.c **** *   - Timer_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/Timer.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/Timer.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM - PWM
 286:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/Timer.c **** *
 289:Generated_Source\PSoC4/Timer.c **** * Return:
 290:Generated_Source\PSoC4/Timer.c **** *  None
 291:Generated_Source\PSoC4/Timer.c **** *
 292:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/Timer.c **** void Timer_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/Timer.c **** {
 104              		.loc 1 294 0
 105              		.cfi_startproc
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 8


 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              	.LVL4:
 109 0000 10B5     		push	{r4, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 113 0002 0400     		movs	r4, r0
 295:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/Timer.c **** 
 297:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 114              		.loc 1 297 0
 115 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 116              	.LVL5:
 298:Generated_Source\PSoC4/Timer.c **** 
 299:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_MODE_MASK;
 117              		.loc 1 299 0
 118 0008 054B     		ldr	r3, .L8
 119 000a 1968     		ldr	r1, [r3]
 120 000c 054A     		ldr	r2, .L8+4
 121 000e 0A40     		ands	r2, r1
 122 0010 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mode;
 123              		.loc 1 300 0
 124 0012 1A68     		ldr	r2, [r3]
 125 0014 1443     		orrs	r4, r2
 126              	.LVL6:
 127 0016 1C60     		str	r4, [r3]
 301:Generated_Source\PSoC4/Timer.c **** 
 302:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 128              		.loc 1 302 0
 129 0018 FFF7FEFF 		bl	CyExitCriticalSection
 130              	.LVL7:
 303:Generated_Source\PSoC4/Timer.c **** }
 131              		.loc 1 303 0
 132              		@ sp needed
 133 001c 10BD     		pop	{r4, pc}
 134              	.L9:
 135 001e C046     		.align	2
 136              	.L8:
 137 0020 00012040 		.word	1075839232
 138 0024 FFFFFFF8 		.word	-117440513
 139              		.cfi_endproc
 140              	.LFE6:
 141              		.size	Timer_SetMode, .-Timer_SetMode
 142              		.section	.text.Timer_SetQDMode,"ax",%progbits
 143              		.align	2
 144              		.global	Timer_SetQDMode
 145              		.code	16
 146              		.thumb_func
 147              		.type	Timer_SetQDMode, %function
 148              	Timer_SetQDMode:
 149              	.LFB7:
 304:Generated_Source\PSoC4/Timer.c **** 
 305:Generated_Source\PSoC4/Timer.c **** 
 306:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetQDMode
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 9


 308:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 309:Generated_Source\PSoC4/Timer.c **** *
 310:Generated_Source\PSoC4/Timer.c **** * Summary:
 311:Generated_Source\PSoC4/Timer.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/Timer.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/Timer.c **** *
 314:Generated_Source\PSoC4/Timer.c **** * Parameters:
 315:Generated_Source\PSoC4/Timer.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/Timer.c **** *   Values:
 317:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/Timer.c **** *         - Timer_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/Timer.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/Timer.c **** *
 322:Generated_Source\PSoC4/Timer.c **** * Return:
 323:Generated_Source\PSoC4/Timer.c **** *  None
 324:Generated_Source\PSoC4/Timer.c **** *
 325:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/Timer.c **** void Timer_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/Timer.c **** {
 150              		.loc 1 327 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              	.LVL8:
 155 0000 10B5     		push	{r4, lr}
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 4, -8
 158              		.cfi_offset 14, -4
 159 0002 0400     		movs	r4, r0
 328:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/Timer.c **** 
 330:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 160              		.loc 1 330 0
 161 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 162              	.LVL9:
 331:Generated_Source\PSoC4/Timer.c **** 
 332:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_QUAD_MODE_MASK;
 163              		.loc 1 332 0
 164 0008 054B     		ldr	r3, .L11
 165 000a 1968     		ldr	r1, [r3]
 166 000c 054A     		ldr	r2, .L11+4
 167 000e 0A40     		ands	r2, r1
 168 0010 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= qdMode;
 169              		.loc 1 333 0
 170 0012 1A68     		ldr	r2, [r3]
 171 0014 1443     		orrs	r4, r2
 172              	.LVL10:
 173 0016 1C60     		str	r4, [r3]
 334:Generated_Source\PSoC4/Timer.c **** 
 335:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 174              		.loc 1 335 0
 175 0018 FFF7FEFF 		bl	CyExitCriticalSection
 176              	.LVL11:
 336:Generated_Source\PSoC4/Timer.c **** }
 177              		.loc 1 336 0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 10


 178              		@ sp needed
 179 001c 10BD     		pop	{r4, pc}
 180              	.L12:
 181 001e C046     		.align	2
 182              	.L11:
 183 0020 00012040 		.word	1075839232
 184 0024 FFFF8FFF 		.word	-7340033
 185              		.cfi_endproc
 186              	.LFE7:
 187              		.size	Timer_SetQDMode, .-Timer_SetQDMode
 188              		.section	.text.Timer_SetPrescaler,"ax",%progbits
 189              		.align	2
 190              		.global	Timer_SetPrescaler
 191              		.code	16
 192              		.thumb_func
 193              		.type	Timer_SetPrescaler, %function
 194              	Timer_SetPrescaler:
 195              	.LFB8:
 337:Generated_Source\PSoC4/Timer.c **** 
 338:Generated_Source\PSoC4/Timer.c **** 
 339:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPrescaler
 341:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 342:Generated_Source\PSoC4/Timer.c **** *
 343:Generated_Source\PSoC4/Timer.c **** * Summary:
 344:Generated_Source\PSoC4/Timer.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/Timer.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/Timer.c **** *
 347:Generated_Source\PSoC4/Timer.c **** * Parameters:
 348:Generated_Source\PSoC4/Timer.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/Timer.c **** *   Values:
 350:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/Timer.c **** *         - Timer_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/Timer.c **** *
 359:Generated_Source\PSoC4/Timer.c **** * Return:
 360:Generated_Source\PSoC4/Timer.c **** *  None
 361:Generated_Source\PSoC4/Timer.c **** *
 362:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/Timer.c **** void Timer_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/Timer.c **** {
 196              		.loc 1 364 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              	.LVL12:
 201 0000 10B5     		push	{r4, lr}
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 4, -8
 204              		.cfi_offset 14, -4
 205 0002 0400     		movs	r4, r0
 365:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 11


 366:Generated_Source\PSoC4/Timer.c **** 
 367:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 206              		.loc 1 367 0
 207 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 208              	.LVL13:
 368:Generated_Source\PSoC4/Timer.c **** 
 369:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 209              		.loc 1 369 0
 210 0008 054B     		ldr	r3, .L14
 211 000a 1968     		ldr	r1, [r3]
 212 000c 054A     		ldr	r2, .L14+4
 213 000e 0A40     		ands	r2, r1
 214 0010 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= prescaler;
 215              		.loc 1 370 0
 216 0012 1A68     		ldr	r2, [r3]
 217 0014 1443     		orrs	r4, r2
 218              	.LVL14:
 219 0016 1C60     		str	r4, [r3]
 371:Generated_Source\PSoC4/Timer.c **** 
 372:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 220              		.loc 1 372 0
 221 0018 FFF7FEFF 		bl	CyExitCriticalSection
 222              	.LVL15:
 373:Generated_Source\PSoC4/Timer.c **** }
 223              		.loc 1 373 0
 224              		@ sp needed
 225 001c 10BD     		pop	{r4, pc}
 226              	.L15:
 227 001e C046     		.align	2
 228              	.L14:
 229 0020 00012040 		.word	1075839232
 230 0024 FF00FFFF 		.word	-65281
 231              		.cfi_endproc
 232              	.LFE8:
 233              		.size	Timer_SetPrescaler, .-Timer_SetPrescaler
 234              		.section	.text.Timer_SetOneShot,"ax",%progbits
 235              		.align	2
 236              		.global	Timer_SetOneShot
 237              		.code	16
 238              		.thumb_func
 239              		.type	Timer_SetOneShot, %function
 240              	Timer_SetOneShot:
 241              	.LFB9:
 374:Generated_Source\PSoC4/Timer.c **** 
 375:Generated_Source\PSoC4/Timer.c **** 
 376:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetOneShot
 378:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 379:Generated_Source\PSoC4/Timer.c **** *
 380:Generated_Source\PSoC4/Timer.c **** * Summary:
 381:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the Timer runs
 382:Generated_Source\PSoC4/Timer.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/Timer.c **** *  Timer operates in the continuous mode.
 384:Generated_Source\PSoC4/Timer.c **** *
 385:Generated_Source\PSoC4/Timer.c **** * Parameters:
 386:Generated_Source\PSoC4/Timer.c **** *  oneShotEnable
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 12


 387:Generated_Source\PSoC4/Timer.c **** *   Values:
 388:Generated_Source\PSoC4/Timer.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/Timer.c **** *
 391:Generated_Source\PSoC4/Timer.c **** * Return:
 392:Generated_Source\PSoC4/Timer.c **** *  None
 393:Generated_Source\PSoC4/Timer.c **** *
 394:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/Timer.c **** void Timer_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/Timer.c **** {
 242              		.loc 1 396 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              	.LVL16:
 247 0000 70B5     		push	{r4, r5, r6, lr}
 248              		.cfi_def_cfa_offset 16
 249              		.cfi_offset 4, -16
 250              		.cfi_offset 5, -12
 251              		.cfi_offset 6, -8
 252              		.cfi_offset 14, -4
 253 0002 0400     		movs	r4, r0
 397:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/Timer.c **** 
 399:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 254              		.loc 1 399 0
 255 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 256              	.LVL17:
 400:Generated_Source\PSoC4/Timer.c **** 
 401:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_ONESHOT_MASK;
 257              		.loc 1 401 0
 258 0008 0749     		ldr	r1, .L17
 259 000a 0A68     		ldr	r2, [r1]
 260 000c 074B     		ldr	r3, .L17+4
 261 000e 1340     		ands	r3, r2
 262 0010 0B60     		str	r3, [r1]
 402:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((oneShotEnable & Timer_1BIT_MASK) <<
 263              		.loc 1 402 0
 264 0012 0D68     		ldr	r5, [r1]
 265 0014 A304     		lsls	r3, r4, #18
 266 0016 8022     		movs	r2, #128
 267 0018 D202     		lsls	r2, r2, #11
 268 001a 1340     		ands	r3, r2
 269 001c 2B43     		orrs	r3, r5
 270 001e 0B60     		str	r3, [r1]
 403:Generated_Source\PSoC4/Timer.c ****                                                                Timer_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/Timer.c **** 
 405:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 271              		.loc 1 405 0
 272 0020 FFF7FEFF 		bl	CyExitCriticalSection
 273              	.LVL18:
 406:Generated_Source\PSoC4/Timer.c **** }
 274              		.loc 1 406 0
 275              		@ sp needed
 276              	.LVL19:
 277 0024 70BD     		pop	{r4, r5, r6, pc}
 278              	.L18:
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 13


 279 0026 C046     		.align	2
 280              	.L17:
 281 0028 00012040 		.word	1075839232
 282 002c FFFFFBFF 		.word	-262145
 283              		.cfi_endproc
 284              	.LFE9:
 285              		.size	Timer_SetOneShot, .-Timer_SetOneShot
 286              		.section	.text.Timer_SetPWMMode,"ax",%progbits
 287              		.align	2
 288              		.global	Timer_SetPWMMode
 289              		.code	16
 290              		.thumb_func
 291              		.type	Timer_SetPWMMode, %function
 292              	Timer_SetPWMMode:
 293              	.LFB10:
 407:Generated_Source\PSoC4/Timer.c **** 
 408:Generated_Source\PSoC4/Timer.c **** 
 409:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMMode
 411:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 412:Generated_Source\PSoC4/Timer.c **** *
 413:Generated_Source\PSoC4/Timer.c **** * Summary:
 414:Generated_Source\PSoC4/Timer.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/Timer.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/Timer.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/Timer.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/Timer.c **** *  the mode.
 419:Generated_Source\PSoC4/Timer.c **** *
 420:Generated_Source\PSoC4/Timer.c **** * Parameters:
 421:Generated_Source\PSoC4/Timer.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/Timer.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/Timer.c **** *   Values:
 424:Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/Timer.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/Timer.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/Timer.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/Timer.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/Timer.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/Timer.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/Timer.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/Timer.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/Timer.c **** *
 445:Generated_Source\PSoC4/Timer.c **** * Return:
 446:Generated_Source\PSoC4/Timer.c **** *  None
 447:Generated_Source\PSoC4/Timer.c **** *
 448:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 14


 449:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/Timer.c **** {
 294              		.loc 1 450 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              		@ link register save eliminated.
 299              	.LVL20:
 451:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL2_REG = (modeMask & Timer_6BIT_MASK);
 300              		.loc 1 451 0
 301 0000 3F23     		movs	r3, #63
 302 0002 1840     		ands	r0, r3
 303              	.LVL21:
 304 0004 014B     		ldr	r3, .L20
 305 0006 1860     		str	r0, [r3]
 452:Generated_Source\PSoC4/Timer.c **** }
 306              		.loc 1 452 0
 307              		@ sp needed
 308 0008 7047     		bx	lr
 309              	.L21:
 310 000a C046     		.align	2
 311              	.L20:
 312 000c 28012040 		.word	1075839272
 313              		.cfi_endproc
 314              	.LFE10:
 315              		.size	Timer_SetPWMMode, .-Timer_SetPWMMode
 316              		.section	.text.Timer_SetPWMSyncKill,"ax",%progbits
 317              		.align	2
 318              		.global	Timer_SetPWMSyncKill
 319              		.code	16
 320              		.thumb_func
 321              		.type	Timer_SetPWMSyncKill, %function
 322              	Timer_SetPWMSyncKill:
 323              	.LFB11:
 453:Generated_Source\PSoC4/Timer.c **** 
 454:Generated_Source\PSoC4/Timer.c **** 
 455:Generated_Source\PSoC4/Timer.c **** 
 456:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMSyncKill
 458:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 459:Generated_Source\PSoC4/Timer.c **** *
 460:Generated_Source\PSoC4/Timer.c **** * Summary:
 461:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/Timer.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/Timer.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/Timer.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/Timer.c **** *
 466:Generated_Source\PSoC4/Timer.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/Timer.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/Timer.c **** *
 469:Generated_Source\PSoC4/Timer.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/Timer.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/Timer.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/Timer.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/Timer.c **** 
 474:Generated_Source\PSoC4/Timer.c **** *
 475:Generated_Source\PSoC4/Timer.c **** * Parameters:
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 15


 476:Generated_Source\PSoC4/Timer.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/Timer.c **** *   Values:
 478:Generated_Source\PSoC4/Timer.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/Timer.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/Timer.c **** *
 481:Generated_Source\PSoC4/Timer.c **** * Return:
 482:Generated_Source\PSoC4/Timer.c **** *  None
 483:Generated_Source\PSoC4/Timer.c **** *
 484:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/Timer.c **** {
 324              		.loc 1 486 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              	.LVL22:
 329 0000 70B5     		push	{r4, r5, r6, lr}
 330              		.cfi_def_cfa_offset 16
 331              		.cfi_offset 4, -16
 332              		.cfi_offset 5, -12
 333              		.cfi_offset 6, -8
 334              		.cfi_offset 14, -4
 335 0002 0400     		movs	r4, r0
 487:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/Timer.c **** 
 489:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 336              		.loc 1 489 0
 337 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 338              	.LVL23:
 490:Generated_Source\PSoC4/Timer.c **** 
 491:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_SYNC_KILL_MASK;
 339              		.loc 1 491 0
 340 0008 064A     		ldr	r2, .L23
 341 000a 1368     		ldr	r3, [r2]
 342 000c 0421     		movs	r1, #4
 343 000e 8B43     		bics	r3, r1
 344 0010 1360     		str	r3, [r2]
 492:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_1BIT_MASK)  <<
 345              		.loc 1 492 0
 346 0012 1568     		ldr	r5, [r2]
 347 0014 A300     		lsls	r3, r4, #2
 348 0016 1940     		ands	r1, r3
 349 0018 0C00     		movs	r4, r1
 350              	.LVL24:
 351 001a 2C43     		orrs	r4, r5
 352 001c 1460     		str	r4, [r2]
 493:Generated_Source\PSoC4/Timer.c ****                                                Timer_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/Timer.c **** 
 495:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 353              		.loc 1 495 0
 354 001e FFF7FEFF 		bl	CyExitCriticalSection
 355              	.LVL25:
 496:Generated_Source\PSoC4/Timer.c **** }
 356              		.loc 1 496 0
 357              		@ sp needed
 358 0022 70BD     		pop	{r4, r5, r6, pc}
 359              	.L24:
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 16


 360              		.align	2
 361              	.L23:
 362 0024 00012040 		.word	1075839232
 363              		.cfi_endproc
 364              	.LFE11:
 365              		.size	Timer_SetPWMSyncKill, .-Timer_SetPWMSyncKill
 366              		.section	.text.Timer_SetPWMStopOnKill,"ax",%progbits
 367              		.align	2
 368              		.global	Timer_SetPWMStopOnKill
 369              		.code	16
 370              		.thumb_func
 371              		.type	Timer_SetPWMStopOnKill, %function
 372              	Timer_SetPWMStopOnKill:
 373              	.LFB12:
 497:Generated_Source\PSoC4/Timer.c **** 
 498:Generated_Source\PSoC4/Timer.c **** 
 499:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMStopOnKill
 501:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 502:Generated_Source\PSoC4/Timer.c **** *
 503:Generated_Source\PSoC4/Timer.c **** * Summary:
 504:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/Timer.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/Timer.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/Timer.c **** *
 508:Generated_Source\PSoC4/Timer.c **** *
 509:Generated_Source\PSoC4/Timer.c **** * Parameters:
 510:Generated_Source\PSoC4/Timer.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/Timer.c **** *   Values:
 512:Generated_Source\PSoC4/Timer.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/Timer.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/Timer.c **** *
 515:Generated_Source\PSoC4/Timer.c **** * Return:
 516:Generated_Source\PSoC4/Timer.c **** *  None
 517:Generated_Source\PSoC4/Timer.c **** *
 518:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/Timer.c **** {
 374              		.loc 1 520 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 0
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378              	.LVL26:
 379 0000 70B5     		push	{r4, r5, r6, lr}
 380              		.cfi_def_cfa_offset 16
 381              		.cfi_offset 4, -16
 382              		.cfi_offset 5, -12
 383              		.cfi_offset 6, -8
 384              		.cfi_offset 14, -4
 385 0002 0400     		movs	r4, r0
 521:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/Timer.c **** 
 523:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 386              		.loc 1 523 0
 387 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 388              	.LVL27:
 524:Generated_Source\PSoC4/Timer.c **** 
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 17


 525:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PWM_STOP_KILL_MASK;
 389              		.loc 1 525 0
 390 0008 064A     		ldr	r2, .L26
 391 000a 1368     		ldr	r3, [r2]
 392 000c 0821     		movs	r1, #8
 393 000e 8B43     		bics	r3, r1
 394 0010 1360     		str	r3, [r2]
 526:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_1BIT_MASK)  <<
 395              		.loc 1 526 0
 396 0012 1568     		ldr	r5, [r2]
 397 0014 E300     		lsls	r3, r4, #3
 398 0016 1940     		ands	r1, r3
 399 0018 0C00     		movs	r4, r1
 400              	.LVL28:
 401 001a 2C43     		orrs	r4, r5
 402 001c 1460     		str	r4, [r2]
 527:Generated_Source\PSoC4/Timer.c ****                                                          Timer_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/Timer.c **** 
 529:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 403              		.loc 1 529 0
 404 001e FFF7FEFF 		bl	CyExitCriticalSection
 405              	.LVL29:
 530:Generated_Source\PSoC4/Timer.c **** }
 406              		.loc 1 530 0
 407              		@ sp needed
 408 0022 70BD     		pop	{r4, r5, r6, pc}
 409              	.L27:
 410              		.align	2
 411              	.L26:
 412 0024 00012040 		.word	1075839232
 413              		.cfi_endproc
 414              	.LFE12:
 415              		.size	Timer_SetPWMStopOnKill, .-Timer_SetPWMStopOnKill
 416              		.section	.text.Timer_SetPWMDeadTime,"ax",%progbits
 417              		.align	2
 418              		.global	Timer_SetPWMDeadTime
 419              		.code	16
 420              		.thumb_func
 421              		.type	Timer_SetPWMDeadTime, %function
 422              	Timer_SetPWMDeadTime:
 423              	.LFB13:
 531:Generated_Source\PSoC4/Timer.c **** 
 532:Generated_Source\PSoC4/Timer.c **** 
 533:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMDeadTime
 535:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 536:Generated_Source\PSoC4/Timer.c **** *
 537:Generated_Source\PSoC4/Timer.c **** * Summary:
 538:Generated_Source\PSoC4/Timer.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/Timer.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/Timer.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/Timer.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/Timer.c **** 
 543:Generated_Source\PSoC4/Timer.c **** *
 544:Generated_Source\PSoC4/Timer.c **** * Parameters:
 545:Generated_Source\PSoC4/Timer.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/Timer.c **** *   Values: 0 to 255
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 18


 547:Generated_Source\PSoC4/Timer.c **** *
 548:Generated_Source\PSoC4/Timer.c **** * Return:
 549:Generated_Source\PSoC4/Timer.c **** *  None
 550:Generated_Source\PSoC4/Timer.c **** *
 551:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/Timer.c **** {
 424              		.loc 1 553 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              	.LVL30:
 429 0000 10B5     		push	{r4, lr}
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 4, -8
 432              		.cfi_offset 14, -4
 433 0002 0400     		movs	r4, r0
 554:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/Timer.c **** 
 556:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 434              		.loc 1 556 0
 435 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 436              	.LVL31:
 557:Generated_Source\PSoC4/Timer.c **** 
 558:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_PRESCALER_MASK;
 437              		.loc 1 558 0
 438 0008 064B     		ldr	r3, .L29
 439 000a 1968     		ldr	r1, [r3]
 440 000c 064A     		ldr	r2, .L29+4
 441 000e 0A40     		ands	r2, r1
 442 0010 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((deadTime & Timer_8BIT_MASK) <<
 443              		.loc 1 559 0
 444 0012 1A68     		ldr	r2, [r3]
 445 0014 2406     		lsls	r4, r4, #24
 446              	.LVL32:
 447 0016 240C     		lsrs	r4, r4, #16
 448 0018 1443     		orrs	r4, r2
 449 001a 1C60     		str	r4, [r3]
 560:Generated_Source\PSoC4/Timer.c ****                                                           Timer_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/Timer.c **** 
 562:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 450              		.loc 1 562 0
 451 001c FFF7FEFF 		bl	CyExitCriticalSection
 452              	.LVL33:
 563:Generated_Source\PSoC4/Timer.c **** }
 453              		.loc 1 563 0
 454              		@ sp needed
 455 0020 10BD     		pop	{r4, pc}
 456              	.L30:
 457 0022 C046     		.align	2
 458              	.L29:
 459 0024 00012040 		.word	1075839232
 460 0028 FF00FFFF 		.word	-65281
 461              		.cfi_endproc
 462              	.LFE13:
 463              		.size	Timer_SetPWMDeadTime, .-Timer_SetPWMDeadTime
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 19


 464              		.section	.text.Timer_SetPWMInvert,"ax",%progbits
 465              		.align	2
 466              		.global	Timer_SetPWMInvert
 467              		.code	16
 468              		.thumb_func
 469              		.type	Timer_SetPWMInvert, %function
 470              	Timer_SetPWMInvert:
 471              	.LFB14:
 564:Generated_Source\PSoC4/Timer.c **** 
 565:Generated_Source\PSoC4/Timer.c **** 
 566:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPWMInvert
 568:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 569:Generated_Source\PSoC4/Timer.c **** *
 570:Generated_Source\PSoC4/Timer.c **** * Summary:
 571:Generated_Source\PSoC4/Timer.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/Timer.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/Timer.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/Timer.c **** *
 575:Generated_Source\PSoC4/Timer.c **** * Parameters:
 576:Generated_Source\PSoC4/Timer.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/Timer.c **** *   Values:
 578:Generated_Source\PSoC4/Timer.c **** *         - Timer_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/Timer.c **** *         - Timer_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/Timer.c **** *
 581:Generated_Source\PSoC4/Timer.c **** * Return:
 582:Generated_Source\PSoC4/Timer.c **** *  None
 583:Generated_Source\PSoC4/Timer.c **** *
 584:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/Timer.c **** void Timer_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/Timer.c **** {
 472              		.loc 1 586 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              	.LVL34:
 477 0000 10B5     		push	{r4, lr}
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 4, -8
 480              		.cfi_offset 14, -4
 481 0002 0400     		movs	r4, r0
 587:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/Timer.c **** 
 589:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 482              		.loc 1 589 0
 483 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 484              	.LVL35:
 590:Generated_Source\PSoC4/Timer.c **** 
 591:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_INV_OUT_MASK;
 485              		.loc 1 591 0
 486 0008 054B     		ldr	r3, .L32
 487 000a 1968     		ldr	r1, [r3]
 488 000c 054A     		ldr	r2, .L32+4
 489 000e 0A40     		ands	r2, r1
 490 0010 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= mask;
 491              		.loc 1 592 0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 20


 492 0012 1A68     		ldr	r2, [r3]
 493 0014 1443     		orrs	r4, r2
 494              	.LVL36:
 495 0016 1C60     		str	r4, [r3]
 593:Generated_Source\PSoC4/Timer.c **** 
 594:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 496              		.loc 1 594 0
 497 0018 FFF7FEFF 		bl	CyExitCriticalSection
 498              	.LVL37:
 595:Generated_Source\PSoC4/Timer.c **** }
 499              		.loc 1 595 0
 500              		@ sp needed
 501 001c 10BD     		pop	{r4, pc}
 502              	.L33:
 503 001e C046     		.align	2
 504              	.L32:
 505 0020 00012040 		.word	1075839232
 506 0024 FFFFCFFF 		.word	-3145729
 507              		.cfi_endproc
 508              	.LFE14:
 509              		.size	Timer_SetPWMInvert, .-Timer_SetPWMInvert
 510              		.section	.text.Timer_WriteCounter,"ax",%progbits
 511              		.align	2
 512              		.global	Timer_WriteCounter
 513              		.code	16
 514              		.thumb_func
 515              		.type	Timer_WriteCounter, %function
 516              	Timer_WriteCounter:
 517              	.LFB15:
 596:Generated_Source\PSoC4/Timer.c **** 
 597:Generated_Source\PSoC4/Timer.c **** 
 598:Generated_Source\PSoC4/Timer.c **** 
 599:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCounter
 601:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 602:Generated_Source\PSoC4/Timer.c **** *
 603:Generated_Source\PSoC4/Timer.c **** * Summary:
 604:Generated_Source\PSoC4/Timer.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/Timer.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/Timer.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/Timer.c **** *
 608:Generated_Source\PSoC4/Timer.c **** * Parameters:
 609:Generated_Source\PSoC4/Timer.c **** *  count: value to write
 610:Generated_Source\PSoC4/Timer.c **** *
 611:Generated_Source\PSoC4/Timer.c **** * Return:
 612:Generated_Source\PSoC4/Timer.c **** *  None
 613:Generated_Source\PSoC4/Timer.c **** *
 614:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/Timer.c **** void Timer_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/Timer.c **** {
 518              		.loc 1 616 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 523              	.LVL38:
 617:Generated_Source\PSoC4/Timer.c ****     Timer_COUNTER_REG = (count & Timer_16BIT_MASK);
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 21


 524              		.loc 1 617 0
 525 0000 0004     		lsls	r0, r0, #16
 526              	.LVL39:
 527 0002 000C     		lsrs	r0, r0, #16
 528 0004 014B     		ldr	r3, .L35
 529 0006 1860     		str	r0, [r3]
 618:Generated_Source\PSoC4/Timer.c **** }
 530              		.loc 1 618 0
 531              		@ sp needed
 532 0008 7047     		bx	lr
 533              	.L36:
 534 000a C046     		.align	2
 535              	.L35:
 536 000c 08012040 		.word	1075839240
 537              		.cfi_endproc
 538              	.LFE15:
 539              		.size	Timer_WriteCounter, .-Timer_WriteCounter
 540              		.section	.text.Timer_ReadCounter,"ax",%progbits
 541              		.align	2
 542              		.global	Timer_ReadCounter
 543              		.code	16
 544              		.thumb_func
 545              		.type	Timer_ReadCounter, %function
 546              	Timer_ReadCounter:
 547              	.LFB16:
 619:Generated_Source\PSoC4/Timer.c **** 
 620:Generated_Source\PSoC4/Timer.c **** 
 621:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCounter
 623:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 624:Generated_Source\PSoC4/Timer.c **** *
 625:Generated_Source\PSoC4/Timer.c **** * Summary:
 626:Generated_Source\PSoC4/Timer.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/Timer.c **** *
 628:Generated_Source\PSoC4/Timer.c **** * Parameters:
 629:Generated_Source\PSoC4/Timer.c **** *  None
 630:Generated_Source\PSoC4/Timer.c **** *
 631:Generated_Source\PSoC4/Timer.c **** * Return:
 632:Generated_Source\PSoC4/Timer.c **** *  Current counter value
 633:Generated_Source\PSoC4/Timer.c **** *
 634:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCounter(void)
 636:Generated_Source\PSoC4/Timer.c **** {
 548              		.loc 1 636 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 637:Generated_Source\PSoC4/Timer.c ****     return (Timer_COUNTER_REG & Timer_16BIT_MASK);
 553              		.loc 1 637 0
 554 0000 024B     		ldr	r3, .L38
 555 0002 1868     		ldr	r0, [r3]
 556 0004 0004     		lsls	r0, r0, #16
 557 0006 000C     		lsrs	r0, r0, #16
 638:Generated_Source\PSoC4/Timer.c **** }
 558              		.loc 1 638 0
 559              		@ sp needed
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 22


 560 0008 7047     		bx	lr
 561              	.L39:
 562 000a C046     		.align	2
 563              	.L38:
 564 000c 08012040 		.word	1075839240
 565              		.cfi_endproc
 566              	.LFE16:
 567              		.size	Timer_ReadCounter, .-Timer_ReadCounter
 568              		.section	.text.Timer_SetCounterMode,"ax",%progbits
 569              		.align	2
 570              		.global	Timer_SetCounterMode
 571              		.code	16
 572              		.thumb_func
 573              		.type	Timer_SetCounterMode, %function
 574              	Timer_SetCounterMode:
 575              	.LFB17:
 639:Generated_Source\PSoC4/Timer.c **** 
 640:Generated_Source\PSoC4/Timer.c **** 
 641:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCounterMode
 643:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 644:Generated_Source\PSoC4/Timer.c **** *
 645:Generated_Source\PSoC4/Timer.c **** * Summary:
 646:Generated_Source\PSoC4/Timer.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/Timer.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/Timer.c **** *
 649:Generated_Source\PSoC4/Timer.c **** * Parameters:
 650:Generated_Source\PSoC4/Timer.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/Timer.c **** *   Values:
 652:Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/Timer.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/Timer.c **** *     - Timer_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/Timer.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/Timer.c **** *                                         and period
 659:Generated_Source\PSoC4/Timer.c **** *
 660:Generated_Source\PSoC4/Timer.c **** * Return:
 661:Generated_Source\PSoC4/Timer.c **** *  None
 662:Generated_Source\PSoC4/Timer.c **** *
 663:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/Timer.c **** void Timer_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/Timer.c **** {
 576              		.loc 1 665 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 0
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580              	.LVL40:
 581 0000 10B5     		push	{r4, lr}
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 4, -8
 584              		.cfi_offset 14, -4
 585 0002 0400     		movs	r4, r0
 666:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/Timer.c **** 
 668:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 586              		.loc 1 668 0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 23


 587 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 588              	.LVL41:
 669:Generated_Source\PSoC4/Timer.c **** 
 670:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_UPDOWN_MASK;
 589              		.loc 1 670 0
 590 0008 054B     		ldr	r3, .L41
 591 000a 1968     		ldr	r1, [r3]
 592 000c 054A     		ldr	r2, .L41+4
 593 000e 0A40     		ands	r2, r1
 594 0010 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= counterMode;
 595              		.loc 1 671 0
 596 0012 1A68     		ldr	r2, [r3]
 597 0014 1443     		orrs	r4, r2
 598              	.LVL42:
 599 0016 1C60     		str	r4, [r3]
 672:Generated_Source\PSoC4/Timer.c **** 
 673:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 600              		.loc 1 673 0
 601 0018 FFF7FEFF 		bl	CyExitCriticalSection
 602              	.LVL43:
 674:Generated_Source\PSoC4/Timer.c **** }
 603              		.loc 1 674 0
 604              		@ sp needed
 605 001c 10BD     		pop	{r4, pc}
 606              	.L42:
 607 001e C046     		.align	2
 608              	.L41:
 609 0020 00012040 		.word	1075839232
 610 0024 FFFFFCFF 		.word	-196609
 611              		.cfi_endproc
 612              	.LFE17:
 613              		.size	Timer_SetCounterMode, .-Timer_SetCounterMode
 614              		.section	.text.Timer_WritePeriod,"ax",%progbits
 615              		.align	2
 616              		.global	Timer_WritePeriod
 617              		.code	16
 618              		.thumb_func
 619              		.type	Timer_WritePeriod, %function
 620              	Timer_WritePeriod:
 621              	.LFB18:
 675:Generated_Source\PSoC4/Timer.c **** 
 676:Generated_Source\PSoC4/Timer.c **** 
 677:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WritePeriod
 679:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 680:Generated_Source\PSoC4/Timer.c **** *
 681:Generated_Source\PSoC4/Timer.c **** * Summary:
 682:Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/Timer.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/Timer.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/Timer.c **** *
 686:Generated_Source\PSoC4/Timer.c **** * Parameters:
 687:Generated_Source\PSoC4/Timer.c **** *  period: Period value
 688:Generated_Source\PSoC4/Timer.c **** *
 689:Generated_Source\PSoC4/Timer.c **** * Return:
 690:Generated_Source\PSoC4/Timer.c **** *  None
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 24


 691:Generated_Source\PSoC4/Timer.c **** *
 692:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/Timer.c **** void Timer_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/Timer.c **** {
 622              		.loc 1 694 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627              	.LVL44:
 695:Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_REG = (period & Timer_16BIT_MASK);
 628              		.loc 1 695 0
 629 0000 0004     		lsls	r0, r0, #16
 630              	.LVL45:
 631 0002 000C     		lsrs	r0, r0, #16
 632 0004 014B     		ldr	r3, .L44
 633 0006 1860     		str	r0, [r3]
 696:Generated_Source\PSoC4/Timer.c **** }
 634              		.loc 1 696 0
 635              		@ sp needed
 636 0008 7047     		bx	lr
 637              	.L45:
 638 000a C046     		.align	2
 639              	.L44:
 640 000c 14012040 		.word	1075839252
 641              		.cfi_endproc
 642              	.LFE18:
 643              		.size	Timer_WritePeriod, .-Timer_WritePeriod
 644              		.section	.text.Timer_ReadPeriod,"ax",%progbits
 645              		.align	2
 646              		.global	Timer_ReadPeriod
 647              		.code	16
 648              		.thumb_func
 649              		.type	Timer_ReadPeriod, %function
 650              	Timer_ReadPeriod:
 651              	.LFB19:
 697:Generated_Source\PSoC4/Timer.c **** 
 698:Generated_Source\PSoC4/Timer.c **** 
 699:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadPeriod
 701:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 702:Generated_Source\PSoC4/Timer.c **** *
 703:Generated_Source\PSoC4/Timer.c **** * Summary:
 704:Generated_Source\PSoC4/Timer.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/Timer.c **** *
 706:Generated_Source\PSoC4/Timer.c **** * Parameters:
 707:Generated_Source\PSoC4/Timer.c **** *  None
 708:Generated_Source\PSoC4/Timer.c **** *
 709:Generated_Source\PSoC4/Timer.c **** * Return:
 710:Generated_Source\PSoC4/Timer.c **** *  Period value
 711:Generated_Source\PSoC4/Timer.c **** *
 712:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadPeriod(void)
 714:Generated_Source\PSoC4/Timer.c **** {
 652              		.loc 1 714 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 25


 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 715:Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_REG & Timer_16BIT_MASK);
 657              		.loc 1 715 0
 658 0000 024B     		ldr	r3, .L47
 659 0002 1868     		ldr	r0, [r3]
 660 0004 0004     		lsls	r0, r0, #16
 661 0006 000C     		lsrs	r0, r0, #16
 716:Generated_Source\PSoC4/Timer.c **** }
 662              		.loc 1 716 0
 663              		@ sp needed
 664 0008 7047     		bx	lr
 665              	.L48:
 666 000a C046     		.align	2
 667              	.L47:
 668 000c 14012040 		.word	1075839252
 669              		.cfi_endproc
 670              	.LFE19:
 671              		.size	Timer_ReadPeriod, .-Timer_ReadPeriod
 672              		.section	.text.Timer_SetCompareSwap,"ax",%progbits
 673              		.align	2
 674              		.global	Timer_SetCompareSwap
 675              		.code	16
 676              		.thumb_func
 677              		.type	Timer_SetCompareSwap, %function
 678              	Timer_SetCompareSwap:
 679              	.LFB20:
 717:Generated_Source\PSoC4/Timer.c **** 
 718:Generated_Source\PSoC4/Timer.c **** 
 719:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCompareSwap
 721:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 722:Generated_Source\PSoC4/Timer.c **** *
 723:Generated_Source\PSoC4/Timer.c **** * Summary:
 724:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/Timer.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/Timer.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/Timer.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/Timer.c **** *
 729:Generated_Source\PSoC4/Timer.c **** * Parameters:
 730:Generated_Source\PSoC4/Timer.c **** *  swapEnable
 731:Generated_Source\PSoC4/Timer.c **** *   Values:
 732:Generated_Source\PSoC4/Timer.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/Timer.c **** *
 735:Generated_Source\PSoC4/Timer.c **** * Return:
 736:Generated_Source\PSoC4/Timer.c **** *  None
 737:Generated_Source\PSoC4/Timer.c **** *
 738:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/Timer.c **** void Timer_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/Timer.c **** {
 680              		.loc 1 740 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 0
 683              		@ frame_needed = 0, uses_anonymous_args = 0
 684              	.LVL46:
 685 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 26


 686              		.cfi_def_cfa_offset 8
 687              		.cfi_offset 4, -8
 688              		.cfi_offset 14, -4
 689 0002 0400     		movs	r4, r0
 741:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/Timer.c **** 
 743:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 690              		.loc 1 743 0
 691 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 692              	.LVL47:
 744:Generated_Source\PSoC4/Timer.c **** 
 745:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_CC_MASK;
 693              		.loc 1 745 0
 694 0008 054B     		ldr	r3, .L50
 695 000a 1A68     		ldr	r2, [r3]
 696 000c 0121     		movs	r1, #1
 697 000e 8A43     		bics	r2, r1
 698 0010 1A60     		str	r2, [r3]
 746:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= (swapEnable & Timer_1BIT_MASK);
 699              		.loc 1 746 0
 700 0012 1A68     		ldr	r2, [r3]
 701 0014 0C40     		ands	r4, r1
 702              	.LVL48:
 703 0016 1443     		orrs	r4, r2
 704 0018 1C60     		str	r4, [r3]
 747:Generated_Source\PSoC4/Timer.c **** 
 748:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 705              		.loc 1 748 0
 706 001a FFF7FEFF 		bl	CyExitCriticalSection
 707              	.LVL49:
 749:Generated_Source\PSoC4/Timer.c **** }
 708              		.loc 1 749 0
 709              		@ sp needed
 710 001e 10BD     		pop	{r4, pc}
 711              	.L51:
 712              		.align	2
 713              	.L50:
 714 0020 00012040 		.word	1075839232
 715              		.cfi_endproc
 716              	.LFE20:
 717              		.size	Timer_SetCompareSwap, .-Timer_SetCompareSwap
 718              		.section	.text.Timer_WritePeriodBuf,"ax",%progbits
 719              		.align	2
 720              		.global	Timer_WritePeriodBuf
 721              		.code	16
 722              		.thumb_func
 723              		.type	Timer_WritePeriodBuf, %function
 724              	Timer_WritePeriodBuf:
 725              	.LFB21:
 750:Generated_Source\PSoC4/Timer.c **** 
 751:Generated_Source\PSoC4/Timer.c **** 
 752:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WritePeriodBuf
 754:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 755:Generated_Source\PSoC4/Timer.c **** *
 756:Generated_Source\PSoC4/Timer.c **** * Summary:
 757:Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit period buf register with the new period value.
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 27


 758:Generated_Source\PSoC4/Timer.c **** *
 759:Generated_Source\PSoC4/Timer.c **** * Parameters:
 760:Generated_Source\PSoC4/Timer.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/Timer.c **** *
 762:Generated_Source\PSoC4/Timer.c **** * Return:
 763:Generated_Source\PSoC4/Timer.c **** *  None
 764:Generated_Source\PSoC4/Timer.c **** *
 765:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/Timer.c **** void Timer_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/Timer.c **** {
 726              		.loc 1 767 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 731              	.LVL50:
 768:Generated_Source\PSoC4/Timer.c ****     Timer_PERIOD_BUF_REG = (periodBuf & Timer_16BIT_MASK);
 732              		.loc 1 768 0
 733 0000 0004     		lsls	r0, r0, #16
 734              	.LVL51:
 735 0002 000C     		lsrs	r0, r0, #16
 736 0004 014B     		ldr	r3, .L53
 737 0006 1860     		str	r0, [r3]
 769:Generated_Source\PSoC4/Timer.c **** }
 738              		.loc 1 769 0
 739              		@ sp needed
 740 0008 7047     		bx	lr
 741              	.L54:
 742 000a C046     		.align	2
 743              	.L53:
 744 000c 18012040 		.word	1075839256
 745              		.cfi_endproc
 746              	.LFE21:
 747              		.size	Timer_WritePeriodBuf, .-Timer_WritePeriodBuf
 748              		.section	.text.Timer_ReadPeriodBuf,"ax",%progbits
 749              		.align	2
 750              		.global	Timer_ReadPeriodBuf
 751              		.code	16
 752              		.thumb_func
 753              		.type	Timer_ReadPeriodBuf, %function
 754              	Timer_ReadPeriodBuf:
 755              	.LFB22:
 770:Generated_Source\PSoC4/Timer.c **** 
 771:Generated_Source\PSoC4/Timer.c **** 
 772:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadPeriodBuf
 774:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 775:Generated_Source\PSoC4/Timer.c **** *
 776:Generated_Source\PSoC4/Timer.c **** * Summary:
 777:Generated_Source\PSoC4/Timer.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/Timer.c **** *
 779:Generated_Source\PSoC4/Timer.c **** * Parameters:
 780:Generated_Source\PSoC4/Timer.c **** *  None
 781:Generated_Source\PSoC4/Timer.c **** *
 782:Generated_Source\PSoC4/Timer.c **** * Return:
 783:Generated_Source\PSoC4/Timer.c **** *  Period value
 784:Generated_Source\PSoC4/Timer.c **** *
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 28


 785:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/Timer.c **** {
 756              		.loc 1 787 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 0
 759              		@ frame_needed = 0, uses_anonymous_args = 0
 760              		@ link register save eliminated.
 788:Generated_Source\PSoC4/Timer.c ****     return (Timer_PERIOD_BUF_REG & Timer_16BIT_MASK);
 761              		.loc 1 788 0
 762 0000 024B     		ldr	r3, .L56
 763 0002 1868     		ldr	r0, [r3]
 764 0004 0004     		lsls	r0, r0, #16
 765 0006 000C     		lsrs	r0, r0, #16
 789:Generated_Source\PSoC4/Timer.c **** }
 766              		.loc 1 789 0
 767              		@ sp needed
 768 0008 7047     		bx	lr
 769              	.L57:
 770 000a C046     		.align	2
 771              	.L56:
 772 000c 18012040 		.word	1075839256
 773              		.cfi_endproc
 774              	.LFE22:
 775              		.size	Timer_ReadPeriodBuf, .-Timer_ReadPeriodBuf
 776              		.section	.text.Timer_SetPeriodSwap,"ax",%progbits
 777              		.align	2
 778              		.global	Timer_SetPeriodSwap
 779              		.code	16
 780              		.thumb_func
 781              		.type	Timer_SetPeriodSwap, %function
 782              	Timer_SetPeriodSwap:
 783              	.LFB23:
 790:Generated_Source\PSoC4/Timer.c **** 
 791:Generated_Source\PSoC4/Timer.c **** 
 792:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetPeriodSwap
 794:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 795:Generated_Source\PSoC4/Timer.c **** *
 796:Generated_Source\PSoC4/Timer.c **** * Summary:
 797:Generated_Source\PSoC4/Timer.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/Timer.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/Timer.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/Timer.c **** *  switch event.
 801:Generated_Source\PSoC4/Timer.c **** *
 802:Generated_Source\PSoC4/Timer.c **** * Parameters:
 803:Generated_Source\PSoC4/Timer.c **** *  swapEnable
 804:Generated_Source\PSoC4/Timer.c **** *   Values:
 805:Generated_Source\PSoC4/Timer.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/Timer.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/Timer.c **** *
 808:Generated_Source\PSoC4/Timer.c **** * Return:
 809:Generated_Source\PSoC4/Timer.c **** *  None
 810:Generated_Source\PSoC4/Timer.c **** *
 811:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/Timer.c **** void Timer_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/Timer.c **** {
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 29


 784              		.loc 1 813 0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 0
 787              		@ frame_needed = 0, uses_anonymous_args = 0
 788              	.LVL52:
 789 0000 70B5     		push	{r4, r5, r6, lr}
 790              		.cfi_def_cfa_offset 16
 791              		.cfi_offset 4, -16
 792              		.cfi_offset 5, -12
 793              		.cfi_offset 6, -8
 794              		.cfi_offset 14, -4
 795 0002 0400     		movs	r4, r0
 814:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/Timer.c **** 
 816:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 796              		.loc 1 816 0
 797 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 798              	.LVL53:
 817:Generated_Source\PSoC4/Timer.c **** 
 818:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG &= (uint32)~Timer_RELOAD_PERIOD_MASK;
 799              		.loc 1 818 0
 800 0008 064A     		ldr	r2, .L59
 801 000a 1368     		ldr	r3, [r2]
 802 000c 0221     		movs	r1, #2
 803 000e 8B43     		bics	r3, r1
 804 0010 1360     		str	r3, [r2]
 819:Generated_Source\PSoC4/Timer.c ****     Timer_CONTROL_REG |= ((uint32)((swapEnable & Timer_1BIT_MASK) <<
 805              		.loc 1 819 0
 806 0012 1568     		ldr	r5, [r2]
 807 0014 6300     		lsls	r3, r4, #1
 808 0016 1940     		ands	r1, r3
 809 0018 0C00     		movs	r4, r1
 810              	.LVL54:
 811 001a 2C43     		orrs	r4, r5
 812 001c 1460     		str	r4, [r2]
 820:Generated_Source\PSoC4/Timer.c ****                                                             Timer_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/Timer.c **** 
 822:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 813              		.loc 1 822 0
 814 001e FFF7FEFF 		bl	CyExitCriticalSection
 815              	.LVL55:
 823:Generated_Source\PSoC4/Timer.c **** }
 816              		.loc 1 823 0
 817              		@ sp needed
 818 0022 70BD     		pop	{r4, r5, r6, pc}
 819              	.L60:
 820              		.align	2
 821              	.L59:
 822 0024 00012040 		.word	1075839232
 823              		.cfi_endproc
 824              	.LFE23:
 825              		.size	Timer_SetPeriodSwap, .-Timer_SetPeriodSwap
 826              		.section	.text.Timer_WriteCompare,"ax",%progbits
 827              		.align	2
 828              		.global	Timer_WriteCompare
 829              		.code	16
 830              		.thumb_func
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 30


 831              		.type	Timer_WriteCompare, %function
 832              	Timer_WriteCompare:
 833              	.LFB24:
 824:Generated_Source\PSoC4/Timer.c **** 
 825:Generated_Source\PSoC4/Timer.c **** 
 826:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCompare
 828:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 829:Generated_Source\PSoC4/Timer.c **** *
 830:Generated_Source\PSoC4/Timer.c **** * Summary:
 831:Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/Timer.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/Timer.c **** *
 834:Generated_Source\PSoC4/Timer.c **** * Parameters:
 835:Generated_Source\PSoC4/Timer.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/Timer.c **** *
 837:Generated_Source\PSoC4/Timer.c **** * Return:
 838:Generated_Source\PSoC4/Timer.c **** *  None
 839:Generated_Source\PSoC4/Timer.c **** *
 840:Generated_Source\PSoC4/Timer.c **** * Note:
 841:Generated_Source\PSoC4/Timer.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/Timer.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/Timer.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/Timer.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/Timer.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/Timer.c **** *
 848:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/Timer.c **** void Timer_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/Timer.c **** {
 834              		.loc 1 850 0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 838              		@ link register save eliminated.
 839              	.LVL56:
 851:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/Timer.c **** 
 855:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/Timer.c **** 
 858:Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/Timer.c ****         {
 860:Generated_Source\PSoC4/Timer.c ****             compare++;
 861:Generated_Source\PSoC4/Timer.c ****         }
 862:Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/Timer.c ****         {
 864:Generated_Source\PSoC4/Timer.c ****             compare--;
 865:Generated_Source\PSoC4/Timer.c ****         }
 866:Generated_Source\PSoC4/Timer.c ****         else
 867:Generated_Source\PSoC4/Timer.c ****         {
 868:Generated_Source\PSoC4/Timer.c ****         }
 869:Generated_Source\PSoC4/Timer.c ****         
 870:Generated_Source\PSoC4/Timer.c ****     
 871:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 31


 872:Generated_Source\PSoC4/Timer.c ****     
 873:Generated_Source\PSoC4/Timer.c ****     Timer_COMP_CAP_REG = (compare & Timer_16BIT_MASK);
 840              		.loc 1 873 0
 841 0000 0004     		lsls	r0, r0, #16
 842              	.LVL57:
 843 0002 000C     		lsrs	r0, r0, #16
 844 0004 014B     		ldr	r3, .L62
 845 0006 1860     		str	r0, [r3]
 874:Generated_Source\PSoC4/Timer.c **** }
 846              		.loc 1 874 0
 847              		@ sp needed
 848 0008 7047     		bx	lr
 849              	.L63:
 850 000a C046     		.align	2
 851              	.L62:
 852 000c 0C012040 		.word	1075839244
 853              		.cfi_endproc
 854              	.LFE24:
 855              		.size	Timer_WriteCompare, .-Timer_WriteCompare
 856              		.section	.text.Timer_ReadCompare,"ax",%progbits
 857              		.align	2
 858              		.global	Timer_ReadCompare
 859              		.code	16
 860              		.thumb_func
 861              		.type	Timer_ReadCompare, %function
 862              	Timer_ReadCompare:
 863              	.LFB25:
 875:Generated_Source\PSoC4/Timer.c **** 
 876:Generated_Source\PSoC4/Timer.c **** 
 877:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCompare
 879:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 880:Generated_Source\PSoC4/Timer.c **** *
 881:Generated_Source\PSoC4/Timer.c **** * Summary:
 882:Generated_Source\PSoC4/Timer.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/Timer.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/Timer.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/Timer.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/Timer.c **** *
 888:Generated_Source\PSoC4/Timer.c **** * Parameters:
 889:Generated_Source\PSoC4/Timer.c **** *  None
 890:Generated_Source\PSoC4/Timer.c **** *
 891:Generated_Source\PSoC4/Timer.c **** * Return:
 892:Generated_Source\PSoC4/Timer.c **** *  Compare value
 893:Generated_Source\PSoC4/Timer.c **** *
 894:Generated_Source\PSoC4/Timer.c **** * Note:
 895:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/Timer.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/Timer.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/Timer.c **** *
 899:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCompare(void)
 901:Generated_Source\PSoC4/Timer.c **** {
 864              		.loc 1 901 0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 32


 867              		@ frame_needed = 0, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 902:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/Timer.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/Timer.c **** 
 907:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/Timer.c ****         
 910:Generated_Source\PSoC4/Timer.c ****         regVal = Timer_COMP_CAP_REG;
 911:Generated_Source\PSoC4/Timer.c ****         
 912:Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/Timer.c ****         {
 914:Generated_Source\PSoC4/Timer.c ****             regVal--;
 915:Generated_Source\PSoC4/Timer.c ****         }
 916:Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/Timer.c ****         {
 918:Generated_Source\PSoC4/Timer.c ****             regVal++;
 919:Generated_Source\PSoC4/Timer.c ****         }
 920:Generated_Source\PSoC4/Timer.c ****         else
 921:Generated_Source\PSoC4/Timer.c ****         {
 922:Generated_Source\PSoC4/Timer.c ****         }
 923:Generated_Source\PSoC4/Timer.c **** 
 924:Generated_Source\PSoC4/Timer.c ****         return (regVal & Timer_16BIT_MASK);
 925:Generated_Source\PSoC4/Timer.c ****     #else
 926:Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 869              		.loc 1 926 0
 870 0000 024B     		ldr	r3, .L65
 871 0002 1868     		ldr	r0, [r3]
 872 0004 0004     		lsls	r0, r0, #16
 873 0006 000C     		lsrs	r0, r0, #16
 927:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/Timer.c **** }
 874              		.loc 1 928 0
 875              		@ sp needed
 876 0008 7047     		bx	lr
 877              	.L66:
 878 000a C046     		.align	2
 879              	.L65:
 880 000c 0C012040 		.word	1075839244
 881              		.cfi_endproc
 882              	.LFE25:
 883              		.size	Timer_ReadCompare, .-Timer_ReadCompare
 884              		.section	.text.Timer_WriteCompareBuf,"ax",%progbits
 885              		.align	2
 886              		.global	Timer_WriteCompareBuf
 887              		.code	16
 888              		.thumb_func
 889              		.type	Timer_WriteCompareBuf, %function
 890              	Timer_WriteCompareBuf:
 891              	.LFB26:
 929:Generated_Source\PSoC4/Timer.c **** 
 930:Generated_Source\PSoC4/Timer.c **** 
 931:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_WriteCompareBuf
 933:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 33


 934:Generated_Source\PSoC4/Timer.c **** *
 935:Generated_Source\PSoC4/Timer.c **** * Summary:
 936:Generated_Source\PSoC4/Timer.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/Timer.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/Timer.c **** *
 939:Generated_Source\PSoC4/Timer.c **** * Parameters:
 940:Generated_Source\PSoC4/Timer.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/Timer.c **** *
 942:Generated_Source\PSoC4/Timer.c **** * Return:
 943:Generated_Source\PSoC4/Timer.c **** *  None
 944:Generated_Source\PSoC4/Timer.c **** *
 945:Generated_Source\PSoC4/Timer.c **** * Note:
 946:Generated_Source\PSoC4/Timer.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/Timer.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/Timer.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/Timer.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/Timer.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/Timer.c **** *
 953:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/Timer.c **** void Timer_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/Timer.c **** {
 892              		.loc 1 955 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 0
 895              		@ frame_needed = 0, uses_anonymous_args = 0
 896              		@ link register save eliminated.
 897              	.LVL58:
 956:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/Timer.c **** 
 960:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/Timer.c **** 
 963:Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/Timer.c ****         {
 965:Generated_Source\PSoC4/Timer.c ****             compareBuf++;
 966:Generated_Source\PSoC4/Timer.c ****         }
 967:Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/Timer.c ****         {
 969:Generated_Source\PSoC4/Timer.c ****             compareBuf --;
 970:Generated_Source\PSoC4/Timer.c ****         }
 971:Generated_Source\PSoC4/Timer.c ****         else
 972:Generated_Source\PSoC4/Timer.c ****         {
 973:Generated_Source\PSoC4/Timer.c ****         }
 974:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/Timer.c ****     
 976:Generated_Source\PSoC4/Timer.c ****     Timer_COMP_CAP_BUF_REG = (compareBuf & Timer_16BIT_MASK);
 898              		.loc 1 976 0
 899 0000 0004     		lsls	r0, r0, #16
 900              	.LVL59:
 901 0002 000C     		lsrs	r0, r0, #16
 902 0004 014B     		ldr	r3, .L68
 903 0006 1860     		str	r0, [r3]
 977:Generated_Source\PSoC4/Timer.c **** }
 904              		.loc 1 977 0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 34


 905              		@ sp needed
 906 0008 7047     		bx	lr
 907              	.L69:
 908 000a C046     		.align	2
 909              	.L68:
 910 000c 10012040 		.word	1075839248
 911              		.cfi_endproc
 912              	.LFE26:
 913              		.size	Timer_WriteCompareBuf, .-Timer_WriteCompareBuf
 914              		.section	.text.Timer_ReadCompareBuf,"ax",%progbits
 915              		.align	2
 916              		.global	Timer_ReadCompareBuf
 917              		.code	16
 918              		.thumb_func
 919              		.type	Timer_ReadCompareBuf, %function
 920              	Timer_ReadCompareBuf:
 921              	.LFB27:
 978:Generated_Source\PSoC4/Timer.c **** 
 979:Generated_Source\PSoC4/Timer.c **** 
 980:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCompareBuf
 982:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
 983:Generated_Source\PSoC4/Timer.c **** *
 984:Generated_Source\PSoC4/Timer.c **** * Summary:
 985:Generated_Source\PSoC4/Timer.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/Timer.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/Timer.c **** *
 988:Generated_Source\PSoC4/Timer.c **** * Parameters:
 989:Generated_Source\PSoC4/Timer.c **** *  None
 990:Generated_Source\PSoC4/Timer.c **** *
 991:Generated_Source\PSoC4/Timer.c **** * Return:
 992:Generated_Source\PSoC4/Timer.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/Timer.c **** *
 994:Generated_Source\PSoC4/Timer.c **** * Note:
 995:Generated_Source\PSoC4/Timer.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/Timer.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/Timer.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/Timer.c **** *
 999:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/Timer.c **** {
 922              		.loc 1 1001 0
 923              		.cfi_startproc
 924              		@ args = 0, pretend = 0, frame = 0
 925              		@ frame_needed = 0, uses_anonymous_args = 0
 926              		@ link register save eliminated.
1002:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/Timer.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/Timer.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/Timer.c **** 
1007:Generated_Source\PSoC4/Timer.c ****     #if (Timer_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/Timer.c ****         currentMode = ((Timer_CONTROL_REG & Timer_UPDOWN_MASK) >> Timer_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/Timer.c **** 
1010:Generated_Source\PSoC4/Timer.c ****         regVal = Timer_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/Timer.c ****         
1012:Generated_Source\PSoC4/Timer.c ****         if (((uint32)Timer__COUNT_DOWN == currentMode) && (0u != regVal))
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 35


1013:Generated_Source\PSoC4/Timer.c ****         {
1014:Generated_Source\PSoC4/Timer.c ****             regVal--;
1015:Generated_Source\PSoC4/Timer.c ****         }
1016:Generated_Source\PSoC4/Timer.c ****         else if (((uint32)Timer__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/Timer.c ****         {
1018:Generated_Source\PSoC4/Timer.c ****             regVal++;
1019:Generated_Source\PSoC4/Timer.c ****         }
1020:Generated_Source\PSoC4/Timer.c ****         else
1021:Generated_Source\PSoC4/Timer.c ****         {
1022:Generated_Source\PSoC4/Timer.c ****         }
1023:Generated_Source\PSoC4/Timer.c **** 
1024:Generated_Source\PSoC4/Timer.c ****         return (regVal & Timer_16BIT_MASK);
1025:Generated_Source\PSoC4/Timer.c ****     #else
1026:Generated_Source\PSoC4/Timer.c ****         return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
 927              		.loc 1 1026 0
 928 0000 024B     		ldr	r3, .L71
 929 0002 1868     		ldr	r0, [r3]
 930 0004 0004     		lsls	r0, r0, #16
 931 0006 000C     		lsrs	r0, r0, #16
1027:Generated_Source\PSoC4/Timer.c ****     #endif /* (Timer_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/Timer.c **** }
 932              		.loc 1 1028 0
 933              		@ sp needed
 934 0008 7047     		bx	lr
 935              	.L72:
 936 000a C046     		.align	2
 937              	.L71:
 938 000c 10012040 		.word	1075839248
 939              		.cfi_endproc
 940              	.LFE27:
 941              		.size	Timer_ReadCompareBuf, .-Timer_ReadCompareBuf
 942              		.section	.text.Timer_ReadCapture,"ax",%progbits
 943              		.align	2
 944              		.global	Timer_ReadCapture
 945              		.code	16
 946              		.thumb_func
 947              		.type	Timer_ReadCapture, %function
 948              	Timer_ReadCapture:
 949              	.LFB28:
1029:Generated_Source\PSoC4/Timer.c **** 
1030:Generated_Source\PSoC4/Timer.c **** 
1031:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCapture
1033:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1034:Generated_Source\PSoC4/Timer.c **** *
1035:Generated_Source\PSoC4/Timer.c **** * Summary:
1036:Generated_Source\PSoC4/Timer.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/Timer.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/Timer.c **** *
1039:Generated_Source\PSoC4/Timer.c **** * Parameters:
1040:Generated_Source\PSoC4/Timer.c **** *  None
1041:Generated_Source\PSoC4/Timer.c **** *
1042:Generated_Source\PSoC4/Timer.c **** * Return:
1043:Generated_Source\PSoC4/Timer.c **** *  Capture value
1044:Generated_Source\PSoC4/Timer.c **** *
1045:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCapture(void)
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 36


1047:Generated_Source\PSoC4/Timer.c **** {
 950              		.loc 1 1047 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              		@ link register save eliminated.
1048:Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_REG & Timer_16BIT_MASK);
 955              		.loc 1 1048 0
 956 0000 024B     		ldr	r3, .L74
 957 0002 1868     		ldr	r0, [r3]
 958 0004 0004     		lsls	r0, r0, #16
 959 0006 000C     		lsrs	r0, r0, #16
1049:Generated_Source\PSoC4/Timer.c **** }
 960              		.loc 1 1049 0
 961              		@ sp needed
 962 0008 7047     		bx	lr
 963              	.L75:
 964 000a C046     		.align	2
 965              	.L74:
 966 000c 0C012040 		.word	1075839244
 967              		.cfi_endproc
 968              	.LFE28:
 969              		.size	Timer_ReadCapture, .-Timer_ReadCapture
 970              		.section	.text.Timer_ReadCaptureBuf,"ax",%progbits
 971              		.align	2
 972              		.global	Timer_ReadCaptureBuf
 973              		.code	16
 974              		.thumb_func
 975              		.type	Timer_ReadCaptureBuf, %function
 976              	Timer_ReadCaptureBuf:
 977              	.LFB29:
1050:Generated_Source\PSoC4/Timer.c **** 
1051:Generated_Source\PSoC4/Timer.c **** 
1052:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadCaptureBuf
1054:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1055:Generated_Source\PSoC4/Timer.c **** *
1056:Generated_Source\PSoC4/Timer.c **** * Summary:
1057:Generated_Source\PSoC4/Timer.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/Timer.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/Timer.c **** *
1060:Generated_Source\PSoC4/Timer.c **** * Parameters:
1061:Generated_Source\PSoC4/Timer.c **** *  None
1062:Generated_Source\PSoC4/Timer.c **** *
1063:Generated_Source\PSoC4/Timer.c **** * Return:
1064:Generated_Source\PSoC4/Timer.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/Timer.c **** *
1066:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/Timer.c **** {
 978              		.loc 1 1068 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982              		@ link register save eliminated.
1069:Generated_Source\PSoC4/Timer.c ****     return (Timer_COMP_CAP_BUF_REG & Timer_16BIT_MASK);
 983              		.loc 1 1069 0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 37


 984 0000 024B     		ldr	r3, .L77
 985 0002 1868     		ldr	r0, [r3]
 986 0004 0004     		lsls	r0, r0, #16
 987 0006 000C     		lsrs	r0, r0, #16
1070:Generated_Source\PSoC4/Timer.c **** }
 988              		.loc 1 1070 0
 989              		@ sp needed
 990 0008 7047     		bx	lr
 991              	.L78:
 992 000a C046     		.align	2
 993              	.L77:
 994 000c 10012040 		.word	1075839248
 995              		.cfi_endproc
 996              	.LFE29:
 997              		.size	Timer_ReadCaptureBuf, .-Timer_ReadCaptureBuf
 998              		.section	.text.Timer_SetCaptureMode,"ax",%progbits
 999              		.align	2
 1000              		.global	Timer_SetCaptureMode
 1001              		.code	16
 1002              		.thumb_func
 1003              		.type	Timer_SetCaptureMode, %function
 1004              	Timer_SetCaptureMode:
 1005              	.LFB30:
1071:Generated_Source\PSoC4/Timer.c **** 
1072:Generated_Source\PSoC4/Timer.c **** 
1073:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCaptureMode
1075:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1076:Generated_Source\PSoC4/Timer.c **** *
1077:Generated_Source\PSoC4/Timer.c **** * Summary:
1078:Generated_Source\PSoC4/Timer.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/Timer.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/Timer.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/Timer.c **** *
1082:Generated_Source\PSoC4/Timer.c **** * Parameters:
1083:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/Timer.c **** *   Values:
1085:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/Timer.c **** *
1090:Generated_Source\PSoC4/Timer.c **** * Return:
1091:Generated_Source\PSoC4/Timer.c **** *  None
1092:Generated_Source\PSoC4/Timer.c **** *
1093:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/Timer.c **** void Timer_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/Timer.c **** {
 1006              		.loc 1 1095 0
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 0
 1009              		@ frame_needed = 0, uses_anonymous_args = 0
 1010              	.LVL60:
 1011 0000 10B5     		push	{r4, lr}
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 4, -8
 1014              		.cfi_offset 14, -4
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 38


 1015 0002 0400     		movs	r4, r0
1096:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/Timer.c **** 
1098:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1016              		.loc 1 1098 0
 1017 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1018              	.LVL61:
1099:Generated_Source\PSoC4/Timer.c **** 
1100:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_CAPTURE_MASK;
 1019              		.loc 1 1100 0
 1020 0008 054B     		ldr	r3, .L80
 1021 000a 1A68     		ldr	r2, [r3]
 1022 000c 0321     		movs	r1, #3
 1023 000e 8A43     		bics	r2, r1
 1024 0010 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= triggerMode;
 1025              		.loc 1 1101 0
 1026 0012 1A68     		ldr	r2, [r3]
 1027 0014 1443     		orrs	r4, r2
 1028              	.LVL62:
 1029 0016 1C60     		str	r4, [r3]
1102:Generated_Source\PSoC4/Timer.c **** 
1103:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1030              		.loc 1 1103 0
 1031 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1032              	.LVL63:
1104:Generated_Source\PSoC4/Timer.c **** }
 1033              		.loc 1 1104 0
 1034              		@ sp needed
 1035 001c 10BD     		pop	{r4, pc}
 1036              	.L81:
 1037 001e C046     		.align	2
 1038              	.L80:
 1039 0020 24012040 		.word	1075839268
 1040              		.cfi_endproc
 1041              	.LFE30:
 1042              		.size	Timer_SetCaptureMode, .-Timer_SetCaptureMode
 1043              		.section	.text.Timer_SetReloadMode,"ax",%progbits
 1044              		.align	2
 1045              		.global	Timer_SetReloadMode
 1046              		.code	16
 1047              		.thumb_func
 1048              		.type	Timer_SetReloadMode, %function
 1049              	Timer_SetReloadMode:
 1050              	.LFB31:
1105:Generated_Source\PSoC4/Timer.c **** 
1106:Generated_Source\PSoC4/Timer.c **** 
1107:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetReloadMode
1109:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1110:Generated_Source\PSoC4/Timer.c **** *
1111:Generated_Source\PSoC4/Timer.c **** * Summary:
1112:Generated_Source\PSoC4/Timer.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/Timer.c **** *  input.
1114:Generated_Source\PSoC4/Timer.c **** *
1115:Generated_Source\PSoC4/Timer.c **** * Parameters:
1116:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 39


1117:Generated_Source\PSoC4/Timer.c **** *   Values:
1118:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/Timer.c **** *
1123:Generated_Source\PSoC4/Timer.c **** * Return:
1124:Generated_Source\PSoC4/Timer.c **** *  None
1125:Generated_Source\PSoC4/Timer.c **** *
1126:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/Timer.c **** void Timer_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/Timer.c **** {
 1051              		.loc 1 1128 0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 1055              	.LVL64:
 1056 0000 10B5     		push	{r4, lr}
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 4, -8
 1059              		.cfi_offset 14, -4
 1060 0002 0400     		movs	r4, r0
1129:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/Timer.c **** 
1131:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1061              		.loc 1 1131 0
 1062 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1063              	.LVL65:
1132:Generated_Source\PSoC4/Timer.c **** 
1133:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_RELOAD_MASK;
 1064              		.loc 1 1133 0
 1065 0008 054B     		ldr	r3, .L83
 1066 000a 1A68     		ldr	r2, [r3]
 1067 000c 3021     		movs	r1, #48
 1068 000e 8A43     		bics	r2, r1
 1069 0010 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_RELOAD_SHIFT));
 1070              		.loc 1 1134 0
 1071 0012 1A68     		ldr	r2, [r3]
 1072 0014 2401     		lsls	r4, r4, #4
 1073              	.LVL66:
 1074 0016 1443     		orrs	r4, r2
 1075 0018 1C60     		str	r4, [r3]
1135:Generated_Source\PSoC4/Timer.c **** 
1136:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1076              		.loc 1 1136 0
 1077 001a FFF7FEFF 		bl	CyExitCriticalSection
 1078              	.LVL67:
1137:Generated_Source\PSoC4/Timer.c **** }
 1079              		.loc 1 1137 0
 1080              		@ sp needed
 1081 001e 10BD     		pop	{r4, pc}
 1082              	.L84:
 1083              		.align	2
 1084              	.L83:
 1085 0020 24012040 		.word	1075839268
 1086              		.cfi_endproc
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 40


 1087              	.LFE31:
 1088              		.size	Timer_SetReloadMode, .-Timer_SetReloadMode
 1089              		.section	.text.Timer_SetStartMode,"ax",%progbits
 1090              		.align	2
 1091              		.global	Timer_SetStartMode
 1092              		.code	16
 1093              		.thumb_func
 1094              		.type	Timer_SetStartMode, %function
 1095              	Timer_SetStartMode:
 1096              	.LFB32:
1138:Generated_Source\PSoC4/Timer.c **** 
1139:Generated_Source\PSoC4/Timer.c **** 
1140:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetStartMode
1142:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1143:Generated_Source\PSoC4/Timer.c **** *
1144:Generated_Source\PSoC4/Timer.c **** * Summary:
1145:Generated_Source\PSoC4/Timer.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/Timer.c **** *  phiB input.
1147:Generated_Source\PSoC4/Timer.c **** *
1148:Generated_Source\PSoC4/Timer.c **** * Parameters:
1149:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/Timer.c **** *   Values:
1151:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/Timer.c **** *
1156:Generated_Source\PSoC4/Timer.c **** * Return:
1157:Generated_Source\PSoC4/Timer.c **** *  None
1158:Generated_Source\PSoC4/Timer.c **** *
1159:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/Timer.c **** void Timer_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/Timer.c **** {
 1097              		.loc 1 1161 0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 0
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 1101              	.LVL68:
 1102 0000 10B5     		push	{r4, lr}
 1103              		.cfi_def_cfa_offset 8
 1104              		.cfi_offset 4, -8
 1105              		.cfi_offset 14, -4
 1106 0002 0400     		movs	r4, r0
1162:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/Timer.c **** 
1164:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1107              		.loc 1 1164 0
 1108 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1109              	.LVL69:
1165:Generated_Source\PSoC4/Timer.c **** 
1166:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_START_MASK;
 1110              		.loc 1 1166 0
 1111 0008 054B     		ldr	r3, .L86
 1112 000a 1968     		ldr	r1, [r3]
 1113 000c 054A     		ldr	r2, .L86+4
 1114 000e 0A40     		ands	r2, r1
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 41


 1115 0010 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_START_SHIFT));
 1116              		.loc 1 1167 0
 1117 0012 1A68     		ldr	r2, [r3]
 1118 0014 2402     		lsls	r4, r4, #8
 1119              	.LVL70:
 1120 0016 1443     		orrs	r4, r2
 1121 0018 1C60     		str	r4, [r3]
1168:Generated_Source\PSoC4/Timer.c **** 
1169:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1122              		.loc 1 1169 0
 1123 001a FFF7FEFF 		bl	CyExitCriticalSection
 1124              	.LVL71:
1170:Generated_Source\PSoC4/Timer.c **** }
 1125              		.loc 1 1170 0
 1126              		@ sp needed
 1127 001e 10BD     		pop	{r4, pc}
 1128              	.L87:
 1129              		.align	2
 1130              	.L86:
 1131 0020 24012040 		.word	1075839268
 1132 0024 FFFCFFFF 		.word	-769
 1133              		.cfi_endproc
 1134              	.LFE32:
 1135              		.size	Timer_SetStartMode, .-Timer_SetStartMode
 1136              		.section	.text.Timer_SetStopMode,"ax",%progbits
 1137              		.align	2
 1138              		.global	Timer_SetStopMode
 1139              		.code	16
 1140              		.thumb_func
 1141              		.type	Timer_SetStopMode, %function
 1142              	Timer_SetStopMode:
 1143              	.LFB33:
1171:Generated_Source\PSoC4/Timer.c **** 
1172:Generated_Source\PSoC4/Timer.c **** 
1173:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetStopMode
1175:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1176:Generated_Source\PSoC4/Timer.c **** *
1177:Generated_Source\PSoC4/Timer.c **** * Summary:
1178:Generated_Source\PSoC4/Timer.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/Timer.c **** *
1180:Generated_Source\PSoC4/Timer.c **** * Parameters:
1181:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/Timer.c **** *   Values:
1183:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/Timer.c **** *
1188:Generated_Source\PSoC4/Timer.c **** * Return:
1189:Generated_Source\PSoC4/Timer.c **** *  None
1190:Generated_Source\PSoC4/Timer.c **** *
1191:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/Timer.c **** void Timer_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/Timer.c **** {
 1144              		.loc 1 1193 0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 42


 1145              		.cfi_startproc
 1146              		@ args = 0, pretend = 0, frame = 0
 1147              		@ frame_needed = 0, uses_anonymous_args = 0
 1148              	.LVL72:
 1149 0000 10B5     		push	{r4, lr}
 1150              		.cfi_def_cfa_offset 8
 1151              		.cfi_offset 4, -8
 1152              		.cfi_offset 14, -4
 1153 0002 0400     		movs	r4, r0
1194:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/Timer.c **** 
1196:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1154              		.loc 1 1196 0
 1155 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1156              	.LVL73:
1197:Generated_Source\PSoC4/Timer.c **** 
1198:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_STOP_MASK;
 1157              		.loc 1 1198 0
 1158 0008 054B     		ldr	r3, .L89
 1159 000a 1A68     		ldr	r2, [r3]
 1160 000c C021     		movs	r1, #192
 1161 000e 8A43     		bics	r2, r1
 1162 0010 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_STOP_SHIFT));
 1163              		.loc 1 1199 0
 1164 0012 1A68     		ldr	r2, [r3]
 1165 0014 A401     		lsls	r4, r4, #6
 1166              	.LVL74:
 1167 0016 1443     		orrs	r4, r2
 1168 0018 1C60     		str	r4, [r3]
1200:Generated_Source\PSoC4/Timer.c **** 
1201:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1169              		.loc 1 1201 0
 1170 001a FFF7FEFF 		bl	CyExitCriticalSection
 1171              	.LVL75:
1202:Generated_Source\PSoC4/Timer.c **** }
 1172              		.loc 1 1202 0
 1173              		@ sp needed
 1174 001e 10BD     		pop	{r4, pc}
 1175              	.L90:
 1176              		.align	2
 1177              	.L89:
 1178 0020 24012040 		.word	1075839268
 1179              		.cfi_endproc
 1180              	.LFE33:
 1181              		.size	Timer_SetStopMode, .-Timer_SetStopMode
 1182              		.section	.text.Timer_SetCountMode,"ax",%progbits
 1183              		.align	2
 1184              		.global	Timer_SetCountMode
 1185              		.code	16
 1186              		.thumb_func
 1187              		.type	Timer_SetCountMode, %function
 1188              	Timer_SetCountMode:
 1189              	.LFB34:
1203:Generated_Source\PSoC4/Timer.c **** 
1204:Generated_Source\PSoC4/Timer.c **** 
1205:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 43


1206:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetCountMode
1207:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1208:Generated_Source\PSoC4/Timer.c **** *
1209:Generated_Source\PSoC4/Timer.c **** * Summary:
1210:Generated_Source\PSoC4/Timer.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/Timer.c **** *  input.
1212:Generated_Source\PSoC4/Timer.c **** *
1213:Generated_Source\PSoC4/Timer.c **** * Parameters:
1214:Generated_Source\PSoC4/Timer.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/Timer.c **** *   Values:
1216:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/Timer.c **** *     - Timer_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/Timer.c **** *
1221:Generated_Source\PSoC4/Timer.c **** * Return:
1222:Generated_Source\PSoC4/Timer.c **** *  None
1223:Generated_Source\PSoC4/Timer.c **** *
1224:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/Timer.c **** void Timer_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/Timer.c **** {
 1190              		.loc 1 1226 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 0
 1193              		@ frame_needed = 0, uses_anonymous_args = 0
 1194              	.LVL76:
 1195 0000 10B5     		push	{r4, lr}
 1196              		.cfi_def_cfa_offset 8
 1197              		.cfi_offset 4, -8
 1198              		.cfi_offset 14, -4
 1199 0002 0400     		movs	r4, r0
1227:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/Timer.c **** 
1229:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1200              		.loc 1 1229 0
 1201 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1202              	.LVL77:
1230:Generated_Source\PSoC4/Timer.c **** 
1231:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG &= (uint32)~Timer_COUNT_MASK;
 1203              		.loc 1 1231 0
 1204 0008 054B     		ldr	r3, .L92
 1205 000a 1A68     		ldr	r2, [r3]
 1206 000c 0C21     		movs	r1, #12
 1207 000e 8A43     		bics	r2, r1
 1208 0010 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/Timer.c ****     Timer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_COUNT_SHIFT));
 1209              		.loc 1 1232 0
 1210 0012 1A68     		ldr	r2, [r3]
 1211 0014 A400     		lsls	r4, r4, #2
 1212              	.LVL78:
 1213 0016 1443     		orrs	r4, r2
 1214 0018 1C60     		str	r4, [r3]
1233:Generated_Source\PSoC4/Timer.c **** 
1234:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1215              		.loc 1 1234 0
 1216 001a FFF7FEFF 		bl	CyExitCriticalSection
 1217              	.LVL79:
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 44


1235:Generated_Source\PSoC4/Timer.c **** }
 1218              		.loc 1 1235 0
 1219              		@ sp needed
 1220 001e 10BD     		pop	{r4, pc}
 1221              	.L93:
 1222              		.align	2
 1223              	.L92:
 1224 0020 24012040 		.word	1075839268
 1225              		.cfi_endproc
 1226              	.LFE34:
 1227              		.size	Timer_SetCountMode, .-Timer_SetCountMode
 1228              		.section	.text.Timer_TriggerCommand,"ax",%progbits
 1229              		.align	2
 1230              		.global	Timer_TriggerCommand
 1231              		.code	16
 1232              		.thumb_func
 1233              		.type	Timer_TriggerCommand, %function
 1234              	Timer_TriggerCommand:
 1235              	.LFB35:
1236:Generated_Source\PSoC4/Timer.c **** 
1237:Generated_Source\PSoC4/Timer.c **** 
1238:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_TriggerCommand
1240:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1241:Generated_Source\PSoC4/Timer.c **** *
1242:Generated_Source\PSoC4/Timer.c **** * Summary:
1243:Generated_Source\PSoC4/Timer.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/Timer.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/Timer.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/Timer.c **** *
1247:Generated_Source\PSoC4/Timer.c **** * Parameters:
1248:Generated_Source\PSoC4/Timer.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/Timer.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/Timer.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/Timer.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/Timer.c **** *        define.
1253:Generated_Source\PSoC4/Timer.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/Timer.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/Timer.c **** *   Values:
1256:Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/Timer.c **** *     - Timer_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/Timer.c **** *
1261:Generated_Source\PSoC4/Timer.c **** * Return:
1262:Generated_Source\PSoC4/Timer.c **** *  None
1263:Generated_Source\PSoC4/Timer.c **** *
1264:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/Timer.c **** void Timer_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/Timer.c **** {
 1236              		.loc 1 1266 0
 1237              		.cfi_startproc
 1238              		@ args = 0, pretend = 0, frame = 0
 1239              		@ frame_needed = 0, uses_anonymous_args = 0
 1240              	.LVL80:
 1241 0000 70B5     		push	{r4, r5, r6, lr}
 1242              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 45


 1243              		.cfi_offset 4, -16
 1244              		.cfi_offset 5, -12
 1245              		.cfi_offset 6, -8
 1246              		.cfi_offset 14, -4
 1247 0002 0400     		movs	r4, r0
 1248 0004 0D00     		movs	r5, r1
1267:Generated_Source\PSoC4/Timer.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/Timer.c **** 
1269:Generated_Source\PSoC4/Timer.c ****     enableInterrupts = CyEnterCriticalSection();
 1249              		.loc 1 1269 0
 1250 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1251              	.LVL81:
1270:Generated_Source\PSoC4/Timer.c **** 
1271:Generated_Source\PSoC4/Timer.c ****     Timer_COMMAND_REG = ((uint32)(mask << command));
 1252              		.loc 1 1271 0
 1253 000a AC40     		lsls	r4, r4, r5
 1254              	.LVL82:
 1255 000c 024B     		ldr	r3, .L95
 1256 000e 1C60     		str	r4, [r3]
1272:Generated_Source\PSoC4/Timer.c **** 
1273:Generated_Source\PSoC4/Timer.c ****     CyExitCriticalSection(enableInterrupts);
 1257              		.loc 1 1273 0
 1258 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1259              	.LVL83:
1274:Generated_Source\PSoC4/Timer.c **** }
 1260              		.loc 1 1274 0
 1261              		@ sp needed
 1262              	.LVL84:
 1263 0014 70BD     		pop	{r4, r5, r6, pc}
 1264              	.L96:
 1265 0016 C046     		.align	2
 1266              	.L95:
 1267 0018 08002040 		.word	1075838984
 1268              		.cfi_endproc
 1269              	.LFE35:
 1270              		.size	Timer_TriggerCommand, .-Timer_TriggerCommand
 1271              		.section	.text.Timer_ReadStatus,"ax",%progbits
 1272              		.align	2
 1273              		.global	Timer_ReadStatus
 1274              		.code	16
 1275              		.thumb_func
 1276              		.type	Timer_ReadStatus, %function
 1277              	Timer_ReadStatus:
 1278              	.LFB36:
1275:Generated_Source\PSoC4/Timer.c **** 
1276:Generated_Source\PSoC4/Timer.c **** 
1277:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ReadStatus
1279:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1280:Generated_Source\PSoC4/Timer.c **** *
1281:Generated_Source\PSoC4/Timer.c **** * Summary:
1282:Generated_Source\PSoC4/Timer.c **** *  Reads the status of the Timer.
1283:Generated_Source\PSoC4/Timer.c **** *
1284:Generated_Source\PSoC4/Timer.c **** * Parameters:
1285:Generated_Source\PSoC4/Timer.c **** *  None
1286:Generated_Source\PSoC4/Timer.c **** *
1287:Generated_Source\PSoC4/Timer.c **** * Return:
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 46


1288:Generated_Source\PSoC4/Timer.c **** *  Status
1289:Generated_Source\PSoC4/Timer.c **** *   Values:
1290:Generated_Source\PSoC4/Timer.c **** *     - Timer_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/Timer.c **** *     - Timer_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/Timer.c **** *
1293:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/Timer.c **** uint32 Timer_ReadStatus(void)
1295:Generated_Source\PSoC4/Timer.c **** {
 1279              		.loc 1 1295 0
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 0
 1282              		@ frame_needed = 0, uses_anonymous_args = 0
 1283              		@ link register save eliminated.
1296:Generated_Source\PSoC4/Timer.c ****     return ((Timer_STATUS_REG >> Timer_RUNNING_STATUS_SHIFT) |
 1284              		.loc 1 1296 0
 1285 0000 034B     		ldr	r3, .L98
 1286 0002 1868     		ldr	r0, [r3]
 1287 0004 820F     		lsrs	r2, r0, #30
1297:Generated_Source\PSoC4/Timer.c ****             (Timer_STATUS_REG & Timer_STATUS_DOWN));
 1288              		.loc 1 1297 0
 1289 0006 1B68     		ldr	r3, [r3]
 1290 0008 0120     		movs	r0, #1
 1291 000a 1840     		ands	r0, r3
1296:Generated_Source\PSoC4/Timer.c ****     return ((Timer_STATUS_REG >> Timer_RUNNING_STATUS_SHIFT) |
 1292              		.loc 1 1296 0
 1293 000c 1043     		orrs	r0, r2
1298:Generated_Source\PSoC4/Timer.c **** }
 1294              		.loc 1 1298 0
 1295              		@ sp needed
 1296 000e 7047     		bx	lr
 1297              	.L99:
 1298              		.align	2
 1299              	.L98:
 1300 0010 04012040 		.word	1075839236
 1301              		.cfi_endproc
 1302              	.LFE36:
 1303              		.size	Timer_ReadStatus, .-Timer_ReadStatus
 1304              		.section	.text.Timer_SetInterruptMode,"ax",%progbits
 1305              		.align	2
 1306              		.global	Timer_SetInterruptMode
 1307              		.code	16
 1308              		.thumb_func
 1309              		.type	Timer_SetInterruptMode, %function
 1310              	Timer_SetInterruptMode:
 1311              	.LFB37:
1299:Generated_Source\PSoC4/Timer.c **** 
1300:Generated_Source\PSoC4/Timer.c **** 
1301:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetInterruptMode
1303:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1304:Generated_Source\PSoC4/Timer.c **** *
1305:Generated_Source\PSoC4/Timer.c **** * Summary:
1306:Generated_Source\PSoC4/Timer.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/Timer.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/Timer.c **** *
1309:Generated_Source\PSoC4/Timer.c **** * Parameters:
1310:Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of bits to be enabled
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 47


1311:Generated_Source\PSoC4/Timer.c **** *   Values:
1312:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/Timer.c **** *
1315:Generated_Source\PSoC4/Timer.c **** * Return:
1316:Generated_Source\PSoC4/Timer.c **** *  None
1317:Generated_Source\PSoC4/Timer.c **** *
1318:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/Timer.c **** void Timer_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/Timer.c **** {
 1312              		.loc 1 1320 0
 1313              		.cfi_startproc
 1314              		@ args = 0, pretend = 0, frame = 0
 1315              		@ frame_needed = 0, uses_anonymous_args = 0
 1316              		@ link register save eliminated.
 1317              	.LVL85:
1321:Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_MASK_REG =  interruptMask;
 1318              		.loc 1 1321 0
 1319 0000 014B     		ldr	r3, .L101
 1320 0002 1860     		str	r0, [r3]
1322:Generated_Source\PSoC4/Timer.c **** }
 1321              		.loc 1 1322 0
 1322              		@ sp needed
 1323 0004 7047     		bx	lr
 1324              	.L102:
 1325 0006 C046     		.align	2
 1326              	.L101:
 1327 0008 38012040 		.word	1075839288
 1328              		.cfi_endproc
 1329              	.LFE37:
 1330              		.size	Timer_SetInterruptMode, .-Timer_SetInterruptMode
 1331              		.section	.text.Timer_Init,"ax",%progbits
 1332              		.align	2
 1333              		.global	Timer_Init
 1334              		.code	16
 1335              		.thumb_func
 1336              		.type	Timer_Init, %function
 1337              	Timer_Init:
 1338              	.LFB2:
  39:Generated_Source\PSoC4/Timer.c **** 
 1339              		.loc 1 39 0
 1340              		.cfi_startproc
 1341              		@ args = 0, pretend = 0, frame = 0
 1342              		@ frame_needed = 0, uses_anonymous_args = 0
 1343 0000 10B5     		push	{r4, lr}
 1344              		.cfi_def_cfa_offset 8
 1345              		.cfi_offset 4, -8
 1346              		.cfi_offset 14, -4
  58:Generated_Source\PSoC4/Timer.c ****         
 1347              		.loc 1 58 0
 1348 0002 8022     		movs	r2, #128
 1349 0004 D200     		lsls	r2, r2, #3
 1350 0006 0A4B     		ldr	r3, .L104
 1351 0008 1A60     		str	r2, [r3]
  61:Generated_Source\PSoC4/Timer.c ****     
 1352              		.loc 1 61 0
 1353 000a 0A4A     		ldr	r2, .L104+4
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 48


 1354 000c 0A4B     		ldr	r3, .L104+8
 1355 000e 1A60     		str	r2, [r3]
  64:Generated_Source\PSoC4/Timer.c ****         
 1356              		.loc 1 64 0
 1357 0010 0120     		movs	r0, #1
 1358 0012 FFF7FEFF 		bl	Timer_SetInterruptMode
 1359              	.LVL86:
  67:Generated_Source\PSoC4/Timer.c **** 
 1360              		.loc 1 67 0
 1361 0016 FA20     		movs	r0, #250
 1362 0018 0001     		lsls	r0, r0, #4
 1363 001a FFF7FEFF 		bl	Timer_WritePeriod
 1364              	.LVL87:
  70:Generated_Source\PSoC4/Timer.c **** 
 1365              		.loc 1 70 0
 1366 001e FA20     		movs	r0, #250
 1367 0020 C000     		lsls	r0, r0, #3
 1368 0022 FFF7FEFF 		bl	Timer_WriteCompare
 1369              	.LVL88:
  84:Generated_Source\PSoC4/Timer.c ****         #endif /* (Timer_CY_TCPWM_V2 && Timer_TIMER_UPDOWN_CNT_USED && !Timer_CY_TCPWM_4000) */
 1370              		.loc 1 84 0
 1371 0026 0020     		movs	r0, #0
 1372 0028 FFF7FEFF 		bl	Timer_WriteCounter
 1373              	.LVL89:
 160:Generated_Source\PSoC4/Timer.c **** 
 1374              		.loc 1 160 0
 1375              		@ sp needed
 1376 002c 10BD     		pop	{r4, pc}
 1377              	.L105:
 1378 002e C046     		.align	2
 1379              	.L104:
 1380 0030 00012040 		.word	1075839232
 1381 0034 5E030000 		.word	862
 1382 0038 24012040 		.word	1075839268
 1383              		.cfi_endproc
 1384              	.LFE2:
 1385              		.size	Timer_Init, .-Timer_Init
 1386              		.section	.text.Timer_Start,"ax",%progbits
 1387              		.align	2
 1388              		.global	Timer_Start
 1389              		.code	16
 1390              		.thumb_func
 1391              		.type	Timer_Start, %function
 1392              	Timer_Start:
 1393              	.LFB4:
 231:Generated_Source\PSoC4/Timer.c ****     if (0u == Timer_initVar)
 1394              		.loc 1 231 0
 1395              		.cfi_startproc
 1396              		@ args = 0, pretend = 0, frame = 0
 1397              		@ frame_needed = 0, uses_anonymous_args = 0
 1398 0000 10B5     		push	{r4, lr}
 1399              		.cfi_def_cfa_offset 8
 1400              		.cfi_offset 4, -8
 1401              		.cfi_offset 14, -4
 232:Generated_Source\PSoC4/Timer.c ****     {
 1402              		.loc 1 232 0
 1403 0002 064B     		ldr	r3, .L108
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 49


 1404 0004 1B78     		ldrb	r3, [r3]
 1405 0006 002B     		cmp	r3, #0
 1406 0008 04D1     		bne	.L107
 234:Generated_Source\PSoC4/Timer.c ****         Timer_initVar = 1u;
 1407              		.loc 1 234 0
 1408 000a FFF7FEFF 		bl	Timer_Init
 1409              	.LVL90:
 235:Generated_Source\PSoC4/Timer.c ****     }
 1410              		.loc 1 235 0
 1411 000e 0122     		movs	r2, #1
 1412 0010 024B     		ldr	r3, .L108
 1413 0012 1A70     		strb	r2, [r3]
 1414              	.L107:
 238:Generated_Source\PSoC4/Timer.c **** }
 1415              		.loc 1 238 0
 1416 0014 FFF7FEFF 		bl	Timer_Enable
 1417              	.LVL91:
 239:Generated_Source\PSoC4/Timer.c **** 
 1418              		.loc 1 239 0
 1419              		@ sp needed
 1420 0018 10BD     		pop	{r4, pc}
 1421              	.L109:
 1422 001a C046     		.align	2
 1423              	.L108:
 1424 001c 00000000 		.word	.LANCHOR0
 1425              		.cfi_endproc
 1426              	.LFE4:
 1427              		.size	Timer_Start, .-Timer_Start
 1428              		.section	.text.Timer_GetInterruptSourceMasked,"ax",%progbits
 1429              		.align	2
 1430              		.global	Timer_GetInterruptSourceMasked
 1431              		.code	16
 1432              		.thumb_func
 1433              		.type	Timer_GetInterruptSourceMasked, %function
 1434              	Timer_GetInterruptSourceMasked:
 1435              	.LFB38:
1323:Generated_Source\PSoC4/Timer.c **** 
1324:Generated_Source\PSoC4/Timer.c **** 
1325:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1328:Generated_Source\PSoC4/Timer.c **** *
1329:Generated_Source\PSoC4/Timer.c **** * Summary:
1330:Generated_Source\PSoC4/Timer.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/Timer.c **** *
1332:Generated_Source\PSoC4/Timer.c **** * Parameters:
1333:Generated_Source\PSoC4/Timer.c **** *   None
1334:Generated_Source\PSoC4/Timer.c **** *
1335:Generated_Source\PSoC4/Timer.c **** * Return:
1336:Generated_Source\PSoC4/Timer.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/Timer.c **** *   Values:
1338:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/Timer.c **** *
1341:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/Timer.c **** uint32 Timer_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/Timer.c **** {
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 50


 1436              		.loc 1 1343 0
 1437              		.cfi_startproc
 1438              		@ args = 0, pretend = 0, frame = 0
 1439              		@ frame_needed = 0, uses_anonymous_args = 0
 1440              		@ link register save eliminated.
1344:Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_MASKED_REG);
 1441              		.loc 1 1344 0
 1442 0000 014B     		ldr	r3, .L111
 1443 0002 1868     		ldr	r0, [r3]
1345:Generated_Source\PSoC4/Timer.c **** }
 1444              		.loc 1 1345 0
 1445              		@ sp needed
 1446 0004 7047     		bx	lr
 1447              	.L112:
 1448 0006 C046     		.align	2
 1449              	.L111:
 1450 0008 3C012040 		.word	1075839292
 1451              		.cfi_endproc
 1452              	.LFE38:
 1453              		.size	Timer_GetInterruptSourceMasked, .-Timer_GetInterruptSourceMasked
 1454              		.section	.text.Timer_GetInterruptSource,"ax",%progbits
 1455              		.align	2
 1456              		.global	Timer_GetInterruptSource
 1457              		.code	16
 1458              		.thumb_func
 1459              		.type	Timer_GetInterruptSource, %function
 1460              	Timer_GetInterruptSource:
 1461              	.LFB39:
1346:Generated_Source\PSoC4/Timer.c **** 
1347:Generated_Source\PSoC4/Timer.c **** 
1348:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_GetInterruptSource
1350:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1351:Generated_Source\PSoC4/Timer.c **** *
1352:Generated_Source\PSoC4/Timer.c **** * Summary:
1353:Generated_Source\PSoC4/Timer.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/Timer.c **** *
1355:Generated_Source\PSoC4/Timer.c **** * Parameters:
1356:Generated_Source\PSoC4/Timer.c **** *  None
1357:Generated_Source\PSoC4/Timer.c **** *
1358:Generated_Source\PSoC4/Timer.c **** * Return:
1359:Generated_Source\PSoC4/Timer.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/Timer.c **** *   Values:
1361:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/Timer.c **** *
1364:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/Timer.c **** uint32 Timer_GetInterruptSource(void)
1366:Generated_Source\PSoC4/Timer.c **** {
 1462              		.loc 1 1366 0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 0
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
 1466              		@ link register save eliminated.
1367:Generated_Source\PSoC4/Timer.c ****     return (Timer_INTERRUPT_REQ_REG);
 1467              		.loc 1 1367 0
 1468 0000 014B     		ldr	r3, .L114
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 51


 1469 0002 1868     		ldr	r0, [r3]
1368:Generated_Source\PSoC4/Timer.c **** }
 1470              		.loc 1 1368 0
 1471              		@ sp needed
 1472 0004 7047     		bx	lr
 1473              	.L115:
 1474 0006 C046     		.align	2
 1475              	.L114:
 1476 0008 30012040 		.word	1075839280
 1477              		.cfi_endproc
 1478              	.LFE39:
 1479              		.size	Timer_GetInterruptSource, .-Timer_GetInterruptSource
 1480              		.section	.text.Timer_ClearInterrupt,"ax",%progbits
 1481              		.align	2
 1482              		.global	Timer_ClearInterrupt
 1483              		.code	16
 1484              		.thumb_func
 1485              		.type	Timer_ClearInterrupt, %function
 1486              	Timer_ClearInterrupt:
 1487              	.LFB40:
1369:Generated_Source\PSoC4/Timer.c **** 
1370:Generated_Source\PSoC4/Timer.c **** 
1371:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_ClearInterrupt
1373:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1374:Generated_Source\PSoC4/Timer.c **** *
1375:Generated_Source\PSoC4/Timer.c **** * Summary:
1376:Generated_Source\PSoC4/Timer.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/Timer.c **** *
1378:Generated_Source\PSoC4/Timer.c **** * Parameters:
1379:Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/Timer.c **** *   Values:
1381:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/Timer.c **** *
1384:Generated_Source\PSoC4/Timer.c **** * Return:
1385:Generated_Source\PSoC4/Timer.c **** *  None
1386:Generated_Source\PSoC4/Timer.c **** *
1387:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/Timer.c **** void Timer_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/Timer.c **** {
 1488              		.loc 1 1389 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 0
 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492              		@ link register save eliminated.
 1493              	.LVL92:
1390:Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_REQ_REG = interruptMask;
 1494              		.loc 1 1390 0
 1495 0000 014B     		ldr	r3, .L117
 1496 0002 1860     		str	r0, [r3]
1391:Generated_Source\PSoC4/Timer.c **** }
 1497              		.loc 1 1391 0
 1498              		@ sp needed
 1499 0004 7047     		bx	lr
 1500              	.L118:
 1501 0006 C046     		.align	2
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 52


 1502              	.L117:
 1503 0008 30012040 		.word	1075839280
 1504              		.cfi_endproc
 1505              	.LFE40:
 1506              		.size	Timer_ClearInterrupt, .-Timer_ClearInterrupt
 1507              		.section	.text.Timer_SetInterrupt,"ax",%progbits
 1508              		.align	2
 1509              		.global	Timer_SetInterrupt
 1510              		.code	16
 1511              		.thumb_func
 1512              		.type	Timer_SetInterrupt, %function
 1513              	Timer_SetInterrupt:
 1514              	.LFB41:
1392:Generated_Source\PSoC4/Timer.c **** 
1393:Generated_Source\PSoC4/Timer.c **** 
1394:Generated_Source\PSoC4/Timer.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/Timer.c **** * Function Name: Timer_SetInterrupt
1396:Generated_Source\PSoC4/Timer.c **** ********************************************************************************
1397:Generated_Source\PSoC4/Timer.c **** *
1398:Generated_Source\PSoC4/Timer.c **** * Summary:
1399:Generated_Source\PSoC4/Timer.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/Timer.c **** *
1401:Generated_Source\PSoC4/Timer.c **** * Parameters:
1402:Generated_Source\PSoC4/Timer.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/Timer.c **** *   Values:
1404:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/Timer.c **** *     - Timer_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/Timer.c **** *
1407:Generated_Source\PSoC4/Timer.c **** * Return:
1408:Generated_Source\PSoC4/Timer.c **** *  None
1409:Generated_Source\PSoC4/Timer.c **** *
1410:Generated_Source\PSoC4/Timer.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/Timer.c **** void Timer_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/Timer.c **** {
 1515              		.loc 1 1412 0
 1516              		.cfi_startproc
 1517              		@ args = 0, pretend = 0, frame = 0
 1518              		@ frame_needed = 0, uses_anonymous_args = 0
 1519              		@ link register save eliminated.
 1520              	.LVL93:
1413:Generated_Source\PSoC4/Timer.c ****     Timer_INTERRUPT_SET_REG = interruptMask;
 1521              		.loc 1 1413 0
 1522 0000 014B     		ldr	r3, .L120
 1523 0002 1860     		str	r0, [r3]
1414:Generated_Source\PSoC4/Timer.c **** }
 1524              		.loc 1 1414 0
 1525              		@ sp needed
 1526 0004 7047     		bx	lr
 1527              	.L121:
 1528 0006 C046     		.align	2
 1529              	.L120:
 1530 0008 34012040 		.word	1075839284
 1531              		.cfi_endproc
 1532              	.LFE41:
 1533              		.size	Timer_SetInterrupt, .-Timer_SetInterrupt
 1534              		.global	Timer_initVar
 1535              		.bss
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 53


 1536              		.set	.LANCHOR0,. + 0
 1537              		.type	Timer_initVar, %object
 1538              		.size	Timer_initVar, 1
 1539              	Timer_initVar:
 1540 0000 00       		.space	1
 1541              		.text
 1542              	.Letext0:
 1543              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1544              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1545              		.section	.debug_info,"",%progbits
 1546              	.Ldebug_info0:
 1547 0000 F3080000 		.4byte	0x8f3
 1548 0004 0400     		.2byte	0x4
 1549 0006 00000000 		.4byte	.Ldebug_abbrev0
 1550 000a 04       		.byte	0x4
 1551 000b 01       		.uleb128 0x1
 1552 000c BB000000 		.4byte	.LASF79
 1553 0010 0C       		.byte	0xc
 1554 0011 04050000 		.4byte	.LASF80
 1555 0015 4C000000 		.4byte	.LASF81
 1556 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1557 001d 00000000 		.4byte	0
 1558 0021 00000000 		.4byte	.Ldebug_line0
 1559 0025 02       		.uleb128 0x2
 1560 0026 01       		.byte	0x1
 1561 0027 06       		.byte	0x6
 1562 0028 C2010000 		.4byte	.LASF0
 1563 002c 02       		.uleb128 0x2
 1564 002d 01       		.byte	0x1
 1565 002e 08       		.byte	0x8
 1566 002f 54040000 		.4byte	.LASF1
 1567 0033 02       		.uleb128 0x2
 1568 0034 02       		.byte	0x2
 1569 0035 05       		.byte	0x5
 1570 0036 73040000 		.4byte	.LASF2
 1571 003a 02       		.uleb128 0x2
 1572 003b 02       		.byte	0x2
 1573 003c 07       		.byte	0x7
 1574 003d 09030000 		.4byte	.LASF3
 1575 0041 02       		.uleb128 0x2
 1576 0042 04       		.byte	0x4
 1577 0043 05       		.byte	0x5
 1578 0044 F9010000 		.4byte	.LASF4
 1579 0048 02       		.uleb128 0x2
 1580 0049 04       		.byte	0x4
 1581 004a 07       		.byte	0x7
 1582 004b CA020000 		.4byte	.LASF5
 1583 004f 02       		.uleb128 0x2
 1584 0050 08       		.byte	0x8
 1585 0051 05       		.byte	0x5
 1586 0052 B4010000 		.4byte	.LASF6
 1587 0056 02       		.uleb128 0x2
 1588 0057 08       		.byte	0x8
 1589 0058 07       		.byte	0x7
 1590 0059 6C010000 		.4byte	.LASF7
 1591 005d 03       		.uleb128 0x3
 1592 005e 04       		.byte	0x4
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 54


 1593 005f 05       		.byte	0x5
 1594 0060 696E7400 		.ascii	"int\000"
 1595 0064 02       		.uleb128 0x2
 1596 0065 04       		.byte	0x4
 1597 0066 07       		.byte	0x7
 1598 0067 A9020000 		.4byte	.LASF8
 1599 006b 04       		.uleb128 0x4
 1600 006c 29020000 		.4byte	.LASF9
 1601 0070 02       		.byte	0x2
 1602 0071 E401     		.2byte	0x1e4
 1603 0073 2C000000 		.4byte	0x2c
 1604 0077 04       		.uleb128 0x4
 1605 0078 4D020000 		.4byte	.LASF10
 1606 007c 02       		.byte	0x2
 1607 007d E601     		.2byte	0x1e6
 1608 007f 48000000 		.4byte	0x48
 1609 0083 02       		.uleb128 0x2
 1610 0084 04       		.byte	0x4
 1611 0085 04       		.byte	0x4
 1612 0086 F8030000 		.4byte	.LASF11
 1613 008a 02       		.uleb128 0x2
 1614 008b 08       		.byte	0x8
 1615 008c 04       		.byte	0x4
 1616 008d 2F020000 		.4byte	.LASF12
 1617 0091 02       		.uleb128 0x2
 1618 0092 01       		.byte	0x1
 1619 0093 08       		.byte	0x8
 1620 0094 BE040000 		.4byte	.LASF13
 1621 0098 04       		.uleb128 0x4
 1622 0099 79030000 		.4byte	.LASF14
 1623 009d 02       		.byte	0x2
 1624 009e 9002     		.2byte	0x290
 1625 00a0 A4000000 		.4byte	0xa4
 1626 00a4 05       		.uleb128 0x5
 1627 00a5 77000000 		.4byte	0x77
 1628 00a9 02       		.uleb128 0x2
 1629 00aa 08       		.byte	0x8
 1630 00ab 04       		.byte	0x4
 1631 00ac B2030000 		.4byte	.LASF15
 1632 00b0 02       		.uleb128 0x2
 1633 00b1 04       		.byte	0x4
 1634 00b2 07       		.byte	0x7
 1635 00b3 94030000 		.4byte	.LASF16
 1636 00b7 06       		.uleb128 0x6
 1637 00b8 E5020000 		.4byte	.LASF17
 1638 00bc 01       		.byte	0x1
 1639 00bd B1       		.byte	0xb1
 1640 00be 00000000 		.4byte	.LFB3
 1641 00c2 1C000000 		.4byte	.LFE3-.LFB3
 1642 00c6 01       		.uleb128 0x1
 1643 00c7 9C       		.byte	0x9c
 1644 00c8 EE000000 		.4byte	0xee
 1645 00cc 07       		.uleb128 0x7
 1646 00cd 23050000 		.4byte	.LASF19
 1647 00d1 01       		.byte	0x1
 1648 00d2 B3       		.byte	0xb3
 1649 00d3 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 55


 1650 00d7 00000000 		.4byte	.LLST0
 1651 00db 08       		.uleb128 0x8
 1652 00dc 06000000 		.4byte	.LVL0
 1653 00e0 E0080000 		.4byte	0x8e0
 1654 00e4 08       		.uleb128 0x8
 1655 00e5 14000000 		.4byte	.LVL1
 1656 00e9 EB080000 		.4byte	0x8eb
 1657 00ed 00       		.byte	0
 1658 00ee 09       		.uleb128 0x9
 1659 00ef 41030000 		.4byte	.LASF18
 1660 00f3 01       		.byte	0x1
 1661 00f4 0001     		.2byte	0x100
 1662 00f6 00000000 		.4byte	.LFB5
 1663 00fa 1C000000 		.4byte	.LFE5-.LFB5
 1664 00fe 01       		.uleb128 0x1
 1665 00ff 9C       		.byte	0x9c
 1666 0100 27010000 		.4byte	0x127
 1667 0104 0A       		.uleb128 0xa
 1668 0105 23050000 		.4byte	.LASF19
 1669 0109 01       		.byte	0x1
 1670 010a 0201     		.2byte	0x102
 1671 010c 6B000000 		.4byte	0x6b
 1672 0110 13000000 		.4byte	.LLST1
 1673 0114 08       		.uleb128 0x8
 1674 0115 06000000 		.4byte	.LVL2
 1675 0119 E0080000 		.4byte	0x8e0
 1676 011d 08       		.uleb128 0x8
 1677 011e 14000000 		.4byte	.LVL3
 1678 0122 EB080000 		.4byte	0x8eb
 1679 0126 00       		.byte	0
 1680 0127 09       		.uleb128 0x9
 1681 0128 50010000 		.4byte	.LASF20
 1682 012c 01       		.byte	0x1
 1683 012d 2501     		.2byte	0x125
 1684 012f 00000000 		.4byte	.LFB6
 1685 0133 28000000 		.4byte	.LFE6-.LFB6
 1686 0137 01       		.uleb128 0x1
 1687 0138 9C       		.byte	0x9c
 1688 0139 70010000 		.4byte	0x170
 1689 013d 0B       		.uleb128 0xb
 1690 013e C3040000 		.4byte	.LASF22
 1691 0142 01       		.byte	0x1
 1692 0143 2501     		.2byte	0x125
 1693 0145 77000000 		.4byte	0x77
 1694 0149 26000000 		.4byte	.LLST2
 1695 014d 0A       		.uleb128 0xa
 1696 014e 23050000 		.4byte	.LASF19
 1697 0152 01       		.byte	0x1
 1698 0153 2701     		.2byte	0x127
 1699 0155 6B000000 		.4byte	0x6b
 1700 0159 52000000 		.4byte	.LLST3
 1701 015d 08       		.uleb128 0x8
 1702 015e 08000000 		.4byte	.LVL5
 1703 0162 E0080000 		.4byte	0x8e0
 1704 0166 08       		.uleb128 0x8
 1705 0167 1C000000 		.4byte	.LVL7
 1706 016b EB080000 		.4byte	0x8eb
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 56


 1707 016f 00       		.byte	0
 1708 0170 09       		.uleb128 0x9
 1709 0171 CE010000 		.4byte	.LASF21
 1710 0175 01       		.byte	0x1
 1711 0176 4601     		.2byte	0x146
 1712 0178 00000000 		.4byte	.LFB7
 1713 017c 28000000 		.4byte	.LFE7-.LFB7
 1714 0180 01       		.uleb128 0x1
 1715 0181 9C       		.byte	0x9c
 1716 0182 B9010000 		.4byte	0x1b9
 1717 0186 0B       		.uleb128 0xb
 1718 0187 AD010000 		.4byte	.LASF23
 1719 018b 01       		.byte	0x1
 1720 018c 4601     		.2byte	0x146
 1721 018e 77000000 		.4byte	0x77
 1722 0192 65000000 		.4byte	.LLST4
 1723 0196 0A       		.uleb128 0xa
 1724 0197 23050000 		.4byte	.LASF19
 1725 019b 01       		.byte	0x1
 1726 019c 4801     		.2byte	0x148
 1727 019e 6B000000 		.4byte	0x6b
 1728 01a2 91000000 		.4byte	.LLST5
 1729 01a6 08       		.uleb128 0x8
 1730 01a7 08000000 		.4byte	.LVL9
 1731 01ab E0080000 		.4byte	0x8e0
 1732 01af 08       		.uleb128 0x8
 1733 01b0 1C000000 		.4byte	.LVL11
 1734 01b4 EB080000 		.4byte	0x8eb
 1735 01b8 00       		.byte	0
 1736 01b9 09       		.uleb128 0x9
 1737 01ba 8B040000 		.4byte	.LASF24
 1738 01be 01       		.byte	0x1
 1739 01bf 6B01     		.2byte	0x16b
 1740 01c1 00000000 		.4byte	.LFB8
 1741 01c5 28000000 		.4byte	.LFE8-.LFB8
 1742 01c9 01       		.uleb128 0x1
 1743 01ca 9C       		.byte	0x9c
 1744 01cb 02020000 		.4byte	0x202
 1745 01cf 0B       		.uleb128 0xb
 1746 01d0 FE030000 		.4byte	.LASF25
 1747 01d4 01       		.byte	0x1
 1748 01d5 6B01     		.2byte	0x16b
 1749 01d7 77000000 		.4byte	0x77
 1750 01db A4000000 		.4byte	.LLST6
 1751 01df 0A       		.uleb128 0xa
 1752 01e0 23050000 		.4byte	.LASF19
 1753 01e4 01       		.byte	0x1
 1754 01e5 6D01     		.2byte	0x16d
 1755 01e7 6B000000 		.4byte	0x6b
 1756 01eb D0000000 		.4byte	.LLST7
 1757 01ef 08       		.uleb128 0x8
 1758 01f0 08000000 		.4byte	.LVL13
 1759 01f4 E0080000 		.4byte	0x8e0
 1760 01f8 08       		.uleb128 0x8
 1761 01f9 1C000000 		.4byte	.LVL15
 1762 01fd EB080000 		.4byte	0x8eb
 1763 0201 00       		.byte	0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 57


 1764 0202 09       		.uleb128 0x9
 1765 0203 49050000 		.4byte	.LASF26
 1766 0207 01       		.byte	0x1
 1767 0208 8B01     		.2byte	0x18b
 1768 020a 00000000 		.4byte	.LFB9
 1769 020e 30000000 		.4byte	.LFE9-.LFB9
 1770 0212 01       		.uleb128 0x1
 1771 0213 9C       		.byte	0x9c
 1772 0214 4B020000 		.4byte	0x24b
 1773 0218 0B       		.uleb128 0xb
 1774 0219 4C030000 		.4byte	.LASF27
 1775 021d 01       		.byte	0x1
 1776 021e 8B01     		.2byte	0x18b
 1777 0220 77000000 		.4byte	0x77
 1778 0224 E3000000 		.4byte	.LLST8
 1779 0228 0A       		.uleb128 0xa
 1780 0229 23050000 		.4byte	.LASF19
 1781 022d 01       		.byte	0x1
 1782 022e 8D01     		.2byte	0x18d
 1783 0230 6B000000 		.4byte	0x6b
 1784 0234 0F010000 		.4byte	.LLST9
 1785 0238 08       		.uleb128 0x8
 1786 0239 08000000 		.4byte	.LVL17
 1787 023d E0080000 		.4byte	0x8e0
 1788 0241 08       		.uleb128 0x8
 1789 0242 24000000 		.4byte	.LVL18
 1790 0246 EB080000 		.4byte	0x8eb
 1791 024a 00       		.byte	0
 1792 024b 09       		.uleb128 0x9
 1793 024c 93050000 		.4byte	.LASF28
 1794 0250 01       		.byte	0x1
 1795 0251 C101     		.2byte	0x1c1
 1796 0253 00000000 		.4byte	.LFB10
 1797 0257 10000000 		.4byte	.LFE10-.LFB10
 1798 025b 01       		.uleb128 0x1
 1799 025c 9C       		.byte	0x9c
 1800 025d 72020000 		.4byte	0x272
 1801 0261 0B       		.uleb128 0xb
 1802 0262 DC020000 		.4byte	.LASF29
 1803 0266 01       		.byte	0x1
 1804 0267 C101     		.2byte	0x1c1
 1805 0269 77000000 		.4byte	0x77
 1806 026d 22010000 		.4byte	.LLST10
 1807 0271 00       		.byte	0
 1808 0272 09       		.uleb128 0x9
 1809 0273 98010000 		.4byte	.LASF30
 1810 0277 01       		.byte	0x1
 1811 0278 E501     		.2byte	0x1e5
 1812 027a 00000000 		.4byte	.LFB11
 1813 027e 28000000 		.4byte	.LFE11-.LFB11
 1814 0282 01       		.uleb128 0x1
 1815 0283 9C       		.byte	0x9c
 1816 0284 BB020000 		.4byte	0x2bb
 1817 0288 0B       		.uleb128 0xb
 1818 0289 5A050000 		.4byte	.LASF31
 1819 028d 01       		.byte	0x1
 1820 028e E501     		.2byte	0x1e5
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 58


 1821 0290 77000000 		.4byte	0x77
 1822 0294 43010000 		.4byte	.LLST11
 1823 0298 0A       		.uleb128 0xa
 1824 0299 23050000 		.4byte	.LASF19
 1825 029d 01       		.byte	0x1
 1826 029e E701     		.2byte	0x1e7
 1827 02a0 6B000000 		.4byte	0x6b
 1828 02a4 6F010000 		.4byte	.LLST12
 1829 02a8 08       		.uleb128 0x8
 1830 02a9 08000000 		.4byte	.LVL23
 1831 02ad E0080000 		.4byte	0x8e0
 1832 02b1 08       		.uleb128 0x8
 1833 02b2 22000000 		.4byte	.LVL25
 1834 02b6 EB080000 		.4byte	0x8eb
 1835 02ba 00       		.byte	0
 1836 02bb 09       		.uleb128 0x9
 1837 02bc 00000000 		.4byte	.LASF32
 1838 02c0 01       		.byte	0x1
 1839 02c1 0702     		.2byte	0x207
 1840 02c3 00000000 		.4byte	.LFB12
 1841 02c7 28000000 		.4byte	.LFE12-.LFB12
 1842 02cb 01       		.uleb128 0x1
 1843 02cc 9C       		.byte	0x9c
 1844 02cd 04030000 		.4byte	0x304
 1845 02d1 0B       		.uleb128 0xb
 1846 02d2 62040000 		.4byte	.LASF33
 1847 02d6 01       		.byte	0x1
 1848 02d7 0702     		.2byte	0x207
 1849 02d9 77000000 		.4byte	0x77
 1850 02dd 82010000 		.4byte	.LLST13
 1851 02e1 0A       		.uleb128 0xa
 1852 02e2 23050000 		.4byte	.LASF19
 1853 02e6 01       		.byte	0x1
 1854 02e7 0902     		.2byte	0x209
 1855 02e9 6B000000 		.4byte	0x6b
 1856 02ed AE010000 		.4byte	.LLST14
 1857 02f1 08       		.uleb128 0x8
 1858 02f2 08000000 		.4byte	.LVL27
 1859 02f6 E0080000 		.4byte	0x8e0
 1860 02fa 08       		.uleb128 0x8
 1861 02fb 22000000 		.4byte	.LVL29
 1862 02ff EB080000 		.4byte	0x8eb
 1863 0303 00       		.byte	0
 1864 0304 09       		.uleb128 0x9
 1865 0305 83010000 		.4byte	.LASF34
 1866 0309 01       		.byte	0x1
 1867 030a 2802     		.2byte	0x228
 1868 030c 00000000 		.4byte	.LFB13
 1869 0310 2C000000 		.4byte	.LFE13-.LFB13
 1870 0314 01       		.uleb128 0x1
 1871 0315 9C       		.byte	0x9c
 1872 0316 4D030000 		.4byte	0x34d
 1873 031a 0B       		.uleb128 0xb
 1874 031b 8A020000 		.4byte	.LASF35
 1875 031f 01       		.byte	0x1
 1876 0320 2802     		.2byte	0x228
 1877 0322 77000000 		.4byte	0x77
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 59


 1878 0326 C1010000 		.4byte	.LLST15
 1879 032a 0A       		.uleb128 0xa
 1880 032b 23050000 		.4byte	.LASF19
 1881 032f 01       		.byte	0x1
 1882 0330 2A02     		.2byte	0x22a
 1883 0332 6B000000 		.4byte	0x6b
 1884 0336 ED010000 		.4byte	.LLST16
 1885 033a 08       		.uleb128 0x8
 1886 033b 08000000 		.4byte	.LVL31
 1887 033f E0080000 		.4byte	0x8e0
 1888 0343 08       		.uleb128 0x8
 1889 0344 20000000 		.4byte	.LVL33
 1890 0348 EB080000 		.4byte	0x8eb
 1891 034c 00       		.byte	0
 1892 034d 09       		.uleb128 0x9
 1893 034e BE030000 		.4byte	.LASF36
 1894 0352 01       		.byte	0x1
 1895 0353 4902     		.2byte	0x249
 1896 0355 00000000 		.4byte	.LFB14
 1897 0359 28000000 		.4byte	.LFE14-.LFB14
 1898 035d 01       		.uleb128 0x1
 1899 035e 9C       		.byte	0x9c
 1900 035f 96030000 		.4byte	0x396
 1901 0363 0B       		.uleb128 0xb
 1902 0364 73020000 		.4byte	.LASF37
 1903 0368 01       		.byte	0x1
 1904 0369 4902     		.2byte	0x249
 1905 036b 77000000 		.4byte	0x77
 1906 036f 00020000 		.4byte	.LLST17
 1907 0373 0A       		.uleb128 0xa
 1908 0374 23050000 		.4byte	.LASF19
 1909 0378 01       		.byte	0x1
 1910 0379 4B02     		.2byte	0x24b
 1911 037b 6B000000 		.4byte	0x6b
 1912 037f 2C020000 		.4byte	.LLST18
 1913 0383 08       		.uleb128 0x8
 1914 0384 08000000 		.4byte	.LVL35
 1915 0388 E0080000 		.4byte	0x8e0
 1916 038c 08       		.uleb128 0x8
 1917 038d 1C000000 		.4byte	.LVL37
 1918 0391 EB080000 		.4byte	0x8eb
 1919 0395 00       		.byte	0
 1920 0396 09       		.uleb128 0x9
 1921 0397 1C030000 		.4byte	.LASF38
 1922 039b 01       		.byte	0x1
 1923 039c 6702     		.2byte	0x267
 1924 039e 00000000 		.4byte	.LFB15
 1925 03a2 10000000 		.4byte	.LFE15-.LFB15
 1926 03a6 01       		.uleb128 0x1
 1927 03a7 9C       		.byte	0x9c
 1928 03a8 BD030000 		.4byte	0x3bd
 1929 03ac 0B       		.uleb128 0xb
 1930 03ad 17000000 		.4byte	.LASF39
 1931 03b1 01       		.byte	0x1
 1932 03b2 6702     		.2byte	0x267
 1933 03b4 77000000 		.4byte	0x77
 1934 03b8 3F020000 		.4byte	.LLST19
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 60


 1935 03bc 00       		.byte	0
 1936 03bd 0C       		.uleb128 0xc
 1937 03be 2F030000 		.4byte	.LASF44
 1938 03c2 01       		.byte	0x1
 1939 03c3 7B02     		.2byte	0x27b
 1940 03c5 77000000 		.4byte	0x77
 1941 03c9 00000000 		.4byte	.LFB16
 1942 03cd 10000000 		.4byte	.LFE16-.LFB16
 1943 03d1 01       		.uleb128 0x1
 1944 03d2 9C       		.byte	0x9c
 1945 03d3 09       		.uleb128 0x9
 1946 03d4 A9040000 		.4byte	.LASF40
 1947 03d8 01       		.byte	0x1
 1948 03d9 9802     		.2byte	0x298
 1949 03db 00000000 		.4byte	.LFB17
 1950 03df 28000000 		.4byte	.LFE17-.LFB17
 1951 03e3 01       		.uleb128 0x1
 1952 03e4 9C       		.byte	0x9c
 1953 03e5 1C040000 		.4byte	0x41c
 1954 03e9 0B       		.uleb128 0xb
 1955 03ea DC040000 		.4byte	.LASF41
 1956 03ee 01       		.byte	0x1
 1957 03ef 9802     		.2byte	0x298
 1958 03f1 77000000 		.4byte	0x77
 1959 03f5 60020000 		.4byte	.LLST20
 1960 03f9 0A       		.uleb128 0xa
 1961 03fa 23050000 		.4byte	.LASF19
 1962 03fe 01       		.byte	0x1
 1963 03ff 9A02     		.2byte	0x29a
 1964 0401 6B000000 		.4byte	0x6b
 1965 0405 8C020000 		.4byte	.LLST21
 1966 0409 08       		.uleb128 0x8
 1967 040a 08000000 		.4byte	.LVL41
 1968 040e E0080000 		.4byte	0x8e0
 1969 0412 08       		.uleb128 0x8
 1970 0413 1C000000 		.4byte	.LVL43
 1971 0417 EB080000 		.4byte	0x8eb
 1972 041b 00       		.byte	0
 1973 041c 09       		.uleb128 0x9
 1974 041d 96000000 		.4byte	.LASF42
 1975 0421 01       		.byte	0x1
 1976 0422 B502     		.2byte	0x2b5
 1977 0424 00000000 		.4byte	.LFB18
 1978 0428 10000000 		.4byte	.LFE18-.LFB18
 1979 042c 01       		.uleb128 0x1
 1980 042d 9C       		.byte	0x9c
 1981 042e 43040000 		.4byte	0x443
 1982 0432 0B       		.uleb128 0xb
 1983 0433 49010000 		.4byte	.LASF43
 1984 0437 01       		.byte	0x1
 1985 0438 B502     		.2byte	0x2b5
 1986 043a 77000000 		.4byte	0x77
 1987 043e 9F020000 		.4byte	.LLST22
 1988 0442 00       		.byte	0
 1989 0443 0C       		.uleb128 0xc
 1990 0444 E8040000 		.4byte	.LASF45
 1991 0448 01       		.byte	0x1
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 61


 1992 0449 C902     		.2byte	0x2c9
 1993 044b 77000000 		.4byte	0x77
 1994 044f 00000000 		.4byte	.LFB19
 1995 0453 10000000 		.4byte	.LFE19-.LFB19
 1996 0457 01       		.uleb128 0x1
 1997 0458 9C       		.byte	0x9c
 1998 0459 09       		.uleb128 0x9
 1999 045a 7F030000 		.4byte	.LASF46
 2000 045e 01       		.byte	0x1
 2001 045f E302     		.2byte	0x2e3
 2002 0461 00000000 		.4byte	.LFB20
 2003 0465 24000000 		.4byte	.LFE20-.LFB20
 2004 0469 01       		.uleb128 0x1
 2005 046a 9C       		.byte	0x9c
 2006 046b A2040000 		.4byte	0x4a2
 2007 046f 0B       		.uleb128 0xb
 2008 0470 7E050000 		.4byte	.LASF47
 2009 0474 01       		.byte	0x1
 2010 0475 E302     		.2byte	0x2e3
 2011 0477 77000000 		.4byte	0x77
 2012 047b C0020000 		.4byte	.LLST23
 2013 047f 0A       		.uleb128 0xa
 2014 0480 23050000 		.4byte	.LASF19
 2015 0484 01       		.byte	0x1
 2016 0485 E502     		.2byte	0x2e5
 2017 0487 6B000000 		.4byte	0x6b
 2018 048b EC020000 		.4byte	.LLST24
 2019 048f 08       		.uleb128 0x8
 2020 0490 08000000 		.4byte	.LVL47
 2021 0494 E0080000 		.4byte	0x8e0
 2022 0498 08       		.uleb128 0x8
 2023 0499 1E000000 		.4byte	.LVL49
 2024 049d EB080000 		.4byte	0x8eb
 2025 04a1 00       		.byte	0
 2026 04a2 09       		.uleb128 0x9
 2027 04a3 9D030000 		.4byte	.LASF48
 2028 04a7 01       		.byte	0x1
 2029 04a8 FE02     		.2byte	0x2fe
 2030 04aa 00000000 		.4byte	.LFB21
 2031 04ae 10000000 		.4byte	.LFE21-.LFB21
 2032 04b2 01       		.uleb128 0x1
 2033 04b3 9C       		.byte	0x9c
 2034 04b4 C9040000 		.4byte	0x4c9
 2035 04b8 0B       		.uleb128 0xb
 2036 04b9 89050000 		.4byte	.LASF49
 2037 04bd 01       		.byte	0x1
 2038 04be FE02     		.2byte	0x2fe
 2039 04c0 77000000 		.4byte	0x77
 2040 04c4 FF020000 		.4byte	.LLST25
 2041 04c8 00       		.byte	0
 2042 04c9 0C       		.uleb128 0xc
 2043 04ca D1030000 		.4byte	.LASF50
 2044 04ce 01       		.byte	0x1
 2045 04cf 1203     		.2byte	0x312
 2046 04d1 77000000 		.4byte	0x77
 2047 04d5 00000000 		.4byte	.LFB22
 2048 04d9 10000000 		.4byte	.LFE22-.LFB22
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 62


 2049 04dd 01       		.uleb128 0x1
 2050 04de 9C       		.byte	0x9c
 2051 04df 09       		.uleb128 0x9
 2052 04e0 1A040000 		.4byte	.LASF51
 2053 04e4 01       		.byte	0x1
 2054 04e5 2C03     		.2byte	0x32c
 2055 04e7 00000000 		.4byte	.LFB23
 2056 04eb 28000000 		.4byte	.LFE23-.LFB23
 2057 04ef 01       		.uleb128 0x1
 2058 04f0 9C       		.byte	0x9c
 2059 04f1 28050000 		.4byte	0x528
 2060 04f5 0B       		.uleb128 0xb
 2061 04f6 7E050000 		.4byte	.LASF47
 2062 04fa 01       		.byte	0x1
 2063 04fb 2C03     		.2byte	0x32c
 2064 04fd 77000000 		.4byte	0x77
 2065 0501 20030000 		.4byte	.LLST26
 2066 0505 0A       		.uleb128 0xa
 2067 0506 23050000 		.4byte	.LASF19
 2068 050a 01       		.byte	0x1
 2069 050b 2E03     		.2byte	0x32e
 2070 050d 6B000000 		.4byte	0x6b
 2071 0511 4C030000 		.4byte	.LLST27
 2072 0515 08       		.uleb128 0x8
 2073 0516 08000000 		.4byte	.LVL53
 2074 051a E0080000 		.4byte	0x8e0
 2075 051e 08       		.uleb128 0x8
 2076 051f 22000000 		.4byte	.LVL55
 2077 0523 EB080000 		.4byte	0x8eb
 2078 0527 00       		.byte	0
 2079 0528 09       		.uleb128 0x9
 2080 0529 54020000 		.4byte	.LASF52
 2081 052d 01       		.byte	0x1
 2082 052e 5103     		.2byte	0x351
 2083 0530 00000000 		.4byte	.LFB24
 2084 0534 10000000 		.4byte	.LFE24-.LFB24
 2085 0538 01       		.uleb128 0x1
 2086 0539 9C       		.byte	0x9c
 2087 053a 4F050000 		.4byte	0x54f
 2088 053e 0B       		.uleb128 0xb
 2089 053f F1010000 		.4byte	.LASF53
 2090 0543 01       		.byte	0x1
 2091 0544 5103     		.2byte	0x351
 2092 0546 77000000 		.4byte	0x77
 2093 054a 5F030000 		.4byte	.LLST28
 2094 054e 00       		.byte	0
 2095 054f 0C       		.uleb128 0xc
 2096 0550 78020000 		.4byte	.LASF54
 2097 0554 01       		.byte	0x1
 2098 0555 8403     		.2byte	0x384
 2099 0557 77000000 		.4byte	0x77
 2100 055b 00000000 		.4byte	.LFB25
 2101 055f 10000000 		.4byte	.LFE25-.LFB25
 2102 0563 01       		.uleb128 0x1
 2103 0564 9C       		.byte	0x9c
 2104 0565 09       		.uleb128 0x9
 2105 0566 93020000 		.4byte	.LASF55
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 63


 2106 056a 01       		.byte	0x1
 2107 056b BA03     		.2byte	0x3ba
 2108 056d 00000000 		.4byte	.LFB26
 2109 0571 10000000 		.4byte	.LFE26-.LFB26
 2110 0575 01       		.uleb128 0x1
 2111 0576 9C       		.byte	0x9c
 2112 0577 8C050000 		.4byte	0x58c
 2113 057b 0B       		.uleb128 0xb
 2114 057c F9040000 		.4byte	.LASF56
 2115 0580 01       		.byte	0x1
 2116 0581 BA03     		.2byte	0x3ba
 2117 0583 77000000 		.4byte	0x77
 2118 0587 80030000 		.4byte	.LLST29
 2119 058b 00       		.byte	0
 2120 058c 0C       		.uleb128 0xc
 2121 058d A4050000 		.4byte	.LASF57
 2122 0591 01       		.byte	0x1
 2123 0592 E803     		.2byte	0x3e8
 2124 0594 77000000 		.4byte	0x77
 2125 0598 00000000 		.4byte	.LFB27
 2126 059c 10000000 		.4byte	.LFE27-.LFB27
 2127 05a0 01       		.uleb128 0x1
 2128 05a1 9C       		.byte	0x9c
 2129 05a2 0C       		.uleb128 0xc
 2130 05a3 02020000 		.4byte	.LASF58
 2131 05a7 01       		.byte	0x1
 2132 05a8 1604     		.2byte	0x416
 2133 05aa 77000000 		.4byte	0x77
 2134 05ae 00000000 		.4byte	.LFB28
 2135 05b2 10000000 		.4byte	.LFE28-.LFB28
 2136 05b6 01       		.uleb128 0x1
 2137 05b7 9C       		.byte	0x9c
 2138 05b8 0C       		.uleb128 0xc
 2139 05b9 2E040000 		.4byte	.LASF59
 2140 05bd 01       		.byte	0x1
 2141 05be 2B04     		.2byte	0x42b
 2142 05c0 77000000 		.4byte	0x77
 2143 05c4 00000000 		.4byte	.LFB29
 2144 05c8 10000000 		.4byte	.LFE29-.LFB29
 2145 05cc 01       		.uleb128 0x1
 2146 05cd 9C       		.byte	0x9c
 2147 05ce 09       		.uleb128 0x9
 2148 05cf 34050000 		.4byte	.LASF60
 2149 05d3 01       		.byte	0x1
 2150 05d4 4604     		.2byte	0x446
 2151 05d6 00000000 		.4byte	.LFB30
 2152 05da 24000000 		.4byte	.LFE30-.LFB30
 2153 05de 01       		.uleb128 0x1
 2154 05df 9C       		.byte	0x9c
 2155 05e0 17060000 		.4byte	0x617
 2156 05e4 0B       		.uleb128 0xb
 2157 05e5 67020000 		.4byte	.LASF61
 2158 05e9 01       		.byte	0x1
 2159 05ea 4604     		.2byte	0x446
 2160 05ec 77000000 		.4byte	0x77
 2161 05f0 A1030000 		.4byte	.LLST30
 2162 05f4 0A       		.uleb128 0xa
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 64


 2163 05f5 23050000 		.4byte	.LASF19
 2164 05f9 01       		.byte	0x1
 2165 05fa 4804     		.2byte	0x448
 2166 05fc 6B000000 		.4byte	0x6b
 2167 0600 CD030000 		.4byte	.LLST31
 2168 0604 08       		.uleb128 0x8
 2169 0605 08000000 		.4byte	.LVL61
 2170 0609 E0080000 		.4byte	0x8e0
 2171 060d 08       		.uleb128 0x8
 2172 060e 1C000000 		.4byte	.LVL63
 2173 0612 EB080000 		.4byte	0x8eb
 2174 0616 00       		.byte	0
 2175 0617 09       		.uleb128 0x9
 2176 0618 C8040000 		.4byte	.LASF62
 2177 061c 01       		.byte	0x1
 2178 061d 6704     		.2byte	0x467
 2179 061f 00000000 		.4byte	.LFB31
 2180 0623 24000000 		.4byte	.LFE31-.LFB31
 2181 0627 01       		.uleb128 0x1
 2182 0628 9C       		.byte	0x9c
 2183 0629 60060000 		.4byte	0x660
 2184 062d 0B       		.uleb128 0xb
 2185 062e 67020000 		.4byte	.LASF61
 2186 0632 01       		.byte	0x1
 2187 0633 6704     		.2byte	0x467
 2188 0635 77000000 		.4byte	0x77
 2189 0639 E0030000 		.4byte	.LLST32
 2190 063d 0A       		.uleb128 0xa
 2191 063e 23050000 		.4byte	.LASF19
 2192 0642 01       		.byte	0x1
 2193 0643 6904     		.2byte	0x469
 2194 0645 6B000000 		.4byte	0x6b
 2195 0649 0C040000 		.4byte	.LLST33
 2196 064d 08       		.uleb128 0x8
 2197 064e 08000000 		.4byte	.LVL65
 2198 0652 E0080000 		.4byte	0x8e0
 2199 0656 08       		.uleb128 0x8
 2200 0657 1E000000 		.4byte	.LVL67
 2201 065b EB080000 		.4byte	0x8eb
 2202 065f 00       		.byte	0
 2203 0660 09       		.uleb128 0x9
 2204 0661 E5030000 		.4byte	.LASF63
 2205 0665 01       		.byte	0x1
 2206 0666 8804     		.2byte	0x488
 2207 0668 00000000 		.4byte	.LFB32
 2208 066c 28000000 		.4byte	.LFE32-.LFB32
 2209 0670 01       		.uleb128 0x1
 2210 0671 9C       		.byte	0x9c
 2211 0672 A9060000 		.4byte	0x6a9
 2212 0676 0B       		.uleb128 0xb
 2213 0677 67020000 		.4byte	.LASF61
 2214 067b 01       		.byte	0x1
 2215 067c 8804     		.2byte	0x488
 2216 067e 77000000 		.4byte	0x77
 2217 0682 1F040000 		.4byte	.LLST34
 2218 0686 0A       		.uleb128 0xa
 2219 0687 23050000 		.4byte	.LASF19
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 65


 2220 068b 01       		.byte	0x1
 2221 068c 8A04     		.2byte	0x48a
 2222 068e 6B000000 		.4byte	0x6b
 2223 0692 4B040000 		.4byte	.LLST35
 2224 0696 08       		.uleb128 0x8
 2225 0697 08000000 		.4byte	.LVL69
 2226 069b E0080000 		.4byte	0x8e0
 2227 069f 08       		.uleb128 0x8
 2228 06a0 1E000000 		.4byte	.LVL71
 2229 06a4 EB080000 		.4byte	0x8eb
 2230 06a8 00       		.byte	0
 2231 06a9 09       		.uleb128 0x9
 2232 06aa 08040000 		.4byte	.LASF64
 2233 06ae 01       		.byte	0x1
 2234 06af A804     		.2byte	0x4a8
 2235 06b1 00000000 		.4byte	.LFB33
 2236 06b5 24000000 		.4byte	.LFE33-.LFB33
 2237 06b9 01       		.uleb128 0x1
 2238 06ba 9C       		.byte	0x9c
 2239 06bb F2060000 		.4byte	0x6f2
 2240 06bf 0B       		.uleb128 0xb
 2241 06c0 67020000 		.4byte	.LASF61
 2242 06c4 01       		.byte	0x1
 2243 06c5 A804     		.2byte	0x4a8
 2244 06c7 77000000 		.4byte	0x77
 2245 06cb 5E040000 		.4byte	.LLST36
 2246 06cf 0A       		.uleb128 0xa
 2247 06d0 23050000 		.4byte	.LASF19
 2248 06d4 01       		.byte	0x1
 2249 06d5 AA04     		.2byte	0x4aa
 2250 06d7 6B000000 		.4byte	0x6b
 2251 06db 8A040000 		.4byte	.LLST37
 2252 06df 08       		.uleb128 0x8
 2253 06e0 08000000 		.4byte	.LVL73
 2254 06e4 E0080000 		.4byte	0x8e0
 2255 06e8 08       		.uleb128 0x8
 2256 06e9 1E000000 		.4byte	.LVL75
 2257 06ed EB080000 		.4byte	0x8eb
 2258 06f1 00       		.byte	0
 2259 06f2 09       		.uleb128 0x9
 2260 06f3 DE010000 		.4byte	.LASF65
 2261 06f7 01       		.byte	0x1
 2262 06f8 C904     		.2byte	0x4c9
 2263 06fa 00000000 		.4byte	.LFB34
 2264 06fe 24000000 		.4byte	.LFE34-.LFB34
 2265 0702 01       		.uleb128 0x1
 2266 0703 9C       		.byte	0x9c
 2267 0704 3B070000 		.4byte	0x73b
 2268 0708 0B       		.uleb128 0xb
 2269 0709 67020000 		.4byte	.LASF61
 2270 070d 01       		.byte	0x1
 2271 070e C904     		.2byte	0x4c9
 2272 0710 77000000 		.4byte	0x77
 2273 0714 9D040000 		.4byte	.LLST38
 2274 0718 0A       		.uleb128 0xa
 2275 0719 23050000 		.4byte	.LASF19
 2276 071d 01       		.byte	0x1
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 66


 2277 071e CB04     		.2byte	0x4cb
 2278 0720 6B000000 		.4byte	0x6b
 2279 0724 C9040000 		.4byte	.LLST39
 2280 0728 08       		.uleb128 0x8
 2281 0729 08000000 		.4byte	.LVL77
 2282 072d E0080000 		.4byte	0x8e0
 2283 0731 08       		.uleb128 0x8
 2284 0732 1E000000 		.4byte	.LVL79
 2285 0736 EB080000 		.4byte	0x8eb
 2286 073a 00       		.byte	0
 2287 073b 09       		.uleb128 0x9
 2288 073c 14020000 		.4byte	.LASF66
 2289 0740 01       		.byte	0x1
 2290 0741 F104     		.2byte	0x4f1
 2291 0743 00000000 		.4byte	.LFB35
 2292 0747 1C000000 		.4byte	.LFE35-.LFB35
 2293 074b 01       		.uleb128 0x1
 2294 074c 9C       		.byte	0x9c
 2295 074d 94070000 		.4byte	0x794
 2296 0751 0B       		.uleb128 0xb
 2297 0752 73020000 		.4byte	.LASF37
 2298 0756 01       		.byte	0x1
 2299 0757 F104     		.2byte	0x4f1
 2300 0759 77000000 		.4byte	0x77
 2301 075d DC040000 		.4byte	.LLST40
 2302 0761 0B       		.uleb128 0xb
 2303 0762 C2020000 		.4byte	.LASF67
 2304 0766 01       		.byte	0x1
 2305 0767 F104     		.2byte	0x4f1
 2306 0769 77000000 		.4byte	0x77
 2307 076d 08050000 		.4byte	.LLST41
 2308 0771 0A       		.uleb128 0xa
 2309 0772 23050000 		.4byte	.LASF19
 2310 0776 01       		.byte	0x1
 2311 0777 F304     		.2byte	0x4f3
 2312 0779 6B000000 		.4byte	0x6b
 2313 077d 34050000 		.4byte	.LLST42
 2314 0781 08       		.uleb128 0x8
 2315 0782 0A000000 		.4byte	.LVL81
 2316 0786 E0080000 		.4byte	0x8e0
 2317 078a 08       		.uleb128 0x8
 2318 078b 14000000 		.4byte	.LVL83
 2319 078f EB080000 		.4byte	0x8eb
 2320 0793 00       		.byte	0
 2321 0794 0C       		.uleb128 0xc
 2322 0795 43040000 		.4byte	.LASF68
 2323 0799 01       		.byte	0x1
 2324 079a 0E05     		.2byte	0x50e
 2325 079c 77000000 		.4byte	0x77
 2326 07a0 00000000 		.4byte	.LFB36
 2327 07a4 14000000 		.4byte	.LFE36-.LFB36
 2328 07a8 01       		.uleb128 0x1
 2329 07a9 9C       		.byte	0x9c
 2330 07aa 09       		.uleb128 0x9
 2331 07ab 36020000 		.4byte	.LASF69
 2332 07af 01       		.byte	0x1
 2333 07b0 2705     		.2byte	0x527
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 67


 2334 07b2 00000000 		.4byte	.LFB37
 2335 07b6 0C000000 		.4byte	.LFE37-.LFB37
 2336 07ba 01       		.uleb128 0x1
 2337 07bb 9C       		.byte	0x9c
 2338 07bc CF070000 		.4byte	0x7cf
 2339 07c0 0D       		.uleb128 0xd
 2340 07c1 7D040000 		.4byte	.LASF70
 2341 07c5 01       		.byte	0x1
 2342 07c6 2705     		.2byte	0x527
 2343 07c8 77000000 		.4byte	0x77
 2344 07cc 01       		.uleb128 0x1
 2345 07cd 50       		.byte	0x50
 2346 07ce 00       		.byte	0
 2347 07cf 06       		.uleb128 0x6
 2348 07d0 9E040000 		.4byte	.LASF71
 2349 07d4 01       		.byte	0x1
 2350 07d5 26       		.byte	0x26
 2351 07d6 00000000 		.4byte	.LFB2
 2352 07da 3C000000 		.4byte	.LFE2-.LFB2
 2353 07de 01       		.uleb128 0x1
 2354 07df 9C       		.byte	0x9c
 2355 07e0 31080000 		.4byte	0x831
 2356 07e4 0E       		.uleb128 0xe
 2357 07e5 16000000 		.4byte	.LVL86
 2358 07e9 AA070000 		.4byte	0x7aa
 2359 07ed F7070000 		.4byte	0x7f7
 2360 07f1 0F       		.uleb128 0xf
 2361 07f2 01       		.uleb128 0x1
 2362 07f3 50       		.byte	0x50
 2363 07f4 01       		.uleb128 0x1
 2364 07f5 31       		.byte	0x31
 2365 07f6 00       		.byte	0
 2366 07f7 0E       		.uleb128 0xe
 2367 07f8 1E000000 		.4byte	.LVL87
 2368 07fc 1C040000 		.4byte	0x41c
 2369 0800 0C080000 		.4byte	0x80c
 2370 0804 0F       		.uleb128 0xf
 2371 0805 01       		.uleb128 0x1
 2372 0806 50       		.byte	0x50
 2373 0807 03       		.uleb128 0x3
 2374 0808 0A       		.byte	0xa
 2375 0809 A00F     		.2byte	0xfa0
 2376 080b 00       		.byte	0
 2377 080c 0E       		.uleb128 0xe
 2378 080d 26000000 		.4byte	.LVL88
 2379 0811 28050000 		.4byte	0x528
 2380 0815 21080000 		.4byte	0x821
 2381 0819 0F       		.uleb128 0xf
 2382 081a 01       		.uleb128 0x1
 2383 081b 50       		.byte	0x50
 2384 081c 03       		.uleb128 0x3
 2385 081d 0A       		.byte	0xa
 2386 081e D007     		.2byte	0x7d0
 2387 0820 00       		.byte	0
 2388 0821 10       		.uleb128 0x10
 2389 0822 2C000000 		.4byte	.LVL89
 2390 0826 96030000 		.4byte	0x396
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 68


 2391 082a 0F       		.uleb128 0xf
 2392 082b 01       		.uleb128 0x1
 2393 082c 50       		.byte	0x50
 2394 082d 01       		.uleb128 0x1
 2395 082e 30       		.byte	0x30
 2396 082f 00       		.byte	0
 2397 0830 00       		.byte	0
 2398 0831 06       		.uleb128 0x6
 2399 0832 B6020000 		.4byte	.LASF72
 2400 0836 01       		.byte	0x1
 2401 0837 E6       		.byte	0xe6
 2402 0838 00000000 		.4byte	.LFB4
 2403 083c 20000000 		.4byte	.LFE4-.LFB4
 2404 0840 01       		.uleb128 0x1
 2405 0841 9C       		.byte	0x9c
 2406 0842 59080000 		.4byte	0x859
 2407 0846 08       		.uleb128 0x8
 2408 0847 0E000000 		.4byte	.LVL90
 2409 084b CF070000 		.4byte	0x7cf
 2410 084f 08       		.uleb128 0x8
 2411 0850 18000000 		.4byte	.LVL91
 2412 0854 B7000000 		.4byte	0xb7
 2413 0858 00       		.byte	0
 2414 0859 0C       		.uleb128 0xc
 2415 085a 5A030000 		.4byte	.LASF73
 2416 085e 01       		.byte	0x1
 2417 085f 3E05     		.2byte	0x53e
 2418 0861 77000000 		.4byte	0x77
 2419 0865 00000000 		.4byte	.LFB38
 2420 0869 0C000000 		.4byte	.LFE38-.LFB38
 2421 086d 01       		.uleb128 0x1
 2422 086e 9C       		.byte	0x9c
 2423 086f 0C       		.uleb128 0xc
 2424 0870 1D000000 		.4byte	.LASF74
 2425 0874 01       		.byte	0x1
 2426 0875 5505     		.2byte	0x555
 2427 0877 77000000 		.4byte	0x77
 2428 087b 00000000 		.4byte	.LFB39
 2429 087f 0C000000 		.4byte	.LFE39-.LFB39
 2430 0883 01       		.uleb128 0x1
 2431 0884 9C       		.byte	0x9c
 2432 0885 09       		.uleb128 0x9
 2433 0886 69050000 		.4byte	.LASF75
 2434 088a 01       		.byte	0x1
 2435 088b 6C05     		.2byte	0x56c
 2436 088d 00000000 		.4byte	.LFB40
 2437 0891 0C000000 		.4byte	.LFE40-.LFB40
 2438 0895 01       		.uleb128 0x1
 2439 0896 9C       		.byte	0x9c
 2440 0897 AA080000 		.4byte	0x8aa
 2441 089b 0D       		.uleb128 0xd
 2442 089c 7D040000 		.4byte	.LASF70
 2443 08a0 01       		.byte	0x1
 2444 08a1 6C05     		.2byte	0x56c
 2445 08a3 77000000 		.4byte	0x77
 2446 08a7 01       		.uleb128 0x1
 2447 08a8 50       		.byte	0x50
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 69


 2448 08a9 00       		.byte	0
 2449 08aa 09       		.uleb128 0x9
 2450 08ab A8000000 		.4byte	.LASF76
 2451 08af 01       		.byte	0x1
 2452 08b0 8305     		.2byte	0x583
 2453 08b2 00000000 		.4byte	.LFB41
 2454 08b6 0C000000 		.4byte	.LFE41-.LFB41
 2455 08ba 01       		.uleb128 0x1
 2456 08bb 9C       		.byte	0x9c
 2457 08bc CF080000 		.4byte	0x8cf
 2458 08c0 0D       		.uleb128 0xd
 2459 08c1 7D040000 		.4byte	.LASF70
 2460 08c5 01       		.byte	0x1
 2461 08c6 8305     		.2byte	0x583
 2462 08c8 77000000 		.4byte	0x77
 2463 08cc 01       		.uleb128 0x1
 2464 08cd 50       		.byte	0x50
 2465 08ce 00       		.byte	0
 2466 08cf 11       		.uleb128 0x11
 2467 08d0 5E010000 		.4byte	.LASF82
 2468 08d4 01       		.byte	0x1
 2469 08d5 15       		.byte	0x15
 2470 08d6 6B000000 		.4byte	0x6b
 2471 08da 05       		.uleb128 0x5
 2472 08db 03       		.byte	0x3
 2473 08dc 00000000 		.4byte	Timer_initVar
 2474 08e0 12       		.uleb128 0x12
 2475 08e1 F2020000 		.4byte	.LASF77
 2476 08e5 F2020000 		.4byte	.LASF77
 2477 08e9 03       		.byte	0x3
 2478 08ea E5       		.byte	0xe5
 2479 08eb 12       		.uleb128 0x12
 2480 08ec 36000000 		.4byte	.LASF78
 2481 08f0 36000000 		.4byte	.LASF78
 2482 08f4 03       		.byte	0x3
 2483 08f5 E6       		.byte	0xe6
 2484 08f6 00       		.byte	0
 2485              		.section	.debug_abbrev,"",%progbits
 2486              	.Ldebug_abbrev0:
 2487 0000 01       		.uleb128 0x1
 2488 0001 11       		.uleb128 0x11
 2489 0002 01       		.byte	0x1
 2490 0003 25       		.uleb128 0x25
 2491 0004 0E       		.uleb128 0xe
 2492 0005 13       		.uleb128 0x13
 2493 0006 0B       		.uleb128 0xb
 2494 0007 03       		.uleb128 0x3
 2495 0008 0E       		.uleb128 0xe
 2496 0009 1B       		.uleb128 0x1b
 2497 000a 0E       		.uleb128 0xe
 2498 000b 55       		.uleb128 0x55
 2499 000c 17       		.uleb128 0x17
 2500 000d 11       		.uleb128 0x11
 2501 000e 01       		.uleb128 0x1
 2502 000f 10       		.uleb128 0x10
 2503 0010 17       		.uleb128 0x17
 2504 0011 00       		.byte	0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 70


 2505 0012 00       		.byte	0
 2506 0013 02       		.uleb128 0x2
 2507 0014 24       		.uleb128 0x24
 2508 0015 00       		.byte	0
 2509 0016 0B       		.uleb128 0xb
 2510 0017 0B       		.uleb128 0xb
 2511 0018 3E       		.uleb128 0x3e
 2512 0019 0B       		.uleb128 0xb
 2513 001a 03       		.uleb128 0x3
 2514 001b 0E       		.uleb128 0xe
 2515 001c 00       		.byte	0
 2516 001d 00       		.byte	0
 2517 001e 03       		.uleb128 0x3
 2518 001f 24       		.uleb128 0x24
 2519 0020 00       		.byte	0
 2520 0021 0B       		.uleb128 0xb
 2521 0022 0B       		.uleb128 0xb
 2522 0023 3E       		.uleb128 0x3e
 2523 0024 0B       		.uleb128 0xb
 2524 0025 03       		.uleb128 0x3
 2525 0026 08       		.uleb128 0x8
 2526 0027 00       		.byte	0
 2527 0028 00       		.byte	0
 2528 0029 04       		.uleb128 0x4
 2529 002a 16       		.uleb128 0x16
 2530 002b 00       		.byte	0
 2531 002c 03       		.uleb128 0x3
 2532 002d 0E       		.uleb128 0xe
 2533 002e 3A       		.uleb128 0x3a
 2534 002f 0B       		.uleb128 0xb
 2535 0030 3B       		.uleb128 0x3b
 2536 0031 05       		.uleb128 0x5
 2537 0032 49       		.uleb128 0x49
 2538 0033 13       		.uleb128 0x13
 2539 0034 00       		.byte	0
 2540 0035 00       		.byte	0
 2541 0036 05       		.uleb128 0x5
 2542 0037 35       		.uleb128 0x35
 2543 0038 00       		.byte	0
 2544 0039 49       		.uleb128 0x49
 2545 003a 13       		.uleb128 0x13
 2546 003b 00       		.byte	0
 2547 003c 00       		.byte	0
 2548 003d 06       		.uleb128 0x6
 2549 003e 2E       		.uleb128 0x2e
 2550 003f 01       		.byte	0x1
 2551 0040 3F       		.uleb128 0x3f
 2552 0041 19       		.uleb128 0x19
 2553 0042 03       		.uleb128 0x3
 2554 0043 0E       		.uleb128 0xe
 2555 0044 3A       		.uleb128 0x3a
 2556 0045 0B       		.uleb128 0xb
 2557 0046 3B       		.uleb128 0x3b
 2558 0047 0B       		.uleb128 0xb
 2559 0048 27       		.uleb128 0x27
 2560 0049 19       		.uleb128 0x19
 2561 004a 11       		.uleb128 0x11
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 71


 2562 004b 01       		.uleb128 0x1
 2563 004c 12       		.uleb128 0x12
 2564 004d 06       		.uleb128 0x6
 2565 004e 40       		.uleb128 0x40
 2566 004f 18       		.uleb128 0x18
 2567 0050 9742     		.uleb128 0x2117
 2568 0052 19       		.uleb128 0x19
 2569 0053 01       		.uleb128 0x1
 2570 0054 13       		.uleb128 0x13
 2571 0055 00       		.byte	0
 2572 0056 00       		.byte	0
 2573 0057 07       		.uleb128 0x7
 2574 0058 34       		.uleb128 0x34
 2575 0059 00       		.byte	0
 2576 005a 03       		.uleb128 0x3
 2577 005b 0E       		.uleb128 0xe
 2578 005c 3A       		.uleb128 0x3a
 2579 005d 0B       		.uleb128 0xb
 2580 005e 3B       		.uleb128 0x3b
 2581 005f 0B       		.uleb128 0xb
 2582 0060 49       		.uleb128 0x49
 2583 0061 13       		.uleb128 0x13
 2584 0062 02       		.uleb128 0x2
 2585 0063 17       		.uleb128 0x17
 2586 0064 00       		.byte	0
 2587 0065 00       		.byte	0
 2588 0066 08       		.uleb128 0x8
 2589 0067 898201   		.uleb128 0x4109
 2590 006a 00       		.byte	0
 2591 006b 11       		.uleb128 0x11
 2592 006c 01       		.uleb128 0x1
 2593 006d 31       		.uleb128 0x31
 2594 006e 13       		.uleb128 0x13
 2595 006f 00       		.byte	0
 2596 0070 00       		.byte	0
 2597 0071 09       		.uleb128 0x9
 2598 0072 2E       		.uleb128 0x2e
 2599 0073 01       		.byte	0x1
 2600 0074 3F       		.uleb128 0x3f
 2601 0075 19       		.uleb128 0x19
 2602 0076 03       		.uleb128 0x3
 2603 0077 0E       		.uleb128 0xe
 2604 0078 3A       		.uleb128 0x3a
 2605 0079 0B       		.uleb128 0xb
 2606 007a 3B       		.uleb128 0x3b
 2607 007b 05       		.uleb128 0x5
 2608 007c 27       		.uleb128 0x27
 2609 007d 19       		.uleb128 0x19
 2610 007e 11       		.uleb128 0x11
 2611 007f 01       		.uleb128 0x1
 2612 0080 12       		.uleb128 0x12
 2613 0081 06       		.uleb128 0x6
 2614 0082 40       		.uleb128 0x40
 2615 0083 18       		.uleb128 0x18
 2616 0084 9742     		.uleb128 0x2117
 2617 0086 19       		.uleb128 0x19
 2618 0087 01       		.uleb128 0x1
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 72


 2619 0088 13       		.uleb128 0x13
 2620 0089 00       		.byte	0
 2621 008a 00       		.byte	0
 2622 008b 0A       		.uleb128 0xa
 2623 008c 34       		.uleb128 0x34
 2624 008d 00       		.byte	0
 2625 008e 03       		.uleb128 0x3
 2626 008f 0E       		.uleb128 0xe
 2627 0090 3A       		.uleb128 0x3a
 2628 0091 0B       		.uleb128 0xb
 2629 0092 3B       		.uleb128 0x3b
 2630 0093 05       		.uleb128 0x5
 2631 0094 49       		.uleb128 0x49
 2632 0095 13       		.uleb128 0x13
 2633 0096 02       		.uleb128 0x2
 2634 0097 17       		.uleb128 0x17
 2635 0098 00       		.byte	0
 2636 0099 00       		.byte	0
 2637 009a 0B       		.uleb128 0xb
 2638 009b 05       		.uleb128 0x5
 2639 009c 00       		.byte	0
 2640 009d 03       		.uleb128 0x3
 2641 009e 0E       		.uleb128 0xe
 2642 009f 3A       		.uleb128 0x3a
 2643 00a0 0B       		.uleb128 0xb
 2644 00a1 3B       		.uleb128 0x3b
 2645 00a2 05       		.uleb128 0x5
 2646 00a3 49       		.uleb128 0x49
 2647 00a4 13       		.uleb128 0x13
 2648 00a5 02       		.uleb128 0x2
 2649 00a6 17       		.uleb128 0x17
 2650 00a7 00       		.byte	0
 2651 00a8 00       		.byte	0
 2652 00a9 0C       		.uleb128 0xc
 2653 00aa 2E       		.uleb128 0x2e
 2654 00ab 00       		.byte	0
 2655 00ac 3F       		.uleb128 0x3f
 2656 00ad 19       		.uleb128 0x19
 2657 00ae 03       		.uleb128 0x3
 2658 00af 0E       		.uleb128 0xe
 2659 00b0 3A       		.uleb128 0x3a
 2660 00b1 0B       		.uleb128 0xb
 2661 00b2 3B       		.uleb128 0x3b
 2662 00b3 05       		.uleb128 0x5
 2663 00b4 27       		.uleb128 0x27
 2664 00b5 19       		.uleb128 0x19
 2665 00b6 49       		.uleb128 0x49
 2666 00b7 13       		.uleb128 0x13
 2667 00b8 11       		.uleb128 0x11
 2668 00b9 01       		.uleb128 0x1
 2669 00ba 12       		.uleb128 0x12
 2670 00bb 06       		.uleb128 0x6
 2671 00bc 40       		.uleb128 0x40
 2672 00bd 18       		.uleb128 0x18
 2673 00be 9742     		.uleb128 0x2117
 2674 00c0 19       		.uleb128 0x19
 2675 00c1 00       		.byte	0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 73


 2676 00c2 00       		.byte	0
 2677 00c3 0D       		.uleb128 0xd
 2678 00c4 05       		.uleb128 0x5
 2679 00c5 00       		.byte	0
 2680 00c6 03       		.uleb128 0x3
 2681 00c7 0E       		.uleb128 0xe
 2682 00c8 3A       		.uleb128 0x3a
 2683 00c9 0B       		.uleb128 0xb
 2684 00ca 3B       		.uleb128 0x3b
 2685 00cb 05       		.uleb128 0x5
 2686 00cc 49       		.uleb128 0x49
 2687 00cd 13       		.uleb128 0x13
 2688 00ce 02       		.uleb128 0x2
 2689 00cf 18       		.uleb128 0x18
 2690 00d0 00       		.byte	0
 2691 00d1 00       		.byte	0
 2692 00d2 0E       		.uleb128 0xe
 2693 00d3 898201   		.uleb128 0x4109
 2694 00d6 01       		.byte	0x1
 2695 00d7 11       		.uleb128 0x11
 2696 00d8 01       		.uleb128 0x1
 2697 00d9 31       		.uleb128 0x31
 2698 00da 13       		.uleb128 0x13
 2699 00db 01       		.uleb128 0x1
 2700 00dc 13       		.uleb128 0x13
 2701 00dd 00       		.byte	0
 2702 00de 00       		.byte	0
 2703 00df 0F       		.uleb128 0xf
 2704 00e0 8A8201   		.uleb128 0x410a
 2705 00e3 00       		.byte	0
 2706 00e4 02       		.uleb128 0x2
 2707 00e5 18       		.uleb128 0x18
 2708 00e6 9142     		.uleb128 0x2111
 2709 00e8 18       		.uleb128 0x18
 2710 00e9 00       		.byte	0
 2711 00ea 00       		.byte	0
 2712 00eb 10       		.uleb128 0x10
 2713 00ec 898201   		.uleb128 0x4109
 2714 00ef 01       		.byte	0x1
 2715 00f0 11       		.uleb128 0x11
 2716 00f1 01       		.uleb128 0x1
 2717 00f2 31       		.uleb128 0x31
 2718 00f3 13       		.uleb128 0x13
 2719 00f4 00       		.byte	0
 2720 00f5 00       		.byte	0
 2721 00f6 11       		.uleb128 0x11
 2722 00f7 34       		.uleb128 0x34
 2723 00f8 00       		.byte	0
 2724 00f9 03       		.uleb128 0x3
 2725 00fa 0E       		.uleb128 0xe
 2726 00fb 3A       		.uleb128 0x3a
 2727 00fc 0B       		.uleb128 0xb
 2728 00fd 3B       		.uleb128 0x3b
 2729 00fe 0B       		.uleb128 0xb
 2730 00ff 49       		.uleb128 0x49
 2731 0100 13       		.uleb128 0x13
 2732 0101 3F       		.uleb128 0x3f
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 74


 2733 0102 19       		.uleb128 0x19
 2734 0103 02       		.uleb128 0x2
 2735 0104 18       		.uleb128 0x18
 2736 0105 00       		.byte	0
 2737 0106 00       		.byte	0
 2738 0107 12       		.uleb128 0x12
 2739 0108 2E       		.uleb128 0x2e
 2740 0109 00       		.byte	0
 2741 010a 3F       		.uleb128 0x3f
 2742 010b 19       		.uleb128 0x19
 2743 010c 3C       		.uleb128 0x3c
 2744 010d 19       		.uleb128 0x19
 2745 010e 6E       		.uleb128 0x6e
 2746 010f 0E       		.uleb128 0xe
 2747 0110 03       		.uleb128 0x3
 2748 0111 0E       		.uleb128 0xe
 2749 0112 3A       		.uleb128 0x3a
 2750 0113 0B       		.uleb128 0xb
 2751 0114 3B       		.uleb128 0x3b
 2752 0115 0B       		.uleb128 0xb
 2753 0116 00       		.byte	0
 2754 0117 00       		.byte	0
 2755 0118 00       		.byte	0
 2756              		.section	.debug_loc,"",%progbits
 2757              	.Ldebug_loc0:
 2758              	.LLST0:
 2759 0000 06000000 		.4byte	.LVL0
 2760 0004 13000000 		.4byte	.LVL1-1
 2761 0008 0100     		.2byte	0x1
 2762 000a 50       		.byte	0x50
 2763 000b 00000000 		.4byte	0
 2764 000f 00000000 		.4byte	0
 2765              	.LLST1:
 2766 0013 06000000 		.4byte	.LVL2
 2767 0017 13000000 		.4byte	.LVL3-1
 2768 001b 0100     		.2byte	0x1
 2769 001d 50       		.byte	0x50
 2770 001e 00000000 		.4byte	0
 2771 0022 00000000 		.4byte	0
 2772              	.LLST2:
 2773 0026 00000000 		.4byte	.LVL4
 2774 002a 07000000 		.4byte	.LVL5-1
 2775 002e 0100     		.2byte	0x1
 2776 0030 50       		.byte	0x50
 2777 0031 07000000 		.4byte	.LVL5-1
 2778 0035 16000000 		.4byte	.LVL6
 2779 0039 0100     		.2byte	0x1
 2780 003b 54       		.byte	0x54
 2781 003c 16000000 		.4byte	.LVL6
 2782 0040 28000000 		.4byte	.LFE6
 2783 0044 0400     		.2byte	0x4
 2784 0046 F3       		.byte	0xf3
 2785 0047 01       		.uleb128 0x1
 2786 0048 50       		.byte	0x50
 2787 0049 9F       		.byte	0x9f
 2788 004a 00000000 		.4byte	0
 2789 004e 00000000 		.4byte	0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 75


 2790              	.LLST3:
 2791 0052 08000000 		.4byte	.LVL5
 2792 0056 1B000000 		.4byte	.LVL7-1
 2793 005a 0100     		.2byte	0x1
 2794 005c 50       		.byte	0x50
 2795 005d 00000000 		.4byte	0
 2796 0061 00000000 		.4byte	0
 2797              	.LLST4:
 2798 0065 00000000 		.4byte	.LVL8
 2799 0069 07000000 		.4byte	.LVL9-1
 2800 006d 0100     		.2byte	0x1
 2801 006f 50       		.byte	0x50
 2802 0070 07000000 		.4byte	.LVL9-1
 2803 0074 16000000 		.4byte	.LVL10
 2804 0078 0100     		.2byte	0x1
 2805 007a 54       		.byte	0x54
 2806 007b 16000000 		.4byte	.LVL10
 2807 007f 28000000 		.4byte	.LFE7
 2808 0083 0400     		.2byte	0x4
 2809 0085 F3       		.byte	0xf3
 2810 0086 01       		.uleb128 0x1
 2811 0087 50       		.byte	0x50
 2812 0088 9F       		.byte	0x9f
 2813 0089 00000000 		.4byte	0
 2814 008d 00000000 		.4byte	0
 2815              	.LLST5:
 2816 0091 08000000 		.4byte	.LVL9
 2817 0095 1B000000 		.4byte	.LVL11-1
 2818 0099 0100     		.2byte	0x1
 2819 009b 50       		.byte	0x50
 2820 009c 00000000 		.4byte	0
 2821 00a0 00000000 		.4byte	0
 2822              	.LLST6:
 2823 00a4 00000000 		.4byte	.LVL12
 2824 00a8 07000000 		.4byte	.LVL13-1
 2825 00ac 0100     		.2byte	0x1
 2826 00ae 50       		.byte	0x50
 2827 00af 07000000 		.4byte	.LVL13-1
 2828 00b3 16000000 		.4byte	.LVL14
 2829 00b7 0100     		.2byte	0x1
 2830 00b9 54       		.byte	0x54
 2831 00ba 16000000 		.4byte	.LVL14
 2832 00be 28000000 		.4byte	.LFE8
 2833 00c2 0400     		.2byte	0x4
 2834 00c4 F3       		.byte	0xf3
 2835 00c5 01       		.uleb128 0x1
 2836 00c6 50       		.byte	0x50
 2837 00c7 9F       		.byte	0x9f
 2838 00c8 00000000 		.4byte	0
 2839 00cc 00000000 		.4byte	0
 2840              	.LLST7:
 2841 00d0 08000000 		.4byte	.LVL13
 2842 00d4 1B000000 		.4byte	.LVL15-1
 2843 00d8 0100     		.2byte	0x1
 2844 00da 50       		.byte	0x50
 2845 00db 00000000 		.4byte	0
 2846 00df 00000000 		.4byte	0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 76


 2847              	.LLST8:
 2848 00e3 00000000 		.4byte	.LVL16
 2849 00e7 07000000 		.4byte	.LVL17-1
 2850 00eb 0100     		.2byte	0x1
 2851 00ed 50       		.byte	0x50
 2852 00ee 07000000 		.4byte	.LVL17-1
 2853 00f2 24000000 		.4byte	.LVL19
 2854 00f6 0100     		.2byte	0x1
 2855 00f8 54       		.byte	0x54
 2856 00f9 24000000 		.4byte	.LVL19
 2857 00fd 30000000 		.4byte	.LFE9
 2858 0101 0400     		.2byte	0x4
 2859 0103 F3       		.byte	0xf3
 2860 0104 01       		.uleb128 0x1
 2861 0105 50       		.byte	0x50
 2862 0106 9F       		.byte	0x9f
 2863 0107 00000000 		.4byte	0
 2864 010b 00000000 		.4byte	0
 2865              	.LLST9:
 2866 010f 08000000 		.4byte	.LVL17
 2867 0113 23000000 		.4byte	.LVL18-1
 2868 0117 0100     		.2byte	0x1
 2869 0119 50       		.byte	0x50
 2870 011a 00000000 		.4byte	0
 2871 011e 00000000 		.4byte	0
 2872              	.LLST10:
 2873 0122 00000000 		.4byte	.LVL20
 2874 0126 04000000 		.4byte	.LVL21
 2875 012a 0100     		.2byte	0x1
 2876 012c 50       		.byte	0x50
 2877 012d 04000000 		.4byte	.LVL21
 2878 0131 10000000 		.4byte	.LFE10
 2879 0135 0400     		.2byte	0x4
 2880 0137 F3       		.byte	0xf3
 2881 0138 01       		.uleb128 0x1
 2882 0139 50       		.byte	0x50
 2883 013a 9F       		.byte	0x9f
 2884 013b 00000000 		.4byte	0
 2885 013f 00000000 		.4byte	0
 2886              	.LLST11:
 2887 0143 00000000 		.4byte	.LVL22
 2888 0147 07000000 		.4byte	.LVL23-1
 2889 014b 0100     		.2byte	0x1
 2890 014d 50       		.byte	0x50
 2891 014e 07000000 		.4byte	.LVL23-1
 2892 0152 1A000000 		.4byte	.LVL24
 2893 0156 0100     		.2byte	0x1
 2894 0158 54       		.byte	0x54
 2895 0159 1A000000 		.4byte	.LVL24
 2896 015d 28000000 		.4byte	.LFE11
 2897 0161 0400     		.2byte	0x4
 2898 0163 F3       		.byte	0xf3
 2899 0164 01       		.uleb128 0x1
 2900 0165 50       		.byte	0x50
 2901 0166 9F       		.byte	0x9f
 2902 0167 00000000 		.4byte	0
 2903 016b 00000000 		.4byte	0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 77


 2904              	.LLST12:
 2905 016f 08000000 		.4byte	.LVL23
 2906 0173 21000000 		.4byte	.LVL25-1
 2907 0177 0100     		.2byte	0x1
 2908 0179 50       		.byte	0x50
 2909 017a 00000000 		.4byte	0
 2910 017e 00000000 		.4byte	0
 2911              	.LLST13:
 2912 0182 00000000 		.4byte	.LVL26
 2913 0186 07000000 		.4byte	.LVL27-1
 2914 018a 0100     		.2byte	0x1
 2915 018c 50       		.byte	0x50
 2916 018d 07000000 		.4byte	.LVL27-1
 2917 0191 1A000000 		.4byte	.LVL28
 2918 0195 0100     		.2byte	0x1
 2919 0197 54       		.byte	0x54
 2920 0198 1A000000 		.4byte	.LVL28
 2921 019c 28000000 		.4byte	.LFE12
 2922 01a0 0400     		.2byte	0x4
 2923 01a2 F3       		.byte	0xf3
 2924 01a3 01       		.uleb128 0x1
 2925 01a4 50       		.byte	0x50
 2926 01a5 9F       		.byte	0x9f
 2927 01a6 00000000 		.4byte	0
 2928 01aa 00000000 		.4byte	0
 2929              	.LLST14:
 2930 01ae 08000000 		.4byte	.LVL27
 2931 01b2 21000000 		.4byte	.LVL29-1
 2932 01b6 0100     		.2byte	0x1
 2933 01b8 50       		.byte	0x50
 2934 01b9 00000000 		.4byte	0
 2935 01bd 00000000 		.4byte	0
 2936              	.LLST15:
 2937 01c1 00000000 		.4byte	.LVL30
 2938 01c5 07000000 		.4byte	.LVL31-1
 2939 01c9 0100     		.2byte	0x1
 2940 01cb 50       		.byte	0x50
 2941 01cc 07000000 		.4byte	.LVL31-1
 2942 01d0 16000000 		.4byte	.LVL32
 2943 01d4 0100     		.2byte	0x1
 2944 01d6 54       		.byte	0x54
 2945 01d7 16000000 		.4byte	.LVL32
 2946 01db 2C000000 		.4byte	.LFE13
 2947 01df 0400     		.2byte	0x4
 2948 01e1 F3       		.byte	0xf3
 2949 01e2 01       		.uleb128 0x1
 2950 01e3 50       		.byte	0x50
 2951 01e4 9F       		.byte	0x9f
 2952 01e5 00000000 		.4byte	0
 2953 01e9 00000000 		.4byte	0
 2954              	.LLST16:
 2955 01ed 08000000 		.4byte	.LVL31
 2956 01f1 1F000000 		.4byte	.LVL33-1
 2957 01f5 0100     		.2byte	0x1
 2958 01f7 50       		.byte	0x50
 2959 01f8 00000000 		.4byte	0
 2960 01fc 00000000 		.4byte	0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 78


 2961              	.LLST17:
 2962 0200 00000000 		.4byte	.LVL34
 2963 0204 07000000 		.4byte	.LVL35-1
 2964 0208 0100     		.2byte	0x1
 2965 020a 50       		.byte	0x50
 2966 020b 07000000 		.4byte	.LVL35-1
 2967 020f 16000000 		.4byte	.LVL36
 2968 0213 0100     		.2byte	0x1
 2969 0215 54       		.byte	0x54
 2970 0216 16000000 		.4byte	.LVL36
 2971 021a 28000000 		.4byte	.LFE14
 2972 021e 0400     		.2byte	0x4
 2973 0220 F3       		.byte	0xf3
 2974 0221 01       		.uleb128 0x1
 2975 0222 50       		.byte	0x50
 2976 0223 9F       		.byte	0x9f
 2977 0224 00000000 		.4byte	0
 2978 0228 00000000 		.4byte	0
 2979              	.LLST18:
 2980 022c 08000000 		.4byte	.LVL35
 2981 0230 1B000000 		.4byte	.LVL37-1
 2982 0234 0100     		.2byte	0x1
 2983 0236 50       		.byte	0x50
 2984 0237 00000000 		.4byte	0
 2985 023b 00000000 		.4byte	0
 2986              	.LLST19:
 2987 023f 00000000 		.4byte	.LVL38
 2988 0243 02000000 		.4byte	.LVL39
 2989 0247 0100     		.2byte	0x1
 2990 0249 50       		.byte	0x50
 2991 024a 02000000 		.4byte	.LVL39
 2992 024e 10000000 		.4byte	.LFE15
 2993 0252 0400     		.2byte	0x4
 2994 0254 F3       		.byte	0xf3
 2995 0255 01       		.uleb128 0x1
 2996 0256 50       		.byte	0x50
 2997 0257 9F       		.byte	0x9f
 2998 0258 00000000 		.4byte	0
 2999 025c 00000000 		.4byte	0
 3000              	.LLST20:
 3001 0260 00000000 		.4byte	.LVL40
 3002 0264 07000000 		.4byte	.LVL41-1
 3003 0268 0100     		.2byte	0x1
 3004 026a 50       		.byte	0x50
 3005 026b 07000000 		.4byte	.LVL41-1
 3006 026f 16000000 		.4byte	.LVL42
 3007 0273 0100     		.2byte	0x1
 3008 0275 54       		.byte	0x54
 3009 0276 16000000 		.4byte	.LVL42
 3010 027a 28000000 		.4byte	.LFE17
 3011 027e 0400     		.2byte	0x4
 3012 0280 F3       		.byte	0xf3
 3013 0281 01       		.uleb128 0x1
 3014 0282 50       		.byte	0x50
 3015 0283 9F       		.byte	0x9f
 3016 0284 00000000 		.4byte	0
 3017 0288 00000000 		.4byte	0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 79


 3018              	.LLST21:
 3019 028c 08000000 		.4byte	.LVL41
 3020 0290 1B000000 		.4byte	.LVL43-1
 3021 0294 0100     		.2byte	0x1
 3022 0296 50       		.byte	0x50
 3023 0297 00000000 		.4byte	0
 3024 029b 00000000 		.4byte	0
 3025              	.LLST22:
 3026 029f 00000000 		.4byte	.LVL44
 3027 02a3 02000000 		.4byte	.LVL45
 3028 02a7 0100     		.2byte	0x1
 3029 02a9 50       		.byte	0x50
 3030 02aa 02000000 		.4byte	.LVL45
 3031 02ae 10000000 		.4byte	.LFE18
 3032 02b2 0400     		.2byte	0x4
 3033 02b4 F3       		.byte	0xf3
 3034 02b5 01       		.uleb128 0x1
 3035 02b6 50       		.byte	0x50
 3036 02b7 9F       		.byte	0x9f
 3037 02b8 00000000 		.4byte	0
 3038 02bc 00000000 		.4byte	0
 3039              	.LLST23:
 3040 02c0 00000000 		.4byte	.LVL46
 3041 02c4 07000000 		.4byte	.LVL47-1
 3042 02c8 0100     		.2byte	0x1
 3043 02ca 50       		.byte	0x50
 3044 02cb 07000000 		.4byte	.LVL47-1
 3045 02cf 16000000 		.4byte	.LVL48
 3046 02d3 0100     		.2byte	0x1
 3047 02d5 54       		.byte	0x54
 3048 02d6 16000000 		.4byte	.LVL48
 3049 02da 24000000 		.4byte	.LFE20
 3050 02de 0400     		.2byte	0x4
 3051 02e0 F3       		.byte	0xf3
 3052 02e1 01       		.uleb128 0x1
 3053 02e2 50       		.byte	0x50
 3054 02e3 9F       		.byte	0x9f
 3055 02e4 00000000 		.4byte	0
 3056 02e8 00000000 		.4byte	0
 3057              	.LLST24:
 3058 02ec 08000000 		.4byte	.LVL47
 3059 02f0 1D000000 		.4byte	.LVL49-1
 3060 02f4 0100     		.2byte	0x1
 3061 02f6 50       		.byte	0x50
 3062 02f7 00000000 		.4byte	0
 3063 02fb 00000000 		.4byte	0
 3064              	.LLST25:
 3065 02ff 00000000 		.4byte	.LVL50
 3066 0303 02000000 		.4byte	.LVL51
 3067 0307 0100     		.2byte	0x1
 3068 0309 50       		.byte	0x50
 3069 030a 02000000 		.4byte	.LVL51
 3070 030e 10000000 		.4byte	.LFE21
 3071 0312 0400     		.2byte	0x4
 3072 0314 F3       		.byte	0xf3
 3073 0315 01       		.uleb128 0x1
 3074 0316 50       		.byte	0x50
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 80


 3075 0317 9F       		.byte	0x9f
 3076 0318 00000000 		.4byte	0
 3077 031c 00000000 		.4byte	0
 3078              	.LLST26:
 3079 0320 00000000 		.4byte	.LVL52
 3080 0324 07000000 		.4byte	.LVL53-1
 3081 0328 0100     		.2byte	0x1
 3082 032a 50       		.byte	0x50
 3083 032b 07000000 		.4byte	.LVL53-1
 3084 032f 1A000000 		.4byte	.LVL54
 3085 0333 0100     		.2byte	0x1
 3086 0335 54       		.byte	0x54
 3087 0336 1A000000 		.4byte	.LVL54
 3088 033a 28000000 		.4byte	.LFE23
 3089 033e 0400     		.2byte	0x4
 3090 0340 F3       		.byte	0xf3
 3091 0341 01       		.uleb128 0x1
 3092 0342 50       		.byte	0x50
 3093 0343 9F       		.byte	0x9f
 3094 0344 00000000 		.4byte	0
 3095 0348 00000000 		.4byte	0
 3096              	.LLST27:
 3097 034c 08000000 		.4byte	.LVL53
 3098 0350 21000000 		.4byte	.LVL55-1
 3099 0354 0100     		.2byte	0x1
 3100 0356 50       		.byte	0x50
 3101 0357 00000000 		.4byte	0
 3102 035b 00000000 		.4byte	0
 3103              	.LLST28:
 3104 035f 00000000 		.4byte	.LVL56
 3105 0363 02000000 		.4byte	.LVL57
 3106 0367 0100     		.2byte	0x1
 3107 0369 50       		.byte	0x50
 3108 036a 02000000 		.4byte	.LVL57
 3109 036e 10000000 		.4byte	.LFE24
 3110 0372 0400     		.2byte	0x4
 3111 0374 F3       		.byte	0xf3
 3112 0375 01       		.uleb128 0x1
 3113 0376 50       		.byte	0x50
 3114 0377 9F       		.byte	0x9f
 3115 0378 00000000 		.4byte	0
 3116 037c 00000000 		.4byte	0
 3117              	.LLST29:
 3118 0380 00000000 		.4byte	.LVL58
 3119 0384 02000000 		.4byte	.LVL59
 3120 0388 0100     		.2byte	0x1
 3121 038a 50       		.byte	0x50
 3122 038b 02000000 		.4byte	.LVL59
 3123 038f 10000000 		.4byte	.LFE26
 3124 0393 0400     		.2byte	0x4
 3125 0395 F3       		.byte	0xf3
 3126 0396 01       		.uleb128 0x1
 3127 0397 50       		.byte	0x50
 3128 0398 9F       		.byte	0x9f
 3129 0399 00000000 		.4byte	0
 3130 039d 00000000 		.4byte	0
 3131              	.LLST30:
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 81


 3132 03a1 00000000 		.4byte	.LVL60
 3133 03a5 07000000 		.4byte	.LVL61-1
 3134 03a9 0100     		.2byte	0x1
 3135 03ab 50       		.byte	0x50
 3136 03ac 07000000 		.4byte	.LVL61-1
 3137 03b0 16000000 		.4byte	.LVL62
 3138 03b4 0100     		.2byte	0x1
 3139 03b6 54       		.byte	0x54
 3140 03b7 16000000 		.4byte	.LVL62
 3141 03bb 24000000 		.4byte	.LFE30
 3142 03bf 0400     		.2byte	0x4
 3143 03c1 F3       		.byte	0xf3
 3144 03c2 01       		.uleb128 0x1
 3145 03c3 50       		.byte	0x50
 3146 03c4 9F       		.byte	0x9f
 3147 03c5 00000000 		.4byte	0
 3148 03c9 00000000 		.4byte	0
 3149              	.LLST31:
 3150 03cd 08000000 		.4byte	.LVL61
 3151 03d1 1B000000 		.4byte	.LVL63-1
 3152 03d5 0100     		.2byte	0x1
 3153 03d7 50       		.byte	0x50
 3154 03d8 00000000 		.4byte	0
 3155 03dc 00000000 		.4byte	0
 3156              	.LLST32:
 3157 03e0 00000000 		.4byte	.LVL64
 3158 03e4 07000000 		.4byte	.LVL65-1
 3159 03e8 0100     		.2byte	0x1
 3160 03ea 50       		.byte	0x50
 3161 03eb 07000000 		.4byte	.LVL65-1
 3162 03ef 16000000 		.4byte	.LVL66
 3163 03f3 0100     		.2byte	0x1
 3164 03f5 54       		.byte	0x54
 3165 03f6 16000000 		.4byte	.LVL66
 3166 03fa 24000000 		.4byte	.LFE31
 3167 03fe 0400     		.2byte	0x4
 3168 0400 F3       		.byte	0xf3
 3169 0401 01       		.uleb128 0x1
 3170 0402 50       		.byte	0x50
 3171 0403 9F       		.byte	0x9f
 3172 0404 00000000 		.4byte	0
 3173 0408 00000000 		.4byte	0
 3174              	.LLST33:
 3175 040c 08000000 		.4byte	.LVL65
 3176 0410 1D000000 		.4byte	.LVL67-1
 3177 0414 0100     		.2byte	0x1
 3178 0416 50       		.byte	0x50
 3179 0417 00000000 		.4byte	0
 3180 041b 00000000 		.4byte	0
 3181              	.LLST34:
 3182 041f 00000000 		.4byte	.LVL68
 3183 0423 07000000 		.4byte	.LVL69-1
 3184 0427 0100     		.2byte	0x1
 3185 0429 50       		.byte	0x50
 3186 042a 07000000 		.4byte	.LVL69-1
 3187 042e 16000000 		.4byte	.LVL70
 3188 0432 0100     		.2byte	0x1
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 82


 3189 0434 54       		.byte	0x54
 3190 0435 16000000 		.4byte	.LVL70
 3191 0439 28000000 		.4byte	.LFE32
 3192 043d 0400     		.2byte	0x4
 3193 043f F3       		.byte	0xf3
 3194 0440 01       		.uleb128 0x1
 3195 0441 50       		.byte	0x50
 3196 0442 9F       		.byte	0x9f
 3197 0443 00000000 		.4byte	0
 3198 0447 00000000 		.4byte	0
 3199              	.LLST35:
 3200 044b 08000000 		.4byte	.LVL69
 3201 044f 1D000000 		.4byte	.LVL71-1
 3202 0453 0100     		.2byte	0x1
 3203 0455 50       		.byte	0x50
 3204 0456 00000000 		.4byte	0
 3205 045a 00000000 		.4byte	0
 3206              	.LLST36:
 3207 045e 00000000 		.4byte	.LVL72
 3208 0462 07000000 		.4byte	.LVL73-1
 3209 0466 0100     		.2byte	0x1
 3210 0468 50       		.byte	0x50
 3211 0469 07000000 		.4byte	.LVL73-1
 3212 046d 16000000 		.4byte	.LVL74
 3213 0471 0100     		.2byte	0x1
 3214 0473 54       		.byte	0x54
 3215 0474 16000000 		.4byte	.LVL74
 3216 0478 24000000 		.4byte	.LFE33
 3217 047c 0400     		.2byte	0x4
 3218 047e F3       		.byte	0xf3
 3219 047f 01       		.uleb128 0x1
 3220 0480 50       		.byte	0x50
 3221 0481 9F       		.byte	0x9f
 3222 0482 00000000 		.4byte	0
 3223 0486 00000000 		.4byte	0
 3224              	.LLST37:
 3225 048a 08000000 		.4byte	.LVL73
 3226 048e 1D000000 		.4byte	.LVL75-1
 3227 0492 0100     		.2byte	0x1
 3228 0494 50       		.byte	0x50
 3229 0495 00000000 		.4byte	0
 3230 0499 00000000 		.4byte	0
 3231              	.LLST38:
 3232 049d 00000000 		.4byte	.LVL76
 3233 04a1 07000000 		.4byte	.LVL77-1
 3234 04a5 0100     		.2byte	0x1
 3235 04a7 50       		.byte	0x50
 3236 04a8 07000000 		.4byte	.LVL77-1
 3237 04ac 16000000 		.4byte	.LVL78
 3238 04b0 0100     		.2byte	0x1
 3239 04b2 54       		.byte	0x54
 3240 04b3 16000000 		.4byte	.LVL78
 3241 04b7 24000000 		.4byte	.LFE34
 3242 04bb 0400     		.2byte	0x4
 3243 04bd F3       		.byte	0xf3
 3244 04be 01       		.uleb128 0x1
 3245 04bf 50       		.byte	0x50
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 83


 3246 04c0 9F       		.byte	0x9f
 3247 04c1 00000000 		.4byte	0
 3248 04c5 00000000 		.4byte	0
 3249              	.LLST39:
 3250 04c9 08000000 		.4byte	.LVL77
 3251 04cd 1D000000 		.4byte	.LVL79-1
 3252 04d1 0100     		.2byte	0x1
 3253 04d3 50       		.byte	0x50
 3254 04d4 00000000 		.4byte	0
 3255 04d8 00000000 		.4byte	0
 3256              	.LLST40:
 3257 04dc 00000000 		.4byte	.LVL80
 3258 04e0 09000000 		.4byte	.LVL81-1
 3259 04e4 0100     		.2byte	0x1
 3260 04e6 50       		.byte	0x50
 3261 04e7 09000000 		.4byte	.LVL81-1
 3262 04eb 0C000000 		.4byte	.LVL82
 3263 04ef 0100     		.2byte	0x1
 3264 04f1 54       		.byte	0x54
 3265 04f2 0C000000 		.4byte	.LVL82
 3266 04f6 1C000000 		.4byte	.LFE35
 3267 04fa 0400     		.2byte	0x4
 3268 04fc F3       		.byte	0xf3
 3269 04fd 01       		.uleb128 0x1
 3270 04fe 50       		.byte	0x50
 3271 04ff 9F       		.byte	0x9f
 3272 0500 00000000 		.4byte	0
 3273 0504 00000000 		.4byte	0
 3274              	.LLST41:
 3275 0508 00000000 		.4byte	.LVL80
 3276 050c 09000000 		.4byte	.LVL81-1
 3277 0510 0100     		.2byte	0x1
 3278 0512 51       		.byte	0x51
 3279 0513 09000000 		.4byte	.LVL81-1
 3280 0517 14000000 		.4byte	.LVL84
 3281 051b 0100     		.2byte	0x1
 3282 051d 55       		.byte	0x55
 3283 051e 14000000 		.4byte	.LVL84
 3284 0522 1C000000 		.4byte	.LFE35
 3285 0526 0400     		.2byte	0x4
 3286 0528 F3       		.byte	0xf3
 3287 0529 01       		.uleb128 0x1
 3288 052a 51       		.byte	0x51
 3289 052b 9F       		.byte	0x9f
 3290 052c 00000000 		.4byte	0
 3291 0530 00000000 		.4byte	0
 3292              	.LLST42:
 3293 0534 0A000000 		.4byte	.LVL81
 3294 0538 13000000 		.4byte	.LVL83-1
 3295 053c 0100     		.2byte	0x1
 3296 053e 50       		.byte	0x50
 3297 053f 00000000 		.4byte	0
 3298 0543 00000000 		.4byte	0
 3299              		.section	.debug_aranges,"",%progbits
 3300 0000 54010000 		.4byte	0x154
 3301 0004 0200     		.2byte	0x2
 3302 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 84


 3303 000a 04       		.byte	0x4
 3304 000b 00       		.byte	0
 3305 000c 0000     		.2byte	0
 3306 000e 0000     		.2byte	0
 3307 0010 00000000 		.4byte	.LFB3
 3308 0014 1C000000 		.4byte	.LFE3-.LFB3
 3309 0018 00000000 		.4byte	.LFB5
 3310 001c 1C000000 		.4byte	.LFE5-.LFB5
 3311 0020 00000000 		.4byte	.LFB6
 3312 0024 28000000 		.4byte	.LFE6-.LFB6
 3313 0028 00000000 		.4byte	.LFB7
 3314 002c 28000000 		.4byte	.LFE7-.LFB7
 3315 0030 00000000 		.4byte	.LFB8
 3316 0034 28000000 		.4byte	.LFE8-.LFB8
 3317 0038 00000000 		.4byte	.LFB9
 3318 003c 30000000 		.4byte	.LFE9-.LFB9
 3319 0040 00000000 		.4byte	.LFB10
 3320 0044 10000000 		.4byte	.LFE10-.LFB10
 3321 0048 00000000 		.4byte	.LFB11
 3322 004c 28000000 		.4byte	.LFE11-.LFB11
 3323 0050 00000000 		.4byte	.LFB12
 3324 0054 28000000 		.4byte	.LFE12-.LFB12
 3325 0058 00000000 		.4byte	.LFB13
 3326 005c 2C000000 		.4byte	.LFE13-.LFB13
 3327 0060 00000000 		.4byte	.LFB14
 3328 0064 28000000 		.4byte	.LFE14-.LFB14
 3329 0068 00000000 		.4byte	.LFB15
 3330 006c 10000000 		.4byte	.LFE15-.LFB15
 3331 0070 00000000 		.4byte	.LFB16
 3332 0074 10000000 		.4byte	.LFE16-.LFB16
 3333 0078 00000000 		.4byte	.LFB17
 3334 007c 28000000 		.4byte	.LFE17-.LFB17
 3335 0080 00000000 		.4byte	.LFB18
 3336 0084 10000000 		.4byte	.LFE18-.LFB18
 3337 0088 00000000 		.4byte	.LFB19
 3338 008c 10000000 		.4byte	.LFE19-.LFB19
 3339 0090 00000000 		.4byte	.LFB20
 3340 0094 24000000 		.4byte	.LFE20-.LFB20
 3341 0098 00000000 		.4byte	.LFB21
 3342 009c 10000000 		.4byte	.LFE21-.LFB21
 3343 00a0 00000000 		.4byte	.LFB22
 3344 00a4 10000000 		.4byte	.LFE22-.LFB22
 3345 00a8 00000000 		.4byte	.LFB23
 3346 00ac 28000000 		.4byte	.LFE23-.LFB23
 3347 00b0 00000000 		.4byte	.LFB24
 3348 00b4 10000000 		.4byte	.LFE24-.LFB24
 3349 00b8 00000000 		.4byte	.LFB25
 3350 00bc 10000000 		.4byte	.LFE25-.LFB25
 3351 00c0 00000000 		.4byte	.LFB26
 3352 00c4 10000000 		.4byte	.LFE26-.LFB26
 3353 00c8 00000000 		.4byte	.LFB27
 3354 00cc 10000000 		.4byte	.LFE27-.LFB27
 3355 00d0 00000000 		.4byte	.LFB28
 3356 00d4 10000000 		.4byte	.LFE28-.LFB28
 3357 00d8 00000000 		.4byte	.LFB29
 3358 00dc 10000000 		.4byte	.LFE29-.LFB29
 3359 00e0 00000000 		.4byte	.LFB30
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 85


 3360 00e4 24000000 		.4byte	.LFE30-.LFB30
 3361 00e8 00000000 		.4byte	.LFB31
 3362 00ec 24000000 		.4byte	.LFE31-.LFB31
 3363 00f0 00000000 		.4byte	.LFB32
 3364 00f4 28000000 		.4byte	.LFE32-.LFB32
 3365 00f8 00000000 		.4byte	.LFB33
 3366 00fc 24000000 		.4byte	.LFE33-.LFB33
 3367 0100 00000000 		.4byte	.LFB34
 3368 0104 24000000 		.4byte	.LFE34-.LFB34
 3369 0108 00000000 		.4byte	.LFB35
 3370 010c 1C000000 		.4byte	.LFE35-.LFB35
 3371 0110 00000000 		.4byte	.LFB36
 3372 0114 14000000 		.4byte	.LFE36-.LFB36
 3373 0118 00000000 		.4byte	.LFB37
 3374 011c 0C000000 		.4byte	.LFE37-.LFB37
 3375 0120 00000000 		.4byte	.LFB2
 3376 0124 3C000000 		.4byte	.LFE2-.LFB2
 3377 0128 00000000 		.4byte	.LFB4
 3378 012c 20000000 		.4byte	.LFE4-.LFB4
 3379 0130 00000000 		.4byte	.LFB38
 3380 0134 0C000000 		.4byte	.LFE38-.LFB38
 3381 0138 00000000 		.4byte	.LFB39
 3382 013c 0C000000 		.4byte	.LFE39-.LFB39
 3383 0140 00000000 		.4byte	.LFB40
 3384 0144 0C000000 		.4byte	.LFE40-.LFB40
 3385 0148 00000000 		.4byte	.LFB41
 3386 014c 0C000000 		.4byte	.LFE41-.LFB41
 3387 0150 00000000 		.4byte	0
 3388 0154 00000000 		.4byte	0
 3389              		.section	.debug_ranges,"",%progbits
 3390              	.Ldebug_ranges0:
 3391 0000 00000000 		.4byte	.LFB3
 3392 0004 1C000000 		.4byte	.LFE3
 3393 0008 00000000 		.4byte	.LFB5
 3394 000c 1C000000 		.4byte	.LFE5
 3395 0010 00000000 		.4byte	.LFB6
 3396 0014 28000000 		.4byte	.LFE6
 3397 0018 00000000 		.4byte	.LFB7
 3398 001c 28000000 		.4byte	.LFE7
 3399 0020 00000000 		.4byte	.LFB8
 3400 0024 28000000 		.4byte	.LFE8
 3401 0028 00000000 		.4byte	.LFB9
 3402 002c 30000000 		.4byte	.LFE9
 3403 0030 00000000 		.4byte	.LFB10
 3404 0034 10000000 		.4byte	.LFE10
 3405 0038 00000000 		.4byte	.LFB11
 3406 003c 28000000 		.4byte	.LFE11
 3407 0040 00000000 		.4byte	.LFB12
 3408 0044 28000000 		.4byte	.LFE12
 3409 0048 00000000 		.4byte	.LFB13
 3410 004c 2C000000 		.4byte	.LFE13
 3411 0050 00000000 		.4byte	.LFB14
 3412 0054 28000000 		.4byte	.LFE14
 3413 0058 00000000 		.4byte	.LFB15
 3414 005c 10000000 		.4byte	.LFE15
 3415 0060 00000000 		.4byte	.LFB16
 3416 0064 10000000 		.4byte	.LFE16
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 86


 3417 0068 00000000 		.4byte	.LFB17
 3418 006c 28000000 		.4byte	.LFE17
 3419 0070 00000000 		.4byte	.LFB18
 3420 0074 10000000 		.4byte	.LFE18
 3421 0078 00000000 		.4byte	.LFB19
 3422 007c 10000000 		.4byte	.LFE19
 3423 0080 00000000 		.4byte	.LFB20
 3424 0084 24000000 		.4byte	.LFE20
 3425 0088 00000000 		.4byte	.LFB21
 3426 008c 10000000 		.4byte	.LFE21
 3427 0090 00000000 		.4byte	.LFB22
 3428 0094 10000000 		.4byte	.LFE22
 3429 0098 00000000 		.4byte	.LFB23
 3430 009c 28000000 		.4byte	.LFE23
 3431 00a0 00000000 		.4byte	.LFB24
 3432 00a4 10000000 		.4byte	.LFE24
 3433 00a8 00000000 		.4byte	.LFB25
 3434 00ac 10000000 		.4byte	.LFE25
 3435 00b0 00000000 		.4byte	.LFB26
 3436 00b4 10000000 		.4byte	.LFE26
 3437 00b8 00000000 		.4byte	.LFB27
 3438 00bc 10000000 		.4byte	.LFE27
 3439 00c0 00000000 		.4byte	.LFB28
 3440 00c4 10000000 		.4byte	.LFE28
 3441 00c8 00000000 		.4byte	.LFB29
 3442 00cc 10000000 		.4byte	.LFE29
 3443 00d0 00000000 		.4byte	.LFB30
 3444 00d4 24000000 		.4byte	.LFE30
 3445 00d8 00000000 		.4byte	.LFB31
 3446 00dc 24000000 		.4byte	.LFE31
 3447 00e0 00000000 		.4byte	.LFB32
 3448 00e4 28000000 		.4byte	.LFE32
 3449 00e8 00000000 		.4byte	.LFB33
 3450 00ec 24000000 		.4byte	.LFE33
 3451 00f0 00000000 		.4byte	.LFB34
 3452 00f4 24000000 		.4byte	.LFE34
 3453 00f8 00000000 		.4byte	.LFB35
 3454 00fc 1C000000 		.4byte	.LFE35
 3455 0100 00000000 		.4byte	.LFB36
 3456 0104 14000000 		.4byte	.LFE36
 3457 0108 00000000 		.4byte	.LFB37
 3458 010c 0C000000 		.4byte	.LFE37
 3459 0110 00000000 		.4byte	.LFB2
 3460 0114 3C000000 		.4byte	.LFE2
 3461 0118 00000000 		.4byte	.LFB4
 3462 011c 20000000 		.4byte	.LFE4
 3463 0120 00000000 		.4byte	.LFB38
 3464 0124 0C000000 		.4byte	.LFE38
 3465 0128 00000000 		.4byte	.LFB39
 3466 012c 0C000000 		.4byte	.LFE39
 3467 0130 00000000 		.4byte	.LFB40
 3468 0134 0C000000 		.4byte	.LFE40
 3469 0138 00000000 		.4byte	.LFB41
 3470 013c 0C000000 		.4byte	.LFE41
 3471 0140 00000000 		.4byte	0
 3472 0144 00000000 		.4byte	0
 3473              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 87


 3474              	.Ldebug_line0:
 3475 0000 73030000 		.section	.debug_str,"MS",%progbits,1
 3475      02004D00 
 3475      00000201 
 3475      FB0E0D00 
 3475      01010101 
 3476              	.LASF32:
 3477 0000 54696D65 		.ascii	"Timer_SetPWMStopOnKill\000"
 3477      725F5365 
 3477      7450574D 
 3477      53746F70 
 3477      4F6E4B69 
 3478              	.LASF39:
 3479 0017 636F756E 		.ascii	"count\000"
 3479      7400
 3480              	.LASF74:
 3481 001d 54696D65 		.ascii	"Timer_GetInterruptSource\000"
 3481      725F4765 
 3481      74496E74 
 3481      65727275 
 3481      7074536F 
 3482              	.LASF78:
 3483 0036 43794578 		.ascii	"CyExitCriticalSection\000"
 3483      69744372 
 3483      69746963 
 3483      616C5365 
 3483      6374696F 
 3484              	.LASF81:
 3485 004c 433A5C55 		.ascii	"C:\\Users\\first processor\\Desktop\\Showcase\\Show"
 3485      73657273 
 3485      5C666972 
 3485      73742070 
 3485      726F6365 
 3486 007a 63617365 		.ascii	"case\\UltraRangeSensor.cydsn\000"
 3486      5C556C74 
 3486      72615261 
 3486      6E676553 
 3486      656E736F 
 3487              	.LASF42:
 3488 0096 54696D65 		.ascii	"Timer_WritePeriod\000"
 3488      725F5772 
 3488      69746550 
 3488      6572696F 
 3488      6400
 3489              	.LASF76:
 3490 00a8 54696D65 		.ascii	"Timer_SetInterrupt\000"
 3490      725F5365 
 3490      74496E74 
 3490      65727275 
 3490      707400
 3491              	.LASF79:
 3492 00bb 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3492      43313120 
 3492      352E342E 
 3492      31203230 
 3492      31363036 
 3493 00ee 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 88


 3493      20726576 
 3493      6973696F 
 3493      6E203233 
 3493      37373135 
 3494 0121 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3494      66756E63 
 3494      74696F6E 
 3494      2D736563 
 3494      74696F6E 
 3495              	.LASF43:
 3496 0149 70657269 		.ascii	"period\000"
 3496      6F6400
 3497              	.LASF20:
 3498 0150 54696D65 		.ascii	"Timer_SetMode\000"
 3498      725F5365 
 3498      744D6F64 
 3498      6500
 3499              	.LASF82:
 3500 015e 54696D65 		.ascii	"Timer_initVar\000"
 3500      725F696E 
 3500      69745661 
 3500      7200
 3501              	.LASF7:
 3502 016c 6C6F6E67 		.ascii	"long long unsigned int\000"
 3502      206C6F6E 
 3502      6720756E 
 3502      7369676E 
 3502      65642069 
 3503              	.LASF34:
 3504 0183 54696D65 		.ascii	"Timer_SetPWMDeadTime\000"
 3504      725F5365 
 3504      7450574D 
 3504      44656164 
 3504      54696D65 
 3505              	.LASF30:
 3506 0198 54696D65 		.ascii	"Timer_SetPWMSyncKill\000"
 3506      725F5365 
 3506      7450574D 
 3506      53796E63 
 3506      4B696C6C 
 3507              	.LASF23:
 3508 01ad 71644D6F 		.ascii	"qdMode\000"
 3508      646500
 3509              	.LASF6:
 3510 01b4 6C6F6E67 		.ascii	"long long int\000"
 3510      206C6F6E 
 3510      6720696E 
 3510      7400
 3511              	.LASF0:
 3512 01c2 7369676E 		.ascii	"signed char\000"
 3512      65642063 
 3512      68617200 
 3513              	.LASF21:
 3514 01ce 54696D65 		.ascii	"Timer_SetQDMode\000"
 3514      725F5365 
 3514      7451444D 
 3514      6F646500 
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 89


 3515              	.LASF65:
 3516 01de 54696D65 		.ascii	"Timer_SetCountMode\000"
 3516      725F5365 
 3516      74436F75 
 3516      6E744D6F 
 3516      646500
 3517              	.LASF53:
 3518 01f1 636F6D70 		.ascii	"compare\000"
 3518      61726500 
 3519              	.LASF4:
 3520 01f9 6C6F6E67 		.ascii	"long int\000"
 3520      20696E74 
 3520      00
 3521              	.LASF58:
 3522 0202 54696D65 		.ascii	"Timer_ReadCapture\000"
 3522      725F5265 
 3522      61644361 
 3522      70747572 
 3522      6500
 3523              	.LASF66:
 3524 0214 54696D65 		.ascii	"Timer_TriggerCommand\000"
 3524      725F5472 
 3524      69676765 
 3524      72436F6D 
 3524      6D616E64 
 3525              	.LASF9:
 3526 0229 75696E74 		.ascii	"uint8\000"
 3526      3800
 3527              	.LASF12:
 3528 022f 646F7562 		.ascii	"double\000"
 3528      6C6500
 3529              	.LASF69:
 3530 0236 54696D65 		.ascii	"Timer_SetInterruptMode\000"
 3530      725F5365 
 3530      74496E74 
 3530      65727275 
 3530      70744D6F 
 3531              	.LASF10:
 3532 024d 75696E74 		.ascii	"uint32\000"
 3532      333200
 3533              	.LASF52:
 3534 0254 54696D65 		.ascii	"Timer_WriteCompare\000"
 3534      725F5772 
 3534      69746543 
 3534      6F6D7061 
 3534      726500
 3535              	.LASF61:
 3536 0267 74726967 		.ascii	"triggerMode\000"
 3536      6765724D 
 3536      6F646500 
 3537              	.LASF37:
 3538 0273 6D61736B 		.ascii	"mask\000"
 3538      00
 3539              	.LASF54:
 3540 0278 54696D65 		.ascii	"Timer_ReadCompare\000"
 3540      725F5265 
 3540      6164436F 
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 90


 3540      6D706172 
 3540      6500
 3541              	.LASF35:
 3542 028a 64656164 		.ascii	"deadTime\000"
 3542      54696D65 
 3542      00
 3543              	.LASF55:
 3544 0293 54696D65 		.ascii	"Timer_WriteCompareBuf\000"
 3544      725F5772 
 3544      69746543 
 3544      6F6D7061 
 3544      72654275 
 3545              	.LASF8:
 3546 02a9 756E7369 		.ascii	"unsigned int\000"
 3546      676E6564 
 3546      20696E74 
 3546      00
 3547              	.LASF72:
 3548 02b6 54696D65 		.ascii	"Timer_Start\000"
 3548      725F5374 
 3548      61727400 
 3549              	.LASF67:
 3550 02c2 636F6D6D 		.ascii	"command\000"
 3550      616E6400 
 3551              	.LASF5:
 3552 02ca 6C6F6E67 		.ascii	"long unsigned int\000"
 3552      20756E73 
 3552      69676E65 
 3552      6420696E 
 3552      7400
 3553              	.LASF29:
 3554 02dc 6D6F6465 		.ascii	"modeMask\000"
 3554      4D61736B 
 3554      00
 3555              	.LASF17:
 3556 02e5 54696D65 		.ascii	"Timer_Enable\000"
 3556      725F456E 
 3556      61626C65 
 3556      00
 3557              	.LASF77:
 3558 02f2 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3558      74657243 
 3558      72697469 
 3558      63616C53 
 3558      65637469 
 3559              	.LASF3:
 3560 0309 73686F72 		.ascii	"short unsigned int\000"
 3560      7420756E 
 3560      7369676E 
 3560      65642069 
 3560      6E7400
 3561              	.LASF38:
 3562 031c 54696D65 		.ascii	"Timer_WriteCounter\000"
 3562      725F5772 
 3562      69746543 
 3562      6F756E74 
 3562      657200
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 91


 3563              	.LASF44:
 3564 032f 54696D65 		.ascii	"Timer_ReadCounter\000"
 3564      725F5265 
 3564      6164436F 
 3564      756E7465 
 3564      7200
 3565              	.LASF18:
 3566 0341 54696D65 		.ascii	"Timer_Stop\000"
 3566      725F5374 
 3566      6F7000
 3567              	.LASF27:
 3568 034c 6F6E6553 		.ascii	"oneShotEnable\000"
 3568      686F7445 
 3568      6E61626C 
 3568      6500
 3569              	.LASF73:
 3570 035a 54696D65 		.ascii	"Timer_GetInterruptSourceMasked\000"
 3570      725F4765 
 3570      74496E74 
 3570      65727275 
 3570      7074536F 
 3571              	.LASF14:
 3572 0379 72656733 		.ascii	"reg32\000"
 3572      3200
 3573              	.LASF46:
 3574 037f 54696D65 		.ascii	"Timer_SetCompareSwap\000"
 3574      725F5365 
 3574      74436F6D 
 3574      70617265 
 3574      53776170 
 3575              	.LASF16:
 3576 0394 73697A65 		.ascii	"sizetype\000"
 3576      74797065 
 3576      00
 3577              	.LASF48:
 3578 039d 54696D65 		.ascii	"Timer_WritePeriodBuf\000"
 3578      725F5772 
 3578      69746550 
 3578      6572696F 
 3578      64427566 
 3579              	.LASF15:
 3580 03b2 6C6F6E67 		.ascii	"long double\000"
 3580      20646F75 
 3580      626C6500 
 3581              	.LASF36:
 3582 03be 54696D65 		.ascii	"Timer_SetPWMInvert\000"
 3582      725F5365 
 3582      7450574D 
 3582      496E7665 
 3582      727400
 3583              	.LASF50:
 3584 03d1 54696D65 		.ascii	"Timer_ReadPeriodBuf\000"
 3584      725F5265 
 3584      61645065 
 3584      72696F64 
 3584      42756600 
 3585              	.LASF63:
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 92


 3586 03e5 54696D65 		.ascii	"Timer_SetStartMode\000"
 3586      725F5365 
 3586      74537461 
 3586      72744D6F 
 3586      646500
 3587              	.LASF11:
 3588 03f8 666C6F61 		.ascii	"float\000"
 3588      7400
 3589              	.LASF25:
 3590 03fe 70726573 		.ascii	"prescaler\000"
 3590      63616C65 
 3590      7200
 3591              	.LASF64:
 3592 0408 54696D65 		.ascii	"Timer_SetStopMode\000"
 3592      725F5365 
 3592      7453746F 
 3592      704D6F64 
 3592      6500
 3593              	.LASF51:
 3594 041a 54696D65 		.ascii	"Timer_SetPeriodSwap\000"
 3594      725F5365 
 3594      74506572 
 3594      696F6453 
 3594      77617000 
 3595              	.LASF59:
 3596 042e 54696D65 		.ascii	"Timer_ReadCaptureBuf\000"
 3596      725F5265 
 3596      61644361 
 3596      70747572 
 3596      65427566 
 3597              	.LASF68:
 3598 0443 54696D65 		.ascii	"Timer_ReadStatus\000"
 3598      725F5265 
 3598      61645374 
 3598      61747573 
 3598      00
 3599              	.LASF1:
 3600 0454 756E7369 		.ascii	"unsigned char\000"
 3600      676E6564 
 3600      20636861 
 3600      7200
 3601              	.LASF33:
 3602 0462 73746F70 		.ascii	"stopOnKillEnable\000"
 3602      4F6E4B69 
 3602      6C6C456E 
 3602      61626C65 
 3602      00
 3603              	.LASF2:
 3604 0473 73686F72 		.ascii	"short int\000"
 3604      7420696E 
 3604      7400
 3605              	.LASF70:
 3606 047d 696E7465 		.ascii	"interruptMask\000"
 3606      72727570 
 3606      744D6173 
 3606      6B00
 3607              	.LASF24:
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 93


 3608 048b 54696D65 		.ascii	"Timer_SetPrescaler\000"
 3608      725F5365 
 3608      74507265 
 3608      7363616C 
 3608      657200
 3609              	.LASF71:
 3610 049e 54696D65 		.ascii	"Timer_Init\000"
 3610      725F496E 
 3610      697400
 3611              	.LASF40:
 3612 04a9 54696D65 		.ascii	"Timer_SetCounterMode\000"
 3612      725F5365 
 3612      74436F75 
 3612      6E746572 
 3612      4D6F6465 
 3613              	.LASF13:
 3614 04be 63686172 		.ascii	"char\000"
 3614      00
 3615              	.LASF22:
 3616 04c3 6D6F6465 		.ascii	"mode\000"
 3616      00
 3617              	.LASF62:
 3618 04c8 54696D65 		.ascii	"Timer_SetReloadMode\000"
 3618      725F5365 
 3618      7452656C 
 3618      6F61644D 
 3618      6F646500 
 3619              	.LASF41:
 3620 04dc 636F756E 		.ascii	"counterMode\000"
 3620      7465724D 
 3620      6F646500 
 3621              	.LASF45:
 3622 04e8 54696D65 		.ascii	"Timer_ReadPeriod\000"
 3622      725F5265 
 3622      61645065 
 3622      72696F64 
 3622      00
 3623              	.LASF56:
 3624 04f9 636F6D70 		.ascii	"compareBuf\000"
 3624      61726542 
 3624      756600
 3625              	.LASF80:
 3626 0504 47656E65 		.ascii	"Generated_Source\\PSoC4\\Timer.c\000"
 3626      72617465 
 3626      645F536F 
 3626      75726365 
 3626      5C50536F 
 3627              	.LASF19:
 3628 0523 656E6162 		.ascii	"enableInterrupts\000"
 3628      6C65496E 
 3628      74657272 
 3628      75707473 
 3628      00
 3629              	.LASF60:
 3630 0534 54696D65 		.ascii	"Timer_SetCaptureMode\000"
 3630      725F5365 
 3630      74436170 
ARM GAS  C:\Users\FIRSTP~1\AppData\Local\Temp\ccZK65gX.s 			page 94


 3630      74757265 
 3630      4D6F6465 
 3631              	.LASF26:
 3632 0549 54696D65 		.ascii	"Timer_SetOneShot\000"
 3632      725F5365 
 3632      744F6E65 
 3632      53686F74 
 3632      00
 3633              	.LASF31:
 3634 055a 73796E63 		.ascii	"syncKillEnable\000"
 3634      4B696C6C 
 3634      456E6162 
 3634      6C6500
 3635              	.LASF75:
 3636 0569 54696D65 		.ascii	"Timer_ClearInterrupt\000"
 3636      725F436C 
 3636      65617249 
 3636      6E746572 
 3636      72757074 
 3637              	.LASF47:
 3638 057e 73776170 		.ascii	"swapEnable\000"
 3638      456E6162 
 3638      6C6500
 3639              	.LASF49:
 3640 0589 70657269 		.ascii	"periodBuf\000"
 3640      6F644275 
 3640      6600
 3641              	.LASF28:
 3642 0593 54696D65 		.ascii	"Timer_SetPWMMode\000"
 3642      725F5365 
 3642      7450574D 
 3642      4D6F6465 
 3642      00
 3643              	.LASF57:
 3644 05a4 54696D65 		.ascii	"Timer_ReadCompareBuf\000"
 3644      725F5265 
 3644      6164436F 
 3644      6D706172 
 3644      65427566 
 3645              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
